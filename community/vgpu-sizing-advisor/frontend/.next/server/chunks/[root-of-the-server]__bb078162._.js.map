{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/api/utils/api-utils.ts"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NextResponse } from \"next/server\";\nimport { BaseResponse } from \"@/types/common\";\n\nexport class APIError extends Error {\n  constructor(\n    public message: string,\n    public statusCode: number = 500,\n    public details?: any\n  ) {\n    super(message);\n    this.name = \"APIError\";\n  }\n}\n\nexport function createSuccessResponse<T extends BaseResponse>(\n  data: T,\n  status: number = 200\n) {\n  return NextResponse.json(data, { status });\n}\n\nexport function createErrorResponse(error: unknown) {\n  if (error instanceof APIError) {\n    return NextResponse.json(\n      { error: error.message, details: error.details },\n      { status: error.statusCode }\n    );\n  }\n\n  console.error(\"Unhandled error:\", error);\n  return NextResponse.json({ error: \"Internal server error\" }, { status: 500 });\n}\n\nexport function validateRequiredFields(obj: any, fields: string[]) {\n  const missingFields = fields.filter((field) => !obj[field]);\n  if (missingFields.length > 0) {\n    throw new APIError(\n      `Missing required fields: ${missingFields.join(\", \")}`,\n      400\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;AAEjC;;AAGO,MAAM,iBAAiB;;;;IAC5B,YACE,AAAO,OAAe,EACtB,AAAO,aAAqB,GAAG,EAC/B,AAAO,OAAa,CACpB;QACA,KAAK,CAAC,eAJC,UAAA,cACA,aAAA,iBACA,UAAA;QAGP,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,SAAS,sBACd,IAAO,EACP,SAAiB,GAAG;IAEpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;QAAE;IAAO;AAC1C;AAEO,SAAS,oBAAoB,KAAc;IAChD,IAAI,iBAAiB,UAAU;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,MAAM,OAAO;YAAE,SAAS,MAAM,OAAO;QAAC,GAC/C;YAAE,QAAQ,MAAM,UAAU;QAAC;IAE/B;IAEA,QAAQ,KAAK,CAAC,oBAAoB;IAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAwB,GAAG;QAAE,QAAQ;IAAI;AAC7E;AAEO,SAAS,uBAAuB,GAAQ,EAAE,MAAgB;IAC/D,MAAM,gBAAgB,OAAO,MAAM,CAAC,CAAC,QAAU,CAAC,GAAG,CAAC,MAAM;IAC1D,IAAI,cAAc,MAAM,GAAG,GAAG;QAC5B,MAAM,IAAI,SACR,CAAC,yBAAyB,EAAE,cAAc,IAAI,CAAC,OAAO,EACtD;IAEJ;AACF","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/config/api.ts"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// API Configuration\n\nexport const API_CONFIG = {\n  VDB: {\n    BASE_URL:\n      process.env.NEXT_PUBLIC_VDB_BASE_URL ?? \"http://localhost:8082/v1\",\n    ENDPOINTS: {\n      DOCUMENTS: {\n        LIST: \"/documents\",\n        UPLOAD: \"/documents\",\n        DELETE: \"/documents\",\n      },\n      COLLECTIONS: {\n        LIST: \"/collections\",\n        CREATE: \"/collections\",\n        DELETE: \"/collections\",\n      },\n    },\n    VDB_ENDPOINT: process.env.NEXT_PUBLIC_VDB_ENDPOINT ?? \"http://milvus:19530\",\n  },\n  CHAT: {\n    BASE_URL:\n      process.env.NEXT_PUBLIC_CHAT_BASE_URL ?? \"http://localhost:8081/v1\",\n    ENDPOINTS: {\n      RAG: {\n        GENERATE: \"/generate\",\n        CHAT_COMPLETIONS: \"/chat/completions\",\n      },\n      SEARCH: {\n        QUERY: \"/search\",\n      },\n    },\n  },\n};\n\n// Helper function to build a URL with query parameters\nexport const buildQueryUrl = (\n  url: string,\n  params: Record<string, string | number>\n) => {\n  const queryParams = new URLSearchParams();\n\n  queryParams.append(\"vdb_endpoint\", API_CONFIG.VDB.VDB_ENDPOINT);\n\n  // Add other params\n  Object.entries(params).forEach(([key, value]) => {\n    queryParams.append(key, value.toString());\n  });\n\n  return `${url}?${queryParams.toString()}`;\n};\n\n// Helper function to create a Message object\nexport interface ChatMessage {\n  role: \"user\" | \"assistant\" | \"system\";\n  content: string;\n}\n\nexport const createMessage = (\n  role: \"user\" | \"assistant\" | \"system\",\n  content: string\n): ChatMessage => ({\n  role,\n  content,\n});\n"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAEjC,oBAAoB;;;;;;AAEb,MAAM,aAAa;IACxB,KAAK;QACH,UACE,QAAQ,GAAG,CAAC,wBAAwB,IAAI;QAC1C,WAAW;YACT,WAAW;gBACT,MAAM;gBACN,QAAQ;gBACR,QAAQ;YACV;YACA,aAAa;gBACX,MAAM;gBACN,QAAQ;gBACR,QAAQ;YACV;QACF;QACA,cAAc,QAAQ,GAAG,CAAC,wBAAwB,IAAI;IACxD;IACA,MAAM;QACJ,UACE,QAAQ,GAAG,CAAC,yBAAyB,IAAI;QAC3C,WAAW;YACT,KAAK;gBACH,UAAU;gBACV,kBAAkB;YACpB;YACA,QAAQ;gBACN,OAAO;YACT;QACF;IACF;AACF;AAGO,MAAM,gBAAgB,CAC3B,KACA;IAEA,MAAM,cAAc,IAAI;IAExB,YAAY,MAAM,CAAC,gBAAgB,WAAW,GAAG,CAAC,YAAY;IAE9D,mBAAmB;IACnB,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;QAC1C,YAAY,MAAM,CAAC,KAAK,MAAM,QAAQ;IACxC;IAEA,OAAO,GAAG,IAAI,CAAC,EAAE,YAAY,QAAQ,IAAI;AAC3C;AAQO,MAAM,gBAAgB,CAC3B,MACA,UACgB,CAAC;QACjB;QACA;IACF,CAAC","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/api/generate/route.ts"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NextRequest } from \"next/server\";\nimport { GenerateRequest } from \"@/types/chat\";\nimport { APIError, createErrorResponse } from \"../utils/api-utils\";\nimport { API_CONFIG } from \"@/app/config/api\";\n\nconst RAG_API_URL = `${API_CONFIG.CHAT.BASE_URL}${API_CONFIG.CHAT.ENDPOINTS.RAG.GENERATE}`;\n\n// POST /generate - Get response for a given query\nexport async function POST(request: NextRequest) {\n  try {\n    const body: GenerateRequest = await request.json();\n\n    if (!body.messages || body.messages.length === 0) {\n      throw new APIError(\"messages array is required and cannot be empty\", 400);\n    }\n\n    // Forward the request to the RAG API and stream the response\n    const response = await fetch(RAG_API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    if (!response.ok) {\n      throw new APIError(\n        `RAG API error: ${response.statusText}`,\n        response.status,\n        await response.text()\n      );\n    }\n\n    // Set up SSE response\n    const stream = new ReadableStream({\n      async start(controller) {\n        const reader = response.body?.getReader();\n        if (!reader) throw new Error(\"No response body\");\n\n        try {\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            // Decode and log the chunk\n            const text = new TextDecoder().decode(value);\n            console.log(\"Streaming chunk:\", text);\n\n            // Forward the chunks as they come\n            controller.enqueue(value);\n          }\n        } finally {\n          reader.releaseLock();\n          controller.close();\n        }\n      },\n    });\n\n    return new Response(stream, {\n      headers: {\n        \"Content-Type\": \"text/event-stream\",\n        \"Cache-Control\": \"no-cache\",\n        Connection: \"keep-alive\",\n      },\n    });\n  } catch (error) {\n    console.error(\"Error in generate route:\", error);\n    return createErrorResponse(error);\n  }\n}\n"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAIjC;AACA;;;AAEA,MAAM,cAAc,GAAG,6HAAA,CAAA,aAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,6HAAA,CAAA,aAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE;AAGnF,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAwB,MAAM,QAAQ,IAAI;QAEhD,IAAI,CAAC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,MAAM,KAAK,GAAG;YAChD,MAAM,IAAI,4IAAA,CAAA,WAAQ,CAAC,kDAAkD;QACvE;QAEA,6DAA6D;QAC7D,MAAM,WAAW,MAAM,MAAM,aAAa;YACxC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,4IAAA,CAAA,WAAQ,CAChB,CAAC,eAAe,EAAE,SAAS,UAAU,EAAE,EACvC,SAAS,MAAM,EACf,MAAM,SAAS,IAAI;QAEvB;QAEA,sBAAsB;QACtB,MAAM,SAAS,IAAI,eAAe;YAChC,MAAM,OAAM,UAAU;gBACpB,MAAM,SAAS,SAAS,IAAI,EAAE;gBAC9B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;gBAE7B,IAAI;oBACF,MAAO,KAAM;wBACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,IAAI;wBACzC,IAAI,MAAM;wBAEV,2BAA2B;wBAC3B,MAAM,OAAO,IAAI,cAAc,MAAM,CAAC;wBACtC,QAAQ,GAAG,CAAC,oBAAoB;wBAEhC,kCAAkC;wBAClC,WAAW,OAAO,CAAC;oBACrB;gBACF,SAAU;oBACR,OAAO,WAAW;oBAClB,WAAW,KAAK;gBAClB;YACF;QACF;QAEA,OAAO,IAAI,SAAS,QAAQ;YAC1B,SAAS;gBACP,gBAAgB;gBAChB,iBAAiB;gBACjB,YAAY;YACd;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,CAAA,GAAA,4IAAA,CAAA,sBAAmB,AAAD,EAAE;IAC7B;AACF","debugId":null}}]
}