{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/api/available-models/route.ts"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { NextResponse } from 'next/server';\n\nexport async function GET() {\n  try {\n    // Use the same base URL as the chat API\n    const baseUrl = process.env.NEXT_PUBLIC_CHAT_BASE_URL || 'http://localhost:8081/v1';\n    const backendUrl = `${baseUrl}/available-models`;\n    \n    console.log('[API] Fetching models from:', backendUrl);\n    \n    const response = await fetch(backendUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      cache: 'no-store',\n    });\n\n    if (!response.ok) {\n      console.error('[API] Backend returned error:', response.status);\n      return NextResponse.json(\n        { error: 'Failed to fetch models', models: [] },\n        { status: response.status }\n      );\n    }\n\n    const data = await response.json();\n    console.log('[API] Successfully fetched', data.models?.length || 0, 'models');\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('[API] Error fetching available models:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch models', models: [] },\n      { status: 500 }\n    );\n  }\n}\n\nexport const dynamic = 'force-dynamic';\n\n"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;;;;;AAEtC;;AAEO,eAAe;IACpB,IAAI;QACF,wCAAwC;QACxC,MAAM,UAAU,QAAQ,GAAG,CAAC,yBAAyB,IAAI;QACzD,MAAM,aAAa,GAAG,QAAQ,iBAAiB,CAAC;QAEhD,QAAQ,GAAG,CAAC,+BAA+B;QAE3C,MAAM,WAAW,MAAM,MAAM,YAAY;YACvC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,OAAO;QACT;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,iCAAiC,SAAS,MAAM;YAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;gBAA0B,QAAQ,EAAE;YAAC,GAC9C;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,8BAA8B,KAAK,MAAM,EAAE,UAAU,GAAG;QACpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA0B,QAAQ,EAAE;QAAC,GAC9C;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,MAAM,UAAU","debugId":null}}]
}