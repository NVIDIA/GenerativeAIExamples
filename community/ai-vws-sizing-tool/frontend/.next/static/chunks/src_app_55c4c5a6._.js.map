{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/RightSidebar/Citations.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport Image from \"next/image\";\nimport { Citation } from \"@/types/chat\";\n\ninterface CitationsProps {\n  citations?: Citation[];\n}\n\nconst renderCitationContent = (citation: Citation) => {\n  switch (citation.document_type) {\n    case \"image\":\n    case \"table\":\n    case \"chart\":\n      return (\n        <div className=\"relative h-48 w-full\">\n          <Image\n            src={`data:image/png;base64,${citation.text}`}\n            alt={`Citation ${citation.document_type}`}\n            fill\n            className=\"object-contain\"\n          />\n        </div>\n      );\n\n    case \"text\":\n    default:\n      return <p className=\"mb-4 text-sm text-gray-400\">{citation.text}</p>;\n  }\n};\n\nexport default function Citations({ citations = [] }: CitationsProps) {\n  if (!citations || citations.length === 0) {\n    return (\n      <div className=\"p-4 text-center text-gray-400\">\n        No citations available for this response.\n      </div>\n    );\n  }\n\n  // Debug the received citations\n  console.log(\"Citations component received:\", citations);\n\n  return (\n    <div className=\"space-y-6 text-gray-400\">\n      <div className=\"mb-2 p-2 text-center text-sm\">\n        <span className=\"font-medium\">Showing {citations.length} citations</span>\n      </div>\n      {citations.map((citation, index) => (\n        <div\n          key={index}\n          className=\"max-h-72 overflow-y-auto rounded-lg border border-neutral-800 p-4\"\n        >\n          <div className=\"mb-2 flex items-center justify-between\">\n            <h3 className=\"text-sm font-medium\">Source {index + 1}</h3>\n            <span className=\"text-xs px-2 py-1 rounded bg-neutral-900\">\n              Score: {citation.score !== undefined ? citation.score.toFixed(2) : \"N/A\"}\n            </span>\n          </div>\n          {renderCitationContent(citation)}\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-xs text-gray-500\">Source:</span>\n            <span className=\"text-xs text-gray-400\">{citation.source}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;AAIjC;AAFA;;;AASA,MAAM,wBAAwB,CAAC;IAC7B,OAAQ,SAAS,aAAa;QAC5B,KAAK;QACL,KAAK;QACL,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;oBACJ,KAAK,CAAC,sBAAsB,EAAE,SAAS,IAAI,EAAE;oBAC7C,KAAK,CAAC,SAAS,EAAE,SAAS,aAAa,EAAE;oBACzC,IAAI;oBACJ,WAAU;;;;;;;;;;;QAKlB,KAAK;QACL;YACE,qBAAO,6LAAC;gBAAE,WAAU;0BAA8B,SAAS,IAAI;;;;;;IACnE;AACF;AAEe,SAAS,UAAU,EAAE,YAAY,EAAE,EAAkB;IAClE,IAAI,CAAC,aAAa,UAAU,MAAM,KAAK,GAAG;QACxC,qBACE,6LAAC;YAAI,WAAU;sBAAgC;;;;;;IAInD;IAEA,+BAA+B;IAC/B,QAAQ,GAAG,CAAC,iCAAiC;IAE7C,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAK,WAAU;;wBAAc;wBAAS,UAAU,MAAM;wBAAC;;;;;;;;;;;;YAEzD,UAAU,GAAG,CAAC,CAAC,UAAU,sBACxB,6LAAC;oBAEC,WAAU;;sCAEV,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;;wCAAsB;wCAAQ,QAAQ;;;;;;;8CACpD,6LAAC;oCAAK,WAAU;;wCAA2C;wCACjD,SAAS,KAAK,KAAK,YAAY,SAAS,KAAK,CAAC,OAAO,CAAC,KAAK;;;;;;;;;;;;;wBAGtE,sBAAsB;sCACvB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,6LAAC;oCAAK,WAAU;8CAAyB,SAAS,MAAM;;;;;;;;;;;;;mBAZrD;;;;;;;;;;;AAkBf;KArCwB","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/RightSidebar/RightSidebar.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport Citations from \"./Citations\";\nimport { useSidebar } from \"../../context/SidebarContext\";\n\nexport default function RightSidebar() {\n  const { activePanel, closeSidebar, activeCitations } = useSidebar();\n  const [displayPanel, setDisplayPanel] = useState(activePanel);\n\n  useEffect(() => {\n    if (activePanel) {\n      setDisplayPanel(activePanel);\n    } else {\n      const timer = setTimeout(() => {\n        setDisplayPanel(null);\n      }, 300); // Match the transition duration\n      return () => clearTimeout(timer);\n    }\n  }, [activePanel]);\n\n  return (\n    <div\n      className={`fixed bottom-0 right-0 top-14 w-[400px] transform border-l border-neutral-800 bg-black transition-transform duration-300 ease-in-out ${\n        !!activePanel ? \"translate-x-0\" : \"translate-x-full\"\n      }`}\n    >\n      <div className=\"flex h-full flex-col\">\n        <div className=\"flex items-center justify-between border-b border-neutral-800 p-4\">\n          <h2 className=\"text-xl font-semibold text-white\">\n            Citations\n          </h2>\n          <button\n            onClick={closeSidebar}\n            className=\"text-gray-400 transition-colors hover:text-white\"\n            aria-label=\"Close sidebar\"\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"flex-1 overflow-y-auto p-4\">\n          <Citations citations={activeCitations} />\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;AAIjC;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,aAAU,AAAD;IAChE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,aAAa;gBACf,gBAAgB;YAClB,OAAO;gBACL,MAAM,QAAQ;oDAAW;wBACvB,gBAAgB;oBAClB;mDAAG,MAAM,gCAAgC;gBACzC;8CAAO,IAAM,aAAa;;YAC5B;QACF;iCAAG;QAAC;KAAY;IAEhB,qBACE,6LAAC;QACC,WAAW,CAAC,qIAAqI,EAC/I,CAAC,CAAC,cAAc,kBAAkB,oBAClC;kBAEF,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAGjD,6LAAC;4BACC,SAAS;4BACT,WAAU;4BACV,cAAW;sCACZ;;;;;;;;;;;;8BAIH,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,yJAAA,CAAA,UAAS;wBAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;AAKhC;GAxCwB;;QACiC,2IAAA,CAAA,aAAU;;;KAD3C","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/Chat/VGPUConfigCard.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport { useState, ReactNode } from \"react\";\n\ninterface VGPUConfig {\n  title: string;\n  description: string;\n  parameters: {\n    vgpu_profile?: string | null;\n    vcpu_count?: number | null;\n    gpu_memory_size?: number | null;\n    system_RAM?: number | null;\n    concurrent_users?: number | null;\n    // Legacy fields for backward compatibility (to be removed)\n    vGPU_profile?: string | null;\n    vCPU_count?: number | null;\n    storage_capacity?: number | null;\n    storage_type?: string | null;\n    driver_version?: string | null;\n    AI_framework?: string | null;\n    performance_tier?: string | null;\n    relevant_aiwb_toolkit?: string | null;\n    RAM?: number | null;\n  };\n  // Optional fields for enhanced context\n  host_capabilities?: {\n    max_ram?: number;\n    available_gpus?: string[];\n    cpu_cores?: number;\n  };\n  rationale?: string;\n  notes?: string[];\n}\n\ninterface VGPUConfigCardProps {\n  config: VGPUConfig;\n}\n\n// Tooltip component\nconst Tooltip = ({ content, children }: { content: string; children: ReactNode }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        onMouseEnter={() => setIsVisible(true)}\n        onMouseLeave={() => setIsVisible(false)}\n        className=\"cursor-help\"\n      >\n        {children}\n      </div>\n      {isVisible && (\n        <div className=\"absolute z-10 px-3 py-2 text-xs text-white bg-gradient-to-br from-[#76b900]/20 to-[#76b900]/10 border border-[#76b900]/30 rounded-md shadow-lg backdrop-blur-sm -top-8 left-1/2 transform -translate-x-1/2 whitespace-nowrap\">\n          {content}\n          <div className=\"absolute w-2 h-2 bg-[#76b900]/15 border-l border-b border-[#76b900]/30 transform rotate-45 -bottom-1 left-1/2 -translate-x-1/2\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Parameter definitions for tooltips\nconst parameterDefinitions: { [key: string]: string } = {\n  vgpu_profile: \"Virtual GPU profile that defines the GPU partitioning and resource allocation\",\n  vGPU_profile: \"Virtual GPU profile that defines the GPU partitioning and resource allocation\",\n  vcpu_count: \"Number of virtual CPU cores allocated to this configuration\",\n  vCPU_count: \"Number of virtual CPU cores allocated to this configuration\",\n  gpu_memory_size: \"Total VRAM (in GB) needed = sum(model_params in billions) × precision_factor × 1.2 overhead × concurrent_users\",\n  system_RAM: \"System memory (in GB) allocated to this VM, including OS and framework overhead\",\n  concurrent_users: \"Number of simultaneous inference users expected on this VM\",\n  // Legacy fields (kept for backward compatibility)\n  video_card_total_memory: \"Total physical memory available on the GPU hardware\",\n  storage_capacity: \"Total storage space allocated for the workload\",\n  storage_type: \"Type of storage (SSD, NVMe, HDD) for optimal performance\",\n  driver_version: \"NVIDIA driver version required for this configuration\",\n  AI_framework: \"AI/ML framework optimized for this configuration\",\n  performance_tier: \"Performance level classification for this setup\"\n};\n\n// Key parameters that should be in the primary section\nconst keyParameters = ['vgpu_profile', 'vGPU_profile', 'gpu_memory_size', 'system_RAM', 'vcpu_count', 'vCPU_count', 'concurrent_users'];\n\n// Icon component using SVG instead of emojis\nconst ParameterIcon = ({ type, className = \"w-4 h-4\" }: { type: string; className?: string }) => {\n  const iconClass = className;\n  \n  switch (type) {\n    case 'vGPU_profile':\n      return (\n        <svg className={iconClass} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n        </svg>\n      );\n    case 'cpu':\n      return (\n        <svg className={iconClass} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n        </svg>\n      );\n    case 'memory':\n      return (\n        <svg className={iconClass} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n        </svg>\n      );\n    case 'storage':\n      return (\n        <svg className={iconClass} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\" />\n        </svg>\n      );\n    case 'framework':\n      return (\n        <svg className={iconClass} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n        </svg>\n      );\n    case 'users':\n      return (\n        <svg className={iconClass} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n      );\n    default:\n      return (\n        <svg className={iconClass} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n        </svg>\n      );\n  }\n};\n\n// Circular Progress Chart Component\nconst VRAMUsageChart = ({ \n  usedVRAM, \n  totalVRAM,\n  numGPUs \n}: { \n  usedVRAM: number; \n  totalVRAM: number;\n  numGPUs: number;\n}) => {\n  const percentage = Math.min((usedVRAM / totalVRAM) * 100, 100);\n  const radius = 80;\n  const strokeWidth = 12;\n  const normalizedRadius = radius - strokeWidth * 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - (percentage / 100) * circumference;\n  \n  // Determine fit category and color\n  const getFitCategory = (pct: number): { label: string; color: string; bgColor: string; textColor: string } => {\n    if (pct >= 90) {\n      return { \n        label: \"TIGHT\", \n        color: \"#ef4444\", // red-500\n        bgColor: \"rgba(239, 68, 68, 0.1)\", // red with opacity\n        textColor: \"#fca5a5\" // red-300\n      };\n    } else if (pct >= 60) {\n      return { \n        label: \"MODERATE\", \n        color: \"#76b900\", // NVIDIA green\n        bgColor: \"rgba(118, 185, 0, 0.1)\", // green with opacity\n        textColor: \"#a3e635\" // lime-400\n      };\n    } else {\n      return { \n        label: \"COMFORTABLE\", \n        color: \"#10b981\", // emerald-500\n        bgColor: \"rgba(16, 185, 129, 0.1)\", // emerald with opacity\n        textColor: \"#6ee7b7\" // emerald-300\n      };\n    }\n  };\n  \n  const fitCategory = getFitCategory(percentage);\n  \n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"relative\">\n        <svg\n          height={radius * 2}\n          width={radius * 2}\n          className=\"transform -rotate-90\"\n        >\n          {/* Outer shadow circle */}\n          <circle\n            stroke=\"rgba(0, 0, 0, 0.3)\"\n            fill=\"transparent\"\n            strokeWidth={strokeWidth + 4}\n            r={normalizedRadius}\n            cx={radius}\n            cy={radius}\n          />\n          {/* Background circle */}\n          <circle\n            stroke=\"#1f2937\"\n            fill=\"transparent\"\n            strokeWidth={strokeWidth}\n            r={normalizedRadius}\n            cx={radius}\n            cy={radius}\n          />\n          {/* Progress circle */}\n          <circle\n            stroke={fitCategory.color}\n            fill=\"transparent\"\n            strokeWidth={strokeWidth}\n            strokeDasharray={circumference + ' ' + circumference}\n            style={{ strokeDashoffset }}\n            strokeLinecap=\"round\"\n            r={normalizedRadius}\n            cx={radius}\n            cy={radius}\n            className=\"transition-all duration-700 ease-out filter drop-shadow-lg\"\n          />\n        </svg>\n        {/* Center text */}\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n          <div className=\"text-2xl font-bold text-gray-200\">\n            {percentage.toFixed(1)}%\n          </div>\n          <div className=\"text-xs text-gray-500 uppercase tracking-wider mt-0.5\">VRAM</div>\n        </div>\n      </div>\n      \n      {/* Fit category badge */}\n      <div \n        className=\"mt-5 px-4 py-1.5 rounded-full text-xs font-bold uppercase tracking-wider transition-all duration-300\"\n        style={{ \n          backgroundColor: fitCategory.bgColor,\n          color: fitCategory.color,\n          border: `2px solid ${fitCategory.color}`,\n          boxShadow: `0 0 25px ${fitCategory.bgColor}`\n        }}\n      >\n        {fitCategory.label}\n      </div>\n      \n      {/* Usage details */}\n      <div className=\"mt-4 text-center\">\n        <div className=\"text-lg font-semibold text-gray-100\">\n          {usedVRAM.toFixed(1)} GB\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          of {totalVRAM.toFixed(0)} GB VRAM\n        </div>\n        {numGPUs > 1 && (\n          <div className=\"mt-1 text-xs text-[#76b900] font-medium\">\n            ({numGPUs} GPUs × {(totalVRAM / numGPUs).toFixed(0)} GB each)\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst getIconType = (key: string): string => {\n  switch (key) {\n    case 'vgpu_profile':\n    case 'vGPU_profile':\n      return 'vGPU_profile';\n    case 'vcpu_count':\n    case 'vCPU_count':\n      return 'cpu';\n    case 'gpu_memory_size':\n    case 'video_card_total_memory':\n    case 'system_RAM':\n    case 'RAM':\n      return 'memory';\n    case 'storage_capacity':\n    case 'storage_type':\n      return 'storage';\n    case 'AI_framework':\n    case 'relevant_aiwb_toolkit':\n      return 'framework';\n    case 'concurrent_users':\n      return 'users';\n    default:\n      return 'default';\n  }\n};\n\nexport default function VGPUConfigCard({ config }: VGPUConfigCardProps) {\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [showAdvancedDetails, setShowAdvancedDetails] = useState(false);\n  const [showRawJSON, setShowRawJSON] = useState(false);\n  const [copied, setCopied] = useState(false);\n\n  // Function to extract GPU memory capacity from vGPU profile\n  const getGPUCapacityFromProfile = (profile: string | null | undefined): number | null => {\n    if (!profile) return null;\n    \n    // Extract the number after the hyphen (e.g., \"L40S-24Q\" -> 24)\n    const match = profile.match(/-(\\d+)Q?/i);\n    if (match && match[1]) {\n      return parseInt(match[1]);\n    }\n    return null;\n  };\n\n  // Check if multi-GPU is needed\n  const isMultiGPU = (): boolean => {\n    const profile = config.parameters.vgpu_profile || config.parameters.vGPU_profile;\n    const gpuMemoryRequired = config.parameters.gpu_memory_size;\n    \n    if (!profile || !gpuMemoryRequired) return false;\n    \n    const singleGPUCapacity = getGPUCapacityFromProfile(profile);\n    if (!singleGPUCapacity) return false;\n    \n    return gpuMemoryRequired > singleGPUCapacity;\n  };\n\n  const handleCopy = async () => {\n    try {\n      const text = JSON.stringify(config, null, 2);\n      \n      // Try modern clipboard API first\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        await navigator.clipboard.writeText(text);\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n      } else {\n        // Fallback for older browsers or non-HTTPS contexts\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        textArea.style.position = 'fixed';\n        textArea.style.left = '-999999px';\n        textArea.style.top = '-999999px';\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        \n        try {\n          const successful = document.execCommand('copy');\n          if (successful) {\n            setCopied(true);\n            setTimeout(() => setCopied(false), 2000);\n          }\n        } catch (err) {\n          console.error('Fallback copy failed: ', err);\n        }\n        \n        document.body.removeChild(textArea);\n      }\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n    }\n  };\n\n  const formatParameterValue = (key: string, value: any): string => {\n    if (value === null || value === undefined) {\n      return \"Not specified\";\n    }\n    \n    switch (key) {\n      case 'gpu_memory_size':\n      case 'video_card_total_memory':\n      case 'system_RAM':\n      case 'RAM':\n      case 'storage_capacity':\n        return `${value} GB`;\n      case 'vgpu_profile':\n      case 'vGPU_profile':\n        return value;\n      case 'vcpu_count':\n      case 'vCPU_count':\n        return `${value} cores`;\n      case 'concurrent_users':\n        return `${value} users`;\n      case 'storage_type':\n      case 'driver_version':\n      case 'AI_framework':\n      case 'relevant_aiwb_toolkit':\n      case 'performance_tier':\n        return String(value);\n      default:\n        return String(value);\n    }\n  };\n\n  const getParameterLabel = (key: string): string => {\n    switch (key) {\n      case 'vgpu_profile':\n      case 'vGPU_profile':\n        return 'vGPU Profile';\n      case 'vcpu_count':\n      case 'vCPU_count':\n        return 'vCPU Count';\n      case 'gpu_memory_size':\n        return 'Estimated VRAM';\n      case 'video_card_total_memory':\n        return 'Video Card Total Memory';\n      case 'system_RAM':\n        return 'System RAM';\n      case 'RAM':\n        return 'RAM';\n      case 'storage_capacity':\n        return 'Storage Capacity';\n      case 'storage_type':\n        return 'Storage Type';\n      case 'driver_version':\n        return 'Driver Version';\n      case 'AI_framework':\n        return 'AI Framework';\n      case 'relevant_aiwb_toolkit':\n        return 'AI Toolkit';\n      case 'performance_tier':\n        return 'Performance Tier';\n      case 'concurrent_users':\n        return 'Concurrent Users';\n      default:\n        return key.replace(/_/g, ' ').replace(/^./, str => str.toUpperCase());\n    }\n  };\n\n  const isRelevantConfig = Object.values(config.parameters).some(value => value !== null && value !== undefined);\n\n  // Fields to exclude from display\n  const excludedFields = ['total_CPU_count', 'total_cpu_count'];\n  \n  // Separate key and advanced parameters, excluding unwanted fields\n  const keyParams = Object.entries(config.parameters).filter(([key]) => \n    keyParameters.includes(key) && \n    config.parameters[key as keyof typeof config.parameters] !== null &&\n    !excludedFields.includes(key)\n  );\n  \n  const advancedParams = Object.entries(config.parameters).filter(([key]) => \n    !keyParameters.includes(key) && \n    config.parameters[key as keyof typeof config.parameters] !== null &&\n    !excludedFields.includes(key)\n  );\n\n  // Get VRAM usage data with multi-GPU calculation\n  const getVRAMUsageData = () => {\n    const profile = config.parameters.vgpu_profile || config.parameters.vGPU_profile;\n    const estimatedVRAM = config.parameters.gpu_memory_size;\n    \n    if (!profile || !estimatedVRAM) return null;\n    \n    const singleGPUCapacity = getGPUCapacityFromProfile(profile);\n    if (!singleGPUCapacity) return null;\n    \n    // Calculate number of GPUs needed (ceiling)\n    const numGPUs = Math.ceil(estimatedVRAM / singleGPUCapacity);\n    // Calculate total capacity across all GPUs\n    const totalCapacity = numGPUs * singleGPUCapacity;\n    \n    return {\n      used: estimatedVRAM,\n      total: totalCapacity,\n      numGPUs: numGPUs,\n      singleGPUCapacity: singleGPUCapacity\n    };\n  };\n\n  const vramUsage = getVRAMUsageData();\n\n  return (\n    <div className=\"bg-neutral-900 border border-neutral-700 rounded-lg overflow-hidden shadow-lg\">\n      {/* Header with NVIDIA green gradient */}\n      <div className=\"bg-gradient-to-r from-[#76b900] to-[#5a8c00] text-white px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div>\n              <h3 className=\"text-lg font-semibold\">vGPU Configuration Recommendation</h3>\n              <p className=\"text-sm text-green-100 mt-0.5 opacity-90\">Optimized for your AI workload requirements</p>\n            </div>\n            {vramUsage && vramUsage.numGPUs > 1 && (\n              <div className=\"px-3 py-1 bg-white/20 backdrop-blur-sm rounded-full border border-white/30\">\n                <span className=\"text-sm font-medium flex items-center gap-1.5\">\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n                  </svg>\n                  {vramUsage.numGPUs} GPUs\n                </span>\n              </div>\n            )}\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => setShowRawJSON(!showRawJSON)}\n              className=\"p-2 hover:bg-white/10 rounded transition-colors\"\n              title={showRawJSON ? \"Show Visualization\" : \"Show JSON Code\"}\n            >\n              {showRawJSON ? (\n                /* Chart/Graph icon when viewing JSON - click to see visualization */\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              ) : (\n                /* Code icon when viewing visualization - click to see JSON */\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n                </svg>\n              )}\n            </button>\n            <button\n              onClick={handleCopy}\n              className=\"p-2 hover:bg-white/10 rounded transition-colors\"\n              title=\"Copy JSON\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n              </svg>\n            </button>\n            <button\n              onClick={() => setIsExpanded(!isExpanded)}\n              className=\"p-2 hover:bg-white/10 rounded transition-colors\"\n            >\n              <svg className={`w-4 h-4 transform transition-transform ${isExpanded ? 'rotate-180' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n        {copied && (\n          <div className=\"mt-2 text-sm text-green-100 flex items-center gap-1\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n            Copied to clipboard\n          </div>\n        )}\n      </div>\n\n      {/* Content */}\n      {isExpanded && (\n        <div className=\"p-6\">\n          {/* Description */}\n          {config.description && (\n            <div className=\"mb-6 p-5 bg-gradient-to-br from-[#76b900]/10 to-[#76b900]/5 rounded-lg border border-[#76b900]/20 backdrop-blur-sm\">\n              <p className=\"text-gray-100 text-sm leading-relaxed\">\n                {config.description}\n              </p>\n            </div>\n          )}\n\n          {/* Why this config section */}\n          {(config.rationale || isRelevantConfig) && (\n            <div className=\"mb-6 p-4 bg-blue-950/30 border border-blue-900/50 rounded-lg\">\n              <div className=\"flex items-start gap-3\">\n                <svg className=\"w-5 h-5 text-blue-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <div>\n                  <h4 className=\"text-blue-300 font-medium text-sm mb-1\">Why this configuration?</h4>\n                  <p className=\"text-blue-200/80 text-sm\">\n                    {config.rationale || \"This configuration balances performance and resource efficiency for your specific AI workload, ensuring optimal GPU utilization while maintaining cost-effectiveness.\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Host Capabilities Context */}\n          {config.host_capabilities && (\n            <div className=\"mb-6 p-4 bg-gray-800/30 border border-gray-700/50 rounded-lg\">\n              <div className=\"flex items-start gap-3\">\n                <svg className=\"w-5 h-5 text-gray-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n                </svg>\n                <div className=\"w-full\">\n                  <h4 className=\"text-gray-300 font-medium text-sm mb-3\">Detected Host Capabilities</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {config.host_capabilities.max_ram && (\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-500 text-sm\">Max RAM:</span>\n                        <span className=\"text-gray-300 font-medium\">{config.host_capabilities.max_ram} GB</span>\n                      </div>\n                    )}\n                    {config.host_capabilities.cpu_cores && (\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-500 text-sm\">CPU Cores:</span>\n                        <span className=\"text-gray-300 font-medium\">{config.host_capabilities.cpu_cores}</span>\n                      </div>\n                    )}\n                    {config.host_capabilities.available_gpus && (\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-500 text-sm\">Available GPUs:</span>\n                        <span className=\"text-gray-300 font-medium\">{config.host_capabilities.available_gpus.join(', ')}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Raw JSON View */}\n          <div className={`bg-black rounded-lg p-4 overflow-x-auto border border-neutral-800 ${showRawJSON ? '' : 'hidden'}`}>\n            <pre className=\"text-xs text-green-400 font-mono whitespace-pre-wrap\">\n              {JSON.stringify(config, null, 2)}\n            </pre>\n          </div>\n          \n          {/* Structured Configuration View */}\n          <div className={`space-y-6 ${showRawJSON ? 'hidden' : ''}`}>\n              {/* VRAM Usage Chart - Moved to top before Key Parameters */}\n              {vramUsage && (\n                <div className=\"bg-gradient-to-br from-neutral-850/50 to-neutral-900/50 rounded-lg p-8 border border-neutral-700/60 shadow-inner\">\n                  <div className=\"grid md:grid-cols-2 gap-10 items-center\">\n                    <div>\n                      <h4 className=\"text-white font-semibold text-base mb-8 uppercase tracking-wider flex items-center gap-2\">\n                        <svg className=\"w-5 h-5 text-[#76b900]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                        VRAM Utilization Analysis\n                      </h4>\n                      <VRAMUsageChart \n                        usedVRAM={vramUsage.used} \n                        totalVRAM={vramUsage.total}\n                        numGPUs={vramUsage.numGPUs}\n                      />\n                    </div>\n                    <div className=\"space-y-4\">\n                      <div className=\"bg-black/20 rounded-lg p-5 border border-neutral-700/40\">\n                        <h5 className=\"text-sm font-medium text-gray-300 mb-3\">Configuration Summary</h5>\n                        <div className=\"space-y-2.5 text-sm\">\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-500\">Required VRAM:</span>\n                            <span className=\"text-gray-200 font-medium\">{vramUsage.used.toFixed(1)} GB</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-500\">GPU Profile:</span>\n                            <span className=\"text-gray-200 font-medium\">{config.parameters.vgpu_profile || config.parameters.vGPU_profile}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-500\">GPUs Required:</span>\n                            <span className=\"text-gray-200 font-medium\">{vramUsage.numGPUs}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-500\">Total Capacity:</span>\n                            <span className=\"text-[#76b900] font-medium\">{vramUsage.total.toFixed(0)} GB</span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"text-sm text-gray-400 space-y-2\">\n                        <p className=\"text-xs uppercase tracking-wider font-medium text-gray-500 mb-2\">Utilization Guidelines</p>\n                        <ul className=\"space-y-1.5 text-xs\">\n                          <li className=\"flex items-start gap-2\">\n                            <span className=\"text-emerald-500 mt-0.5 text-lg\">●</span>\n                            <span><strong className=\"text-emerald-400\">Comfortable (0-60%):</strong> Ideal for production with room for growth</span>\n                          </li>\n                          <li className=\"flex items-start gap-2\">\n                            <span className=\"text-[#76b900] mt-0.5 text-lg\">●</span>\n                            <span><strong className=\"text-[#a3e635]\">Moderate (60-90%):</strong> Efficient utilization with performance buffer</span>\n                          </li>\n                          <li className=\"flex items-start gap-2\">\n                            <span className=\"text-red-500 mt-0.5 text-lg\">●</span>\n                            <span><strong className=\"text-red-400\">Tight (90-100%):</strong> Consider larger GPU profile or additional units</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Key Parameters Section */}\n              {keyParams.length > 0 && (\n                <div>\n                  <h4 className=\"text-white font-medium text-sm mb-4 uppercase tracking-wider\">Key Parameters</h4>\n                  <div className=\"bg-neutral-850/40 rounded-lg p-4 border border-neutral-700/60\">\n                    <div className=\"grid gap-4 md:grid-cols-2\">\n                      {keyParams.map(([key, value], index) => (\n                        <div\n                          key={key}\n                          className=\"flex items-center justify-between p-4 rounded-lg bg-neutral-800/70 border border-neutral-700/60 hover:bg-neutral-800 hover:border-[#76b900]/40 transition-all duration-200 group\"\n                        >\n                          <div className=\"flex items-center gap-3\">\n                            <div className=\"text-gray-400 group-hover:text-[#76b900]/70 transition-colors\">\n                              <ParameterIcon type={getIconType(key)} />\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <span className=\"font-semibold text-gray-200\">\n                                {getParameterLabel(key)}\n                              </span>\n                              {parameterDefinitions[key] && (\n                                <Tooltip content={parameterDefinitions[key]}>\n                                  <svg className=\"w-4 h-4 text-gray-500 hover:text-gray-400 cursor-help\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                  </svg>\n                                </Tooltip>\n                              )}\n                            </div>\n                          </div>\n                          <span className=\"text-[#76b900] font-bold text-lg\">\n                            {formatParameterValue(key, value)}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Advanced Details - Collapsible */}\n              {advancedParams.length > 0 && (\n                <div>\n                  <button\n                    onClick={() => setShowAdvancedDetails(!showAdvancedDetails)}\n                    className=\"flex items-center gap-2 text-gray-400 hover:text-[#76b900]/70 transition-all duration-150 ease-in-out mb-4 group\"\n                  >\n                    <svg className={`w-4 h-4 transform transition-transform duration-150 ease-in-out ${showAdvancedDetails ? 'rotate-90' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                    <span className=\"text-sm font-medium uppercase tracking-wider\">Advanced Details</span>\n                  </button>\n                  \n                  <div className={`transition-all duration-150 ease-in-out overflow-hidden ${showAdvancedDetails ? 'opacity-100 max-h-[2000px]' : 'opacity-0 max-h-0'}`}>\n                    <div className=\"bg-neutral-850/60 rounded-lg p-4 border border-neutral-700/60\">\n                      <div className=\"grid gap-4 md:grid-cols-2\">\n                        {advancedParams.map(([key, value], index) => (\n                          <div\n                            key={key}\n                            className=\"group\"\n                          >\n                            <div className=\"flex items-start gap-3 p-3 rounded-lg bg-neutral-800/60 border border-neutral-700/40 hover:border-[#76b900]/30 hover:bg-neutral-800/80 transition-all duration-200\">\n                              <div className=\"mt-0.5\">\n                                <ParameterIcon type={getIconType(key)} className=\"w-4 h-4 text-gray-500\" />\n                              </div>\n                              <div className=\"flex-1 min-w-0\">\n                                <div className=\"flex items-center gap-1.5 mb-1\">\n                                  <span className=\"text-xs text-gray-400 font-medium uppercase tracking-wider\">\n                                    {getParameterLabel(key)}\n                                  </span>\n                                  {parameterDefinitions[key] && (\n                                    <Tooltip content={parameterDefinitions[key]}>\n                                      <svg className=\"w-3 h-3 text-gray-600 hover:text-gray-500 cursor-help\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                      </svg>\n                                    </Tooltip>\n                                  )}\n                                </div>\n                                <span className=\"text-sm font-medium text-gray-200 break-words\">\n                                  {formatParameterValue(key, value)}\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Notes/Recommendations */}\n              {config.notes && config.notes.length > 0 && (\n                <div className=\"mt-6 p-4 bg-amber-950/20 border border-amber-900/50 rounded-lg\">\n                  <div className=\"flex items-start gap-3\">\n                    <svg className=\"w-5 h-5 text-amber-400 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                    </svg>\n                    <div>\n                      <h4 className=\"text-amber-300 font-medium text-sm mb-2\">Recommendations</h4>\n                      <ul className=\"space-y-1\">\n                        {config.notes.map((note, index) => (\n                          <li key={index} className=\"text-amber-200/80 text-sm\">• {note}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* No config warning */}\n              {!isRelevantConfig && (\n                <div className=\"mt-4 p-4 bg-yellow-950/20 border border-yellow-900/50 rounded-lg\">\n                  <div className=\"flex items-center gap-2\">\n                    <svg className=\"w-5 h-5 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                    </svg>\n                    <span className=\"text-yellow-300 text-sm\">\n                      No specific vGPU configuration was recommended for this query.\n                    </span>\n                  </div>\n                </div>\n              )}\n            </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;AAIjC;;;AAFA;;AAsCA,oBAAoB;AACpB,MAAM,UAAU,CAAC,EAAE,OAAO,EAAE,QAAQ,EAA4C;;IAC9E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,cAAc,IAAM,aAAa;gBACjC,cAAc,IAAM,aAAa;gBACjC,WAAU;0BAET;;;;;;YAEF,2BACC,6LAAC;gBAAI,WAAU;;oBACZ;kCACD,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAKzB;GApBM;KAAA;AAsBN,qCAAqC;AACrC,MAAM,uBAAkD;IACtD,cAAc;IACd,cAAc;IACd,YAAY;IACZ,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;IAClB,kDAAkD;IAClD,yBAAyB;IACzB,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,cAAc;IACd,kBAAkB;AACpB;AAEA,uDAAuD;AACvD,MAAM,gBAAgB;IAAC;IAAgB;IAAgB;IAAmB;IAAc;IAAc;IAAc;CAAmB;AAEvI,6CAA6C;AAC7C,MAAM,gBAAgB,CAAC,EAAE,IAAI,EAAE,YAAY,SAAS,EAAwC;IAC1F,MAAM,YAAY;IAElB,OAAQ;QACN,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAW;gBAAW,MAAK;gBAAO,QAAO;gBAAe,SAAQ;0BACnE,cAAA,6LAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;;;;;;QAG3E,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAW;gBAAW,MAAK;gBAAO,QAAO;gBAAe,SAAQ;0BACnE,cAAA,6LAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;;;;;;QAG3E,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAW;gBAAW,MAAK;gBAAO,QAAO;gBAAe,SAAQ;0BACnE,cAAA,6LAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;;;;;;QAG3E,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAW;gBAAW,MAAK;gBAAO,QAAO;gBAAe,SAAQ;0BACnE,cAAA,6LAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;;;;;;QAG3E,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAW;gBAAW,MAAK;gBAAO,QAAO;gBAAe,SAAQ;0BACnE,cAAA,6LAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;;;;;;QAG3E,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAW;gBAAW,MAAK;gBAAO,QAAO;gBAAe,SAAQ;0BACnE,cAAA,6LAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;;;;;;QAG3E;YACE,qBACE,6LAAC;gBAAI,WAAW;gBAAW,MAAK;gBAAO,QAAO;gBAAe,SAAQ;;kCACnE,6LAAC;wBAAK,eAAc;wBAAQ,gBAAe;wBAAQ,aAAa;wBAAG,GAAE;;;;;;kCACrE,6LAAC;wBAAK,eAAc;wBAAQ,gBAAe;wBAAQ,aAAa;wBAAG,GAAE;;;;;;;;;;;;IAG7E;AACF;MAhDM;AAkDN,oCAAoC;AACpC,MAAM,iBAAiB,CAAC,EACtB,QAAQ,EACR,SAAS,EACT,OAAO,EAKR;IACC,MAAM,aAAa,KAAK,GAAG,CAAC,AAAC,WAAW,YAAa,KAAK;IAC1D,MAAM,SAAS;IACf,MAAM,cAAc;IACpB,MAAM,mBAAmB,SAAS,cAAc;IAChD,MAAM,gBAAgB,mBAAmB,IAAI,KAAK,EAAE;IACpD,MAAM,mBAAmB,gBAAgB,AAAC,aAAa,MAAO;IAE9D,mCAAmC;IACnC,MAAM,iBAAiB,CAAC;QACtB,IAAI,OAAO,IAAI;YACb,OAAO;gBACL,OAAO;gBACP,OAAO;gBACP,SAAS;gBACT,WAAW,UAAU,UAAU;YACjC;QACF,OAAO,IAAI,OAAO,IAAI;YACpB,OAAO;gBACL,OAAO;gBACP,OAAO;gBACP,SAAS;gBACT,WAAW,UAAU,WAAW;YAClC;QACF,OAAO;YACL,OAAO;gBACL,OAAO;gBACP,OAAO;gBACP,SAAS;gBACT,WAAW,UAAU,cAAc;YACrC;QACF;IACF;IAEA,MAAM,cAAc,eAAe;IAEnC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,QAAQ,SAAS;wBACjB,OAAO,SAAS;wBAChB,WAAU;;0CAGV,6LAAC;gCACC,QAAO;gCACP,MAAK;gCACL,aAAa,cAAc;gCAC3B,GAAG;gCACH,IAAI;gCACJ,IAAI;;;;;;0CAGN,6LAAC;gCACC,QAAO;gCACP,MAAK;gCACL,aAAa;gCACb,GAAG;gCACH,IAAI;gCACJ,IAAI;;;;;;0CAGN,6LAAC;gCACC,QAAQ,YAAY,KAAK;gCACzB,MAAK;gCACL,aAAa;gCACb,iBAAiB,gBAAgB,MAAM;gCACvC,OAAO;oCAAE;gCAAiB;gCAC1B,eAAc;gCACd,GAAG;gCACH,IAAI;gCACJ,IAAI;gCACJ,WAAU;;;;;;;;;;;;kCAId,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;oCACZ,WAAW,OAAO,CAAC;oCAAG;;;;;;;0CAEzB,6LAAC;gCAAI,WAAU;0CAAwD;;;;;;;;;;;;;;;;;;0BAK3E,6LAAC;gBACC,WAAU;gBACV,OAAO;oBACL,iBAAiB,YAAY,OAAO;oBACpC,OAAO,YAAY,KAAK;oBACxB,QAAQ,CAAC,UAAU,EAAE,YAAY,KAAK,EAAE;oBACxC,WAAW,CAAC,SAAS,EAAE,YAAY,OAAO,EAAE;gBAC9C;0BAEC,YAAY,KAAK;;;;;;0BAIpB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;4BACZ,SAAS,OAAO,CAAC;4BAAG;;;;;;;kCAEvB,6LAAC;wBAAI,WAAU;;4BAAwB;4BACjC,UAAU,OAAO,CAAC;4BAAG;;;;;;;oBAE1B,UAAU,mBACT,6LAAC;wBAAI,WAAU;;4BAA0C;4BACrD;4BAAQ;4BAAS,CAAC,YAAY,OAAO,EAAE,OAAO,CAAC;4BAAG;;;;;;;;;;;;;;;;;;;AAMhE;MA1HM;AA4HN,MAAM,cAAc,CAAC;IACnB,OAAQ;QACN,KAAK;QACL,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEe,SAAS,eAAe,EAAE,MAAM,EAAuB;;IACpE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,4DAA4D;IAC5D,MAAM,4BAA4B,CAAC;QACjC,IAAI,CAAC,SAAS,OAAO;QAErB,+DAA+D;QAC/D,MAAM,QAAQ,QAAQ,KAAK,CAAC;QAC5B,IAAI,SAAS,KAAK,CAAC,EAAE,EAAE;YACrB,OAAO,SAAS,KAAK,CAAC,EAAE;QAC1B;QACA,OAAO;IACT;IAEA,+BAA+B;IAC/B,MAAM,aAAa;QACjB,MAAM,UAAU,OAAO,UAAU,CAAC,YAAY,IAAI,OAAO,UAAU,CAAC,YAAY;QAChF,MAAM,oBAAoB,OAAO,UAAU,CAAC,eAAe;QAE3D,IAAI,CAAC,WAAW,CAAC,mBAAmB,OAAO;QAE3C,MAAM,oBAAoB,0BAA0B;QACpD,IAAI,CAAC,mBAAmB,OAAO;QAE/B,OAAO,oBAAoB;IAC7B;IAEA,MAAM,aAAa;QACjB,IAAI;YACF,MAAM,OAAO,KAAK,SAAS,CAAC,QAAQ,MAAM;YAE1C,iCAAiC;YACjC,IAAI,UAAU,SAAS,IAAI,UAAU,SAAS,CAAC,SAAS,EAAE;gBACxD,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;gBACpC,UAAU;gBACV,WAAW,IAAM,UAAU,QAAQ;YACrC,OAAO;gBACL,oDAAoD;gBACpD,MAAM,WAAW,SAAS,aAAa,CAAC;gBACxC,SAAS,KAAK,GAAG;gBACjB,SAAS,KAAK,CAAC,QAAQ,GAAG;gBAC1B,SAAS,KAAK,CAAC,IAAI,GAAG;gBACtB,SAAS,KAAK,CAAC,GAAG,GAAG;gBACrB,SAAS,IAAI,CAAC,WAAW,CAAC;gBAC1B,SAAS,KAAK;gBACd,SAAS,MAAM;gBAEf,IAAI;oBACF,MAAM,aAAa,SAAS,WAAW,CAAC;oBACxC,IAAI,YAAY;wBACd,UAAU;wBACV,WAAW,IAAM,UAAU,QAAQ;oBACrC;gBACF,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;gBAEA,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,oBAAoB;QACpC;IACF;IAEA,MAAM,uBAAuB,CAAC,KAAa;QACzC,IAAI,UAAU,QAAQ,UAAU,WAAW;YACzC,OAAO;QACT;QAEA,OAAQ;YACN,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBACH,OAAO,GAAG,MAAM,GAAG,CAAC;YACtB,KAAK;YACL,KAAK;gBACH,OAAO;YACT,KAAK;YACL,KAAK;gBACH,OAAO,GAAG,MAAM,MAAM,CAAC;YACzB,KAAK;gBACH,OAAO,GAAG,MAAM,MAAM,CAAC;YACzB,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBACH,OAAO,OAAO;YAChB;gBACE,OAAO,OAAO;QAClB;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,OAAQ;YACN,KAAK;YACL,KAAK;gBACH,OAAO;YACT,KAAK;YACL,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAA,MAAO,IAAI,WAAW;QACtE;IACF;IAEA,MAAM,mBAAmB,OAAO,MAAM,CAAC,OAAO,UAAU,EAAE,IAAI,CAAC,CAAA,QAAS,UAAU,QAAQ,UAAU;IAEpG,iCAAiC;IACjC,MAAM,iBAAiB;QAAC;QAAmB;KAAkB;IAE7D,kEAAkE;IAClE,MAAM,YAAY,OAAO,OAAO,CAAC,OAAO,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,GAC/D,cAAc,QAAQ,CAAC,QACvB,OAAO,UAAU,CAAC,IAAsC,KAAK,QAC7D,CAAC,eAAe,QAAQ,CAAC;IAG3B,MAAM,iBAAiB,OAAO,OAAO,CAAC,OAAO,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,GACpE,CAAC,cAAc,QAAQ,CAAC,QACxB,OAAO,UAAU,CAAC,IAAsC,KAAK,QAC7D,CAAC,eAAe,QAAQ,CAAC;IAG3B,iDAAiD;IACjD,MAAM,mBAAmB;QACvB,MAAM,UAAU,OAAO,UAAU,CAAC,YAAY,IAAI,OAAO,UAAU,CAAC,YAAY;QAChF,MAAM,gBAAgB,OAAO,UAAU,CAAC,eAAe;QAEvD,IAAI,CAAC,WAAW,CAAC,eAAe,OAAO;QAEvC,MAAM,oBAAoB,0BAA0B;QACpD,IAAI,CAAC,mBAAmB,OAAO;QAE/B,4CAA4C;QAC5C,MAAM,UAAU,KAAK,IAAI,CAAC,gBAAgB;QAC1C,2CAA2C;QAC3C,MAAM,gBAAgB,UAAU;QAEhC,OAAO;YACL,MAAM;YACN,OAAO;YACP,SAAS;YACT,mBAAmB;QACrB;IACF;IAEA,MAAM,YAAY;IAElB,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAwB;;;;;;0DACtC,6LAAC;gDAAE,WAAU;0DAA2C;;;;;;;;;;;;oCAEzD,aAAa,UAAU,OAAO,GAAG,mBAChC,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;;8DACd,6LAAC;oDAAI,WAAU;oDAAU,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DACjE,cAAA,6LAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;gDAEtE,UAAU,OAAO;gDAAC;;;;;;;;;;;;;;;;;;0CAK3B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,eAAe,CAAC;wCAC/B,WAAU;wCACV,OAAO,cAAc,uBAAuB;kDAE3C,cACC,mEAAmE,iBACnE,6LAAC;4CAAI,WAAU;4CAAU,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACjE,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;mDAGvE,4DAA4D,iBAC5D,6LAAC;4CAAI,WAAU;4CAAU,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACjE,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;kDAI3E,6LAAC;wCACC,SAAS;wCACT,WAAU;wCACV,OAAM;kDAEN,cAAA,6LAAC;4CAAI,WAAU;4CAAU,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACjE,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;kDAGzE,6LAAC;wCACC,SAAS,IAAM,cAAc,CAAC;wCAC9B,WAAU;kDAEV,cAAA,6LAAC;4CAAI,WAAW,CAAC,uCAAuC,EAAE,aAAa,eAAe,IAAI;4CAAE,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACpI,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAK5E,wBACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;4BACjE;;;;;;;;;;;;;YAOX,4BACC,6LAAC;gBAAI,WAAU;;oBAEZ,OAAO,WAAW,kBACjB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;sCACV,OAAO,WAAW;;;;;;;;;;;oBAMxB,CAAC,OAAO,SAAS,IAAI,gBAAgB,mBACpC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;oCAA+B,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACtF,cAAA,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;8CAEvE,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAyC;;;;;;sDACvD,6LAAC;4CAAE,WAAU;sDACV,OAAO,SAAS,IAAI;;;;;;;;;;;;;;;;;;;;;;;oBAQ9B,OAAO,iBAAiB,kBACvB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;oCAA+B,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACtF,cAAA,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;8CAEvE,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAyC;;;;;;sDACvD,6LAAC;4CAAI,WAAU;;gDACZ,OAAO,iBAAiB,CAAC,OAAO,kBAC/B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;;gEAA6B,OAAO,iBAAiB,CAAC,OAAO;gEAAC;;;;;;;;;;;;;gDAGjF,OAAO,iBAAiB,CAAC,SAAS,kBACjC,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;sEAA6B,OAAO,iBAAiB,CAAC,SAAS;;;;;;;;;;;;gDAGlF,OAAO,iBAAiB,CAAC,cAAc,kBACtC,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;sEAA6B,OAAO,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAUxG,6LAAC;wBAAI,WAAW,CAAC,kEAAkE,EAAE,cAAc,KAAK,UAAU;kCAChH,cAAA,6LAAC;4BAAI,WAAU;sCACZ,KAAK,SAAS,CAAC,QAAQ,MAAM;;;;;;;;;;;kCAKlC,6LAAC;wBAAI,WAAW,CAAC,UAAU,EAAE,cAAc,WAAW,IAAI;;4BAErD,2BACC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;;sEACZ,6LAAC;4DAAI,WAAU;4DAAyB,MAAK;4DAAO,QAAO;4DAAe,SAAQ;sEAChF,cAAA,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;wDACjE;;;;;;;8DAGR,6LAAC;oDACC,UAAU,UAAU,IAAI;oDACxB,WAAW,UAAU,KAAK;oDAC1B,SAAS,UAAU,OAAO;;;;;;;;;;;;sDAG9B,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAG,WAAU;sEAAyC;;;;;;sEACvD,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,6LAAC;4EAAK,WAAU;;gFAA6B,UAAU,IAAI,CAAC,OAAO,CAAC;gFAAG;;;;;;;;;;;;;8EAEzE,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,6LAAC;4EAAK,WAAU;sFAA6B,OAAO,UAAU,CAAC,YAAY,IAAI,OAAO,UAAU,CAAC,YAAY;;;;;;;;;;;;8EAE/G,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,6LAAC;4EAAK,WAAU;sFAA6B,UAAU,OAAO;;;;;;;;;;;;8EAEhE,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,6LAAC;4EAAK,WAAU;;gFAA8B,UAAU,KAAK,CAAC,OAAO,CAAC;gFAAG;;;;;;;;;;;;;;;;;;;;;;;;;8DAI/E,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAE,WAAU;sEAAkE;;;;;;sEAC/E,6LAAC;4DAAG,WAAU;;8EACZ,6LAAC;oEAAG,WAAU;;sFACZ,6LAAC;4EAAK,WAAU;sFAAkC;;;;;;sFAClD,6LAAC;;8FAAK,6LAAC;oFAAO,WAAU;8FAAmB;;;;;;gFAA6B;;;;;;;;;;;;;8EAE1E,6LAAC;oEAAG,WAAU;;sFACZ,6LAAC;4EAAK,WAAU;sFAAgC;;;;;;sFAChD,6LAAC;;8FAAK,6LAAC;oFAAO,WAAU;8FAAiB;;;;;;gFAA2B;;;;;;;;;;;;;8EAEtE,6LAAC;oEAAG,WAAU;;sFACZ,6LAAC;4EAAK,WAAU;sFAA8B;;;;;;sFAC9C,6LAAC;;8FAAK,6LAAC;oFAAO,WAAU;8FAAe;;;;;;gFAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAU7E,UAAU,MAAM,GAAG,mBAClB,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAA+D;;;;;;kDAC7E,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;sDACZ,UAAU,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE,sBAC5B,6LAAC;oDAEC,WAAU;;sEAEV,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;8EACb,cAAA,6LAAC;wEAAc,MAAM,YAAY;;;;;;;;;;;8EAEnC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAK,WAAU;sFACb,kBAAkB;;;;;;wEAEpB,oBAAoB,CAAC,IAAI,kBACxB,6LAAC;4EAAQ,SAAS,oBAAoB,CAAC,IAAI;sFACzC,cAAA,6LAAC;gFAAI,WAAU;gFAAwD,MAAK;gFAAO,QAAO;gFAAe,SAAQ;0FAC/G,cAAA,6LAAC;oFAAK,eAAc;oFAAQ,gBAAe;oFAAQ,aAAa;oFAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;sEAM/E,6LAAC;4DAAK,WAAU;sEACb,qBAAqB,KAAK;;;;;;;mDArBxB;;;;;;;;;;;;;;;;;;;;;4BA+BhB,eAAe,MAAM,GAAG,mBACvB,6LAAC;;kDACC,6LAAC;wCACC,SAAS,IAAM,uBAAuB,CAAC;wCACvC,WAAU;;0DAEV,6LAAC;gDAAI,WAAW,CAAC,gEAAgE,EAAE,sBAAsB,cAAc,IAAI;gDAAE,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACrK,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;0DAEvE,6LAAC;gDAAK,WAAU;0DAA+C;;;;;;;;;;;;kDAGjE,6LAAC;wCAAI,WAAW,CAAC,wDAAwD,EAAE,sBAAsB,+BAA+B,qBAAqB;kDACnJ,cAAA,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;0DACZ,eAAe,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE,sBACjC,6LAAC;wDAEC,WAAU;kEAEV,cAAA,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;8EACb,cAAA,6LAAC;wEAAc,MAAM,YAAY;wEAAM,WAAU;;;;;;;;;;;8EAEnD,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAI,WAAU;;8FACb,6LAAC;oFAAK,WAAU;8FACb,kBAAkB;;;;;;gFAEpB,oBAAoB,CAAC,IAAI,kBACxB,6LAAC;oFAAQ,SAAS,oBAAoB,CAAC,IAAI;8FACzC,cAAA,6LAAC;wFAAI,WAAU;wFAAwD,MAAK;wFAAO,QAAO;wFAAe,SAAQ;kGAC/G,cAAA,6LAAC;4FAAK,eAAc;4FAAQ,gBAAe;4FAAQ,aAAa;4FAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;sFAK7E,6LAAC;4EAAK,WAAU;sFACb,qBAAqB,KAAK;;;;;;;;;;;;;;;;;;uDArB5B;;;;;;;;;;;;;;;;;;;;;;;;;;4BAkClB,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC,MAAM,GAAG,mBACrC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;4CAA8C,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACrG,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;sDAEvE,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;8DAA0C;;;;;;8DACxD,6LAAC;oDAAG,WAAU;8DACX,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,sBACvB,6LAAC;4DAAe,WAAU;;gEAA4B;gEAAG;;2DAAhD;;;;;;;;;;;;;;;;;;;;;;;;;;;4BASpB,CAAC,kCACA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;4CAA0B,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACjF,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;sDAEvE,6LAAC;4CAAK,WAAU;sDAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW9D;IAxfwB;MAAA","debugId":null}},
    {"offset": {"line": 2161, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/Chat/ApplyConfigurationForm.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\n\n// Spinner component\nconst Spinner = () => (\n  <div className=\"flex items-center justify-center\">\n    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500\"></div>\n  </div>\n);\n\ninterface ApplyConfigurationFormProps {\n  isOpen: boolean;\n  onClose: () => void;\n  configuration?: any; // vGPU configuration object to apply\n}\n\ninterface FormData {\n  vmIpAddress: string;\n  username: string;\n  password: string;\n  huggingFaceToken: string;\n}\n\ninterface FormErrors {\n  vmIpAddress?: string;\n  username?: string;\n  password?: string;\n  huggingFaceToken?: string;\n}\n\nexport default function ApplyConfigurationForm({\n  isOpen,\n  onClose,\n  configuration,\n}: ApplyConfigurationFormProps) {\n  const [formData, setFormData] = useState<FormData>({\n    vmIpAddress: \"\",\n    username: \"\",\n    password: \"\",\n    huggingFaceToken: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState<FormErrors>({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showToken, setShowToken] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showLogs, setShowLogs] = useState(false);\n  const [configurationLogs, setConfigurationLogs] = useState<string[]>([]);\n  const [isConfigurationComplete, setIsConfigurationComplete] = useState(false);\n  const [showDebugLogs, setShowDebugLogs] = useState(false);\n  const [currentDisplayMessage, setCurrentDisplayMessage] = useState<string>(\"\");\n\n  // Validate IP address format\n  const validateIpAddress = (ip: string): boolean => {\n    const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ip);\n  };\n\n  // Validate form fields\n  const validateForm = (): boolean => {\n    const errors: FormErrors = {};\n\n    if (!formData.vmIpAddress) {\n      errors.vmIpAddress = \"VM IP address is required\";\n    } else if (!validateIpAddress(formData.vmIpAddress)) {\n      errors.vmIpAddress = \"Invalid IP address format\";\n    }\n\n    if (!formData.username) {\n      errors.username = \"Username is required\";\n    }\n\n    if (!formData.password) {\n      errors.password = \"Password is required\";\n    }\n\n    if (!formData.huggingFaceToken) {\n      errors.huggingFaceToken = \"Hugging Face token is required\";\n    }\n\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n    // Clear error for this field when user starts typing (only for fields that exist in FormErrors)\n    if (field in formErrors) {\n      setFormErrors((prev) => ({ ...prev, [field as keyof FormErrors]: undefined }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    setShowLogs(false); // Hide logs initially\n    setIsConfigurationComplete(false);\n    setConfigurationLogs([\"Starting configuration process...\"]);\n    setCurrentDisplayMessage(\"\"); // Initialize with empty string\n\n    try {\n      // Extract and normalize the configuration data\n      let configData = {};\n      if (configuration && configuration.parameters) {\n        // The configuration comes from the vGPU generation which has parameters field\n        configData = configuration.parameters;\n      } else if (configuration) {\n        // Direct configuration object\n        configData = configuration;\n      }\n\n      const response = await fetch(\"/api/apply-configuration\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          vm_ip: formData.vmIpAddress,\n          username: formData.username,\n          password: formData.password,\n          configuration: configData,\n          hf_token: formData.huggingFaceToken,\n          description: configuration?.description || \"vGPU configuration request from UI\",\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Read the streaming response\n      const reader = response.body?.getReader();\n      const decoder = new TextDecoder();\n      let buffer = '';\n\n      if (reader) {\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) break;\n\n          const chunk = decoder.decode(value, { stream: true });\n          buffer += chunk;\n          \n          // Process complete lines\n          const lines = buffer.split(\"\\n\");\n          buffer = lines.pop() || ''; // Keep the last incomplete line in buffer\n\n          for (const line of lines) {\n            if (line.startsWith(\"data: \")) {\n              try {\n                const data = JSON.parse(line.substring(6));\n                \n                // Update display message if present\n                if (data.display_message) {\n                  setCurrentDisplayMessage(data.display_message);\n                }\n                \n                // Update logs based on the progress\n                if (data.message) {\n                  // Split multi-line messages\n                  const messages = data.message.split('\\n');\n                  for (const msg of messages) {\n                    if (msg.trim()) {\n                      // Strip any timestamps that might be present (format: [HH:MM:SS AM/PM])\n                      const cleanMsg = msg.trim().replace(/^\\[\\d{1,2}:\\d{2}:\\d{2}\\s*(AM|PM)?\\]\\s*/i, '');\n                      setConfigurationLogs((prev) => [...prev, cleanMsg]);\n                    }\n                  }\n                }\n\n                // Handle command results\n                if (data.command_results) {\n                  for (const result of data.command_results) {\n                    if (result.command) {\n                      setConfigurationLogs((prev) => [\n                        ...prev,\n                        `$ ${result.command}`,\n                      ]);\n                      if (result.output) {\n                        setConfigurationLogs((prev) => [\n                          ...prev,\n                          result.output.trim(),\n                        ]);\n                      }\n                      if (result.error && !result.success) {\n                        setConfigurationLogs((prev) => [\n                          ...prev,\n                          `Error: ${result.error}`,\n                        ]);\n                      }\n                    }\n                  }\n                }\n\n                // Check for completion or error\n                if (data.status === \"completed\") {\n                  // Don't add another success message, it's already in the logs\n                  setIsConfigurationComplete(true);\n                  setShowLogs(true); // Automatically show logs on completion\n                  // Don't clear display message - let the last one persist\n                } else if (data.status === \"error\") {\n                  setConfigurationLogs((prev) => [\n                    ...prev,\n                    `❌ Error: ${data.error || \"Configuration failed\"}`,\n                  ]);\n                  setIsConfigurationComplete(true);\n                  setShowLogs(true); // Automatically show logs on error\n                  // Don't clear display message - let the last one persist\n                }\n              } catch (parseError) {\n                console.error(\"Error parsing SSE data:\", parseError);\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Configuration error:\", error);\n      setConfigurationLogs((prev) => [\n        ...prev,\n        `❌ Error: ${error instanceof Error ? error.message : \"Failed to apply configuration\"}`,\n      ]);\n      setIsConfigurationComplete(true);\n      setShowLogs(true); // Show logs on error\n      // Don't clear display message here either\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleRetry = () => {\n    // Reset state but keep form data\n    setIsConfigurationComplete(false);\n    setConfigurationLogs([]);\n    setShowLogs(false);\n    setShowDebugLogs(false);\n    setCurrentDisplayMessage(\"\");\n    // Form data is intentionally preserved\n  };\n\n  const handleClose = () => {\n    // Reset form state\n    setFormData({\n      vmIpAddress: \"\",\n      username: \"\",\n      password: \"\",\n      huggingFaceToken: \"\",\n    });\n    setFormErrors({});\n    setShowPassword(false);\n    setShowToken(false);\n    setIsSubmitting(false);\n    setShowLogs(false);\n    setConfigurationLogs([]);\n    setIsConfigurationComplete(false);\n    setShowDebugLogs(false);\n    setCurrentDisplayMessage(\"\");\n    onClose();\n  };\n\n  const handleExportLogs = () => {\n    // Create log content without timestamps for cleaner export\n    let logContent = configurationLogs.join('\\n');\n    \n    // If debug logs are shown, add them to the export\n    if (showDebugLogs) {\n      const debugSection = \"\\n\\n=== Debug Output ===\\n\" + \n        configurationLogs.filter(log => {\n          if (log.includes(\"===\") || log.startsWith(\"✓\")) return false;\n          const includePatterns = [\n            \"Starting configuration process\",\n            \"Connecting to\",\n            \"Connected successfully\",\n            \"Gathering system information\",\n            \"Hypervisor Layer\",\n            \"Checking GPU availability\",\n            \"GPU:\",\n            \"Starting setup phase\",\n            \"Authenticating with\",\n            \"Setting up Python\",\n            \"Installing\",\n            \"Cleaned up\",\n            \"Attempt\",\n            \"server started\",\n            \"Found\",\n            \"GPU memory detected\",\n            \"Post-launch cleanup\",\n            \"SSH connection closed\",\n            \"PID\"\n          ];\n          return includePatterns.some(pattern => log.includes(pattern));\n        }).join('\\n');\n      \n      logContent += debugSection;\n    }\n    \n    // Add header information\n    const header = [\n      '=== vGPU Configuration Logs ===',\n      `Date: ${new Date().toLocaleString()}`,\n      `VM IP: ${formData.vmIpAddress}`,\n      `Username: ${formData.username}`,\n      configuration?.parameters?.vGPU_profile ? `vGPU Profile: ${configuration.parameters.vGPU_profile}` : '',\n      configuration?.parameters?.model_name ? `Model: ${configuration.parameters.model_name}` : '',\n      '================================\\n'\n    ].filter(Boolean).join('\\n');\n    \n    const fullContent = header + '\\n' + logContent;\n    \n    // Create blob and download\n    const blob = new Blob([fullContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `vgpu_config_logs_${new Date().toISOString().slice(0, 19).replace(/[:-]/g, '')}.txt`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div className=\"bg-neutral-900 rounded-lg border border-neutral-700 w-full max-w-2xl max-h-[90vh] overflow-hidden flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-neutral-700\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">Apply Configuration</h2>\n            <p className=\"text-sm text-gray-400 mt-1\">\n              Configure your VM with the recommended vGPU settings\n            </p>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <svg className=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Form Content */}\n        <div className=\"flex-1 overflow-y-auto p-6\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* VM IP Address */}\n            <div>\n              <label htmlFor=\"vmIpAddress\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                VM IP Address\n              </label>\n              <input\n                id=\"vmIpAddress\"\n                type=\"text\"\n                value={formData.vmIpAddress}\n                onChange={(e) => handleInputChange(\"vmIpAddress\", e.target.value)}\n                placeholder=\"Enter the IP address of your Virtual Machine (VM)\"\n                className={`w-full p-3 rounded-lg bg-neutral-800 border ${\n                  formErrors.vmIpAddress ? \"border-red-500\" : \"border-neutral-600\"\n                } text-white placeholder-gray-500 focus:outline-none focus:border-green-500 transition-colors`}\n              />\n              {formErrors.vmIpAddress && (\n                <p className=\"mt-1 text-sm text-red-500\">{formErrors.vmIpAddress}</p>\n              )}\n            </div>\n\n            {/* Username */}\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Username\n              </label>\n              <input\n                id=\"username\"\n                type=\"text\"\n                value={formData.username}\n                onChange={(e) => handleInputChange(\"username\", e.target.value)}\n                placeholder=\"Enter your VM username\"\n                className={`w-full p-3 rounded-lg bg-neutral-800 border ${\n                  formErrors.username ? \"border-red-500\" : \"border-neutral-600\"\n                } text-white placeholder-gray-500 focus:outline-none focus:border-green-500 transition-colors`}\n              />\n              {formErrors.username && (\n                <p className=\"mt-1 text-sm text-red-500\">{formErrors.username}</p>\n              )}\n            </div>\n\n            {/* Password */}\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  value={formData.password}\n                  onChange={(e) => handleInputChange(\"password\", e.target.value)}\n                  placeholder=\"Enter your VM password\"\n                  className={`w-full p-3 pr-12 rounded-lg bg-neutral-800 border ${\n                    formErrors.password ? \"border-red-500\" : \"border-neutral-600\"\n                  } text-white placeholder-gray-500 focus:outline-none focus:border-green-500 transition-colors`}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-white transition-colors\"\n                >\n                  {showPassword ? (\n                    <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              {formErrors.password && (\n                <p className=\"mt-1 text-sm text-red-500\">{formErrors.password}</p>\n              )}\n            </div>\n\n            {/* Hugging Face Token */}\n            <div>\n              <div className=\"flex items-center gap-2 mb-2\">\n                <label htmlFor=\"huggingFaceToken\" className=\"text-sm font-medium text-gray-300\">\n                  Hugging Face Token\n                </label>\n                <div className=\"group relative\">\n                  <svg className=\"h-4 w-4 text-gray-400 cursor-help\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <div className=\"absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-3 py-2 bg-neutral-800 border border-neutral-600 rounded-lg text-sm text-gray-300 whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none\">\n                    Used for model downloads from Hugging Face\n                  </div>\n                </div>\n              </div>\n              <div className=\"relative\">\n                <input\n                  id=\"huggingFaceToken\"\n                  type={showToken ? \"text\" : \"password\"}\n                  value={formData.huggingFaceToken}\n                  onChange={(e) => handleInputChange(\"huggingFaceToken\", e.target.value)}\n                  placeholder=\"Enter your Hugging Face access token\"\n                  className={`w-full p-3 pr-12 rounded-lg bg-neutral-800 border ${\n                    formErrors.huggingFaceToken ? \"border-red-500\" : \"border-neutral-600\"\n                  } text-white placeholder-gray-500 focus:outline-none focus:border-green-500 transition-colors`}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowToken(!showToken)}\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-white transition-colors\"\n                >\n                  {showToken ? (\n                    <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              {formErrors.huggingFaceToken && (\n                <p className=\"mt-1 text-sm text-red-500\">{formErrors.huggingFaceToken}</p>\n              )}\n            </div>\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={`w-full py-3 px-4 rounded-lg font-medium transition-all ${\n                isSubmitting\n                  ? \"bg-neutral-700 text-gray-400 cursor-not-allowed\"\n                  : \"bg-green-600 text-white hover:bg-green-700\"\n              }`}\n            >\n              {isSubmitting \n                ? \"Applying Configuration...\" \n                : isConfigurationComplete\n                ? \"Apply Configuration Again\"\n                : \"Apply Configuration\"}\n            </button>\n\n            {/* Retry Button - Show after completion */}\n            {isConfigurationComplete && (\n              <div className=\"mt-4 flex gap-3\">\n                <button\n                  type=\"button\"\n                  onClick={handleRetry}\n                  className=\"flex-1 py-3 px-4 rounded-lg font-medium bg-neutral-700 text-white hover:bg-neutral-600 transition-all\"\n                >\n                  Clear Logs & Retry\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleClose}\n                  className=\"flex-1 py-3 px-4 rounded-lg font-medium bg-neutral-800 text-gray-300 hover:bg-neutral-700 transition-all\"\n                >\n                  Close\n                </button>\n              </div>\n            )}\n          </form>\n\n          {/* Configuration Status */}\n          {isSubmitting && (\n            <div className=\"mt-6 border-t border-neutral-700 pt-6\">\n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-white mb-4\">Applying Configuration</h3>\n                <Spinner />\n                <p className=\"text-sm text-gray-400 mt-4\">\n                  Please wait while we configure your VM...\n                </p>\n                <p className=\"text-xs text-gray-500 mt-2\">\n                  This process typically takes 1-3 minutes\n                </p>\n                {currentDisplayMessage && (\n                  <div className=\"mt-4 p-3 bg-neutral-800 rounded-lg border border-neutral-600\">\n                    <p className=\"text-sm text-green-400 font-medium animate-pulse\">\n                      {currentDisplayMessage}\n                    </p>\n                  </div>\n                )}\n                {configurationLogs.length > 0 && !currentDisplayMessage && (\n                  <p className=\"text-xs text-gray-400 mt-3 italic\">\n                    {configurationLogs[configurationLogs.length - 1]}\n                  </p>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Configuration Logs - Only show after completion */}\n          {!isSubmitting && isConfigurationComplete && configurationLogs.length > 0 && (\n            <div className=\"mt-6 border-t border-neutral-700 pt-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-white\">Configuration Logs</h3>\n                <div className=\"flex items-center gap-2\">\n                  <button\n                    type=\"button\"\n                    onClick={handleExportLogs}\n                    className=\"px-3 py-1 text-sm bg-neutral-700 hover:bg-neutral-600 text-white rounded-lg transition-colors flex items-center gap-2\"\n                  >\n                    <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    Export Logs\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowLogs(!showLogs)}\n                    className=\"text-gray-400 hover:text-white transition-colors\"\n                  >\n                    {showLogs ? (\n                      <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n                      </svg>\n                    ) : (\n                      <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    )}\n                  </button>\n                </div>\n              </div>\n              \n              {showLogs && (\n                <div className=\"bg-black rounded-lg border border-neutral-700 p-4 max-h-64 overflow-y-auto\">\n                  <div className=\"space-y-1 font-mono text-sm\">\n                    {(() => {\n                      // Separate logs into categories\n                      const summaryLogs: string[] = [];\n                      const stepsLogs: string[] = [];\n                      const otherLogs: string[] = [];\n                      let inSummary = false;\n                      let inSteps = false;\n                      \n                      configurationLogs.forEach((log) => {\n                        if (log.includes(\"=== Configuration Summary ===\")) {\n                          inSummary = true;\n                          inSteps = false;\n                          summaryLogs.push(log);\n                        } else if (log.includes(\"=== Steps Completed ===\")) {\n                          inSummary = false;\n                          inSteps = true;\n                          stepsLogs.push(log);\n                        } else if (inSummary) {\n                          summaryLogs.push(log);\n                        } else if (inSteps) {\n                          stepsLogs.push(log);\n                        } else {\n                          // Filter out redundant messages\n                          const skipMessages = [\n                            \"✅ Configuration applied successfully!\",\n                            \"Configuration applied successfully.\",\n                            \"PID .* no GPU usage entry found\"  // Skip PID messages that show no GPU usage\n                          ];\n                          \n                          const shouldSkip = skipMessages.some(pattern => {\n                            if (pattern.includes(\".*\")) {\n                              return new RegExp(pattern).test(log);\n                            }\n                            return log === pattern;\n                          });\n                          \n                          if (!shouldSkip) {\n                            otherLogs.push(log);\n                          }\n                        }\n                      });\n                      \n                      // Display summary first, then other logs, then steps\n                      const orderedLogs = [...summaryLogs, ...otherLogs, ...stepsLogs];\n                      \n                      // Filter out debug messages from main configuration logs\n                      const debugPatterns = [\n                        \"Starting configuration process\",\n                        \"Connecting to\",\n                        \"Connected successfully\",\n                        \"Gathering system information\",\n                        \"Hypervisor Layer\",\n                        \"Checking GPU availability\",\n                        \"GPU:\",\n                        \"Starting setup phase\",\n                        \"Authenticating with\",\n                        \"Setting up Python\",\n                        \"Installing\",\n                        \"Cleaned up\",\n                        \"Attempt\",\n                        \"server started\",\n                        \"Found\",\n                        \"GPU memory detected\",\n                        \"Post-launch cleanup\",\n                        \"SSH connection closed\"\n                      ];\n                      \n                      const filteredLogs = orderedLogs.filter(log => {\n                        // Keep summary and steps\n                        if (summaryLogs.includes(log) || stepsLogs.includes(log)) {\n                          return true;\n                        }\n                        // Exclude debug messages\n                        return !debugPatterns.some(pattern => log.includes(pattern));\n                      });\n                      \n                      return filteredLogs.map((log, index) => {\n                        const isSummaryHeader = log.includes(\"=== Configuration Summary ===\") || log.includes(\"=== Steps Completed ===\");\n                        const isStepItem = log.startsWith(\"✓\");\n                        const isSummaryItem = summaryLogs.includes(log) && !isSummaryHeader;\n                        \n                        return (\n                          <div \n                            key={index} \n                            className={`\n                              text-gray-300 \n                              ${isSummaryHeader ? 'font-bold text-green-400 mt-3 mb-1' : ''} \n                              ${isStepItem ? 'ml-4 text-green-300' : ''}\n                              ${isSummaryItem ? 'ml-4' : ''}\n                            `}\n                          >\n                            {log}\n                          </div>\n                        );\n                      });\n                    })()}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Debug Output - Show detailed intermediate steps */}\n          {!isSubmitting && isConfigurationComplete && configurationLogs.length > 0 && (\n            <div className=\"mt-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-white\">Debug Output</h3>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowDebugLogs(!showDebugLogs)}\n                  className=\"text-gray-400 hover:text-white transition-colors flex items-center gap-2\"\n                >\n                  <span className=\"text-sm\">Show detailed steps</span>\n                  {showDebugLogs ? (\n                    <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              \n              {showDebugLogs && (\n                <div className=\"bg-black rounded-lg border border-neutral-700 p-4 max-h-64 overflow-y-auto\">\n                  <div className=\"space-y-1 font-mono text-xs\">\n                    {(() => {\n                      // Filter logs to show only intermediate/debug steps\n                      const debugLogs = configurationLogs.filter(log => {\n                        // Exclude summary sections\n                        if (log.includes(\"===\") || log.startsWith(\"✓\")) return false;\n                        \n                        // Include these types of messages\n                        const includePatterns = [\n                          \"Starting configuration process\",\n                          \"Connecting to\",\n                          \"Connected successfully\",\n                          \"Gathering system information\",\n                          \"Hypervisor Layer\",\n                          \"Checking GPU availability\",\n                          \"GPU:\",\n                          \"Starting setup phase\",\n                          \"Authenticating with\",\n                          \"Setting up Python\",\n                          \"Installing\",\n                          \"Cleaned up\",\n                          \"Attempt\",\n                          \"server started\",\n                          \"Found\",\n                          \"GPU memory detected\",\n                          \"Post-launch cleanup\",\n                          \"SSH connection closed\",\n                          \"PID\"\n                        ];\n                        \n                        return includePatterns.some(pattern => log.includes(pattern));\n                      });\n                      \n                      return debugLogs.map((log, index) => {\n                        // Color code different types of messages\n                        let className = \"text-gray-400\";\n                        \n                        if (log.includes(\"Error\") || log.includes(\"failed\")) {\n                          className = \"text-red-400\";\n                        } else if (log.includes(\"successfully\") || log.includes(\"✓\")) {\n                          className = \"text-green-400\";\n                        } else if (log.includes(\"Attempt\") || log.includes(\"GPU memory\")) {\n                          className = \"text-yellow-400\";\n                        } else if (log.includes(\"Connecting\") || log.includes(\"Starting\")) {\n                          className = \"text-blue-400\";\n                        }\n                        \n                        return (\n                          <div key={index} className={className}>\n                            <span className=\"text-gray-600\">$</span> {log}\n                          </div>\n                        );\n                      });\n                    })()}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;AAIjC;;;AAFA;;AAIA,oBAAoB;AACpB,MAAM,UAAU,kBACd,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;;;;;;;;;;KAFb;AA0BS,SAAS,uBAAuB,EAC7C,MAAM,EACN,OAAO,EACP,aAAa,EACe;;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;QACjD,aAAa;QACb,UAAU;QACV,UAAU;QACV,kBAAkB;IACpB;IAEA,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,CAAC;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACvE,MAAM,CAAC,yBAAyB,2BAA2B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE3E,6BAA6B;IAC7B,MAAM,oBAAoB,CAAC;QACzB,MAAM,UAAU;QAChB,OAAO,QAAQ,IAAI,CAAC;IACtB;IAEA,uBAAuB;IACvB,MAAM,eAAe;QACnB,MAAM,SAAqB,CAAC;QAE5B,IAAI,CAAC,SAAS,WAAW,EAAE;YACzB,OAAO,WAAW,GAAG;QACvB,OAAO,IAAI,CAAC,kBAAkB,SAAS,WAAW,GAAG;YACnD,OAAO,WAAW,GAAG;QACvB;QAEA,IAAI,CAAC,SAAS,QAAQ,EAAE;YACtB,OAAO,QAAQ,GAAG;QACpB;QAEA,IAAI,CAAC,SAAS,QAAQ,EAAE;YACtB,OAAO,QAAQ,GAAG;QACpB;QAEA,IAAI,CAAC,SAAS,gBAAgB,EAAE;YAC9B,OAAO,gBAAgB,GAAG;QAC5B;QAEA,cAAc;QACd,OAAO,OAAO,IAAI,CAAC,QAAQ,MAAM,KAAK;IACxC;IAEA,MAAM,oBAAoB,CAAC,OAAuB;QAChD,YAAY,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,MAAM,EAAE;YAAM,CAAC;QAClD,gGAAgG;QAChG,IAAI,SAAS,YAAY;YACvB,cAAc,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,MAA0B,EAAE;gBAAU,CAAC;QAC9E;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,CAAC,gBAAgB;YACnB;QACF;QAEA,gBAAgB;QAChB,YAAY,QAAQ,sBAAsB;QAC1C,2BAA2B;QAC3B,qBAAqB;YAAC;SAAoC;QAC1D,yBAAyB,KAAK,+BAA+B;QAE7D,IAAI;YACF,+CAA+C;YAC/C,IAAI,aAAa,CAAC;YAClB,IAAI,iBAAiB,cAAc,UAAU,EAAE;gBAC7C,8EAA8E;gBAC9E,aAAa,cAAc,UAAU;YACvC,OAAO,IAAI,eAAe;gBACxB,8BAA8B;gBAC9B,aAAa;YACf;YAEA,MAAM,WAAW,MAAM,MAAM,4BAA4B;gBACvD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,OAAO,SAAS,WAAW;oBAC3B,UAAU,SAAS,QAAQ;oBAC3B,UAAU,SAAS,QAAQ;oBAC3B,eAAe;oBACf,UAAU,SAAS,gBAAgB;oBACnC,aAAa,eAAe,eAAe;gBAC7C;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAC1D;YAEA,8BAA8B;YAC9B,MAAM,SAAS,SAAS,IAAI,EAAE;YAC9B,MAAM,UAAU,IAAI;YACpB,IAAI,SAAS;YAEb,IAAI,QAAQ;gBACV,MAAO,KAAM;oBACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,IAAI;oBACzC,IAAI,MAAM;oBAEV,MAAM,QAAQ,QAAQ,MAAM,CAAC,OAAO;wBAAE,QAAQ;oBAAK;oBACnD,UAAU;oBAEV,yBAAyB;oBACzB,MAAM,QAAQ,OAAO,KAAK,CAAC;oBAC3B,SAAS,MAAM,GAAG,MAAM,IAAI,0CAA0C;oBAEtE,KAAK,MAAM,QAAQ,MAAO;wBACxB,IAAI,KAAK,UAAU,CAAC,WAAW;4BAC7B,IAAI;gCACF,MAAM,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;gCAEvC,oCAAoC;gCACpC,IAAI,KAAK,eAAe,EAAE;oCACxB,yBAAyB,KAAK,eAAe;gCAC/C;gCAEA,oCAAoC;gCACpC,IAAI,KAAK,OAAO,EAAE;oCAChB,4BAA4B;oCAC5B,MAAM,WAAW,KAAK,OAAO,CAAC,KAAK,CAAC;oCACpC,KAAK,MAAM,OAAO,SAAU;wCAC1B,IAAI,IAAI,IAAI,IAAI;4CACd,wEAAwE;4CACxE,MAAM,WAAW,IAAI,IAAI,GAAG,OAAO,CAAC,2CAA2C;4CAC/E,qBAAqB,CAAC,OAAS;uDAAI;oDAAM;iDAAS;wCACpD;oCACF;gCACF;gCAEA,yBAAyB;gCACzB,IAAI,KAAK,eAAe,EAAE;oCACxB,KAAK,MAAM,UAAU,KAAK,eAAe,CAAE;wCACzC,IAAI,OAAO,OAAO,EAAE;4CAClB,qBAAqB,CAAC,OAAS;uDAC1B;oDACH,CAAC,EAAE,EAAE,OAAO,OAAO,EAAE;iDACtB;4CACD,IAAI,OAAO,MAAM,EAAE;gDACjB,qBAAqB,CAAC,OAAS;2DAC1B;wDACH,OAAO,MAAM,CAAC,IAAI;qDACnB;4CACH;4CACA,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,OAAO,EAAE;gDACnC,qBAAqB,CAAC,OAAS;2DAC1B;wDACH,CAAC,OAAO,EAAE,OAAO,KAAK,EAAE;qDACzB;4CACH;wCACF;oCACF;gCACF;gCAEA,gCAAgC;gCAChC,IAAI,KAAK,MAAM,KAAK,aAAa;oCAC/B,8DAA8D;oCAC9D,2BAA2B;oCAC3B,YAAY,OAAO,wCAAwC;gCAC3D,yDAAyD;gCAC3D,OAAO,IAAI,KAAK,MAAM,KAAK,SAAS;oCAClC,qBAAqB,CAAC,OAAS;+CAC1B;4CACH,CAAC,SAAS,EAAE,KAAK,KAAK,IAAI,wBAAwB;yCACnD;oCACD,2BAA2B;oCAC3B,YAAY,OAAO,mCAAmC;gCACtD,yDAAyD;gCAC3D;4BACF,EAAE,OAAO,YAAY;gCACnB,QAAQ,KAAK,CAAC,2BAA2B;4BAC3C;wBACF;oBACF;gBACF;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,qBAAqB,CAAC,OAAS;uBAC1B;oBACH,CAAC,SAAS,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,iCAAiC;iBACvF;YACD,2BAA2B;YAC3B,YAAY,OAAO,qBAAqB;QACxC,0CAA0C;QAC5C,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,cAAc;QAClB,iCAAiC;QACjC,2BAA2B;QAC3B,qBAAqB,EAAE;QACvB,YAAY;QACZ,iBAAiB;QACjB,yBAAyB;IACzB,uCAAuC;IACzC;IAEA,MAAM,cAAc;QAClB,mBAAmB;QACnB,YAAY;YACV,aAAa;YACb,UAAU;YACV,UAAU;YACV,kBAAkB;QACpB;QACA,cAAc,CAAC;QACf,gBAAgB;QAChB,aAAa;QACb,gBAAgB;QAChB,YAAY;QACZ,qBAAqB,EAAE;QACvB,2BAA2B;QAC3B,iBAAiB;QACjB,yBAAyB;QACzB;IACF;IAEA,MAAM,mBAAmB;QACvB,2DAA2D;QAC3D,IAAI,aAAa,kBAAkB,IAAI,CAAC;QAExC,kDAAkD;QAClD,IAAI,eAAe;YACjB,MAAM,eAAe,+BACnB,kBAAkB,MAAM,CAAC,CAAA;gBACvB,IAAI,IAAI,QAAQ,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,OAAO;gBACvD,MAAM,kBAAkB;oBACtB;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,OAAO,gBAAgB,IAAI,CAAC,CAAA,UAAW,IAAI,QAAQ,CAAC;YACtD,GAAG,IAAI,CAAC;YAEV,cAAc;QAChB;QAEA,yBAAyB;QACzB,MAAM,SAAS;YACb;YACA,CAAC,MAAM,EAAE,IAAI,OAAO,cAAc,IAAI;YACtC,CAAC,OAAO,EAAE,SAAS,WAAW,EAAE;YAChC,CAAC,UAAU,EAAE,SAAS,QAAQ,EAAE;YAChC,eAAe,YAAY,eAAe,CAAC,cAAc,EAAE,cAAc,UAAU,CAAC,YAAY,EAAE,GAAG;YACrG,eAAe,YAAY,aAAa,CAAC,OAAO,EAAE,cAAc,UAAU,CAAC,UAAU,EAAE,GAAG;YAC1F;SACD,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;QAEvB,MAAM,cAAc,SAAS,OAAO;QAEpC,2BAA2B;QAC3B,MAAM,OAAO,IAAI,KAAK;YAAC;SAAY,EAAE;YAAE,MAAM;QAAa;QAC1D,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,IAAI,GAAG;QACZ,KAAK,QAAQ,GAAG,CAAC,iBAAiB,EAAE,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC;QACpG,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,KAAK,KAAK;QACV,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,IAAI,eAAe,CAAC;IACtB;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAmC;;;;;;8CACjD,6LAAC;oCAAE,WAAU;8CAA6B;;;;;;;;;;;;sCAI5C,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;8BAM3E,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAK,UAAU;4BAAc,WAAU;;8CAEtC,6LAAC;;sDACC,6LAAC;4CAAM,SAAQ;4CAAc,WAAU;sDAA+C;;;;;;sDAGtF,6LAAC;4CACC,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,WAAW;4CAC3B,UAAU,CAAC,IAAM,kBAAkB,eAAe,EAAE,MAAM,CAAC,KAAK;4CAChE,aAAY;4CACZ,WAAW,CAAC,4CAA4C,EACtD,WAAW,WAAW,GAAG,mBAAmB,qBAC7C,4FAA4F,CAAC;;;;;;wCAE/F,WAAW,WAAW,kBACrB,6LAAC;4CAAE,WAAU;sDAA6B,WAAW,WAAW;;;;;;;;;;;;8CAKpE,6LAAC;;sDACC,6LAAC;4CAAM,SAAQ;4CAAW,WAAU;sDAA+C;;;;;;sDAGnF,6LAAC;4CACC,IAAG;4CACH,MAAK;4CACL,OAAO,SAAS,QAAQ;4CACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC7D,aAAY;4CACZ,WAAW,CAAC,4CAA4C,EACtD,WAAW,QAAQ,GAAG,mBAAmB,qBAC1C,4FAA4F,CAAC;;;;;;wCAE/F,WAAW,QAAQ,kBAClB,6LAAC;4CAAE,WAAU;sDAA6B,WAAW,QAAQ;;;;;;;;;;;;8CAKjE,6LAAC;;sDACC,6LAAC;4CAAM,SAAQ;4CAAW,WAAU;sDAA+C;;;;;;sDAGnF,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,IAAG;oDACH,MAAM,eAAe,SAAS;oDAC9B,OAAO,SAAS,QAAQ;oDACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;oDAC7D,aAAY;oDACZ,WAAW,CAAC,kDAAkD,EAC5D,WAAW,QAAQ,GAAG,mBAAmB,qBAC1C,4FAA4F,CAAC;;;;;;8DAEhG,6LAAC;oDACC,MAAK;oDACL,SAAS,IAAM,gBAAgB,CAAC;oDAChC,WAAU;8DAET,6BACC,6LAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;kEACjE,cAAA,6LAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;6EAGvE,6LAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;;0EACjE,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;0EACrE,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;wCAK5E,WAAW,QAAQ,kBAClB,6LAAC;4CAAE,WAAU;sDAA6B,WAAW,QAAQ;;;;;;;;;;;;8CAKjE,6LAAC;;sDACC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,SAAQ;oDAAmB,WAAU;8DAAoC;;;;;;8DAGhF,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;4DAAoC,MAAK;4DAAO,QAAO;4DAAe,SAAQ;sEAC3F,cAAA,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;sEAEvE,6LAAC;4DAAI,WAAU;sEAAqO;;;;;;;;;;;;;;;;;;sDAKxP,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,IAAG;oDACH,MAAM,YAAY,SAAS;oDAC3B,OAAO,SAAS,gBAAgB;oDAChC,UAAU,CAAC,IAAM,kBAAkB,oBAAoB,EAAE,MAAM,CAAC,KAAK;oDACrE,aAAY;oDACZ,WAAW,CAAC,kDAAkD,EAC5D,WAAW,gBAAgB,GAAG,mBAAmB,qBAClD,4FAA4F,CAAC;;;;;;8DAEhG,6LAAC;oDACC,MAAK;oDACL,SAAS,IAAM,aAAa,CAAC;oDAC7B,WAAU;8DAET,0BACC,6LAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;kEACjE,cAAA,6LAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;6EAGvE,6LAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;;0EACjE,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;0EACrE,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;wCAK5E,WAAW,gBAAgB,kBAC1B,6LAAC;4CAAE,WAAU;sDAA6B,WAAW,gBAAgB;;;;;;;;;;;;8CAKzE,6LAAC;oCACC,MAAK;oCACL,UAAU;oCACV,WAAW,CAAC,uDAAuD,EACjE,eACI,oDACA,8CACJ;8CAED,eACG,8BACA,0BACA,8BACA;;;;;;gCAIL,yCACC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAK;4CACL,SAAS;4CACT,WAAU;sDACX;;;;;;sDAGD,6LAAC;4CACC,MAAK;4CACL,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;wBAQN,8BACC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAsC;;;;;;kDACpD,6LAAC;;;;;kDACD,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;kDAG1C,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;oCAGzC,uCACC,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAE,WAAU;sDACV;;;;;;;;;;;oCAIN,kBAAkB,MAAM,GAAG,KAAK,CAAC,uCAChC,6LAAC;wCAAE,WAAU;kDACV,iBAAiB,CAAC,kBAAkB,MAAM,GAAG,EAAE;;;;;;;;;;;;;;;;;wBAQzD,CAAC,gBAAgB,2BAA2B,kBAAkB,MAAM,GAAG,mBACtE,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAiC;;;;;;sDAC/C,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,MAAK;oDACL,SAAS;oDACT,WAAU;;sEAEV,6LAAC;4DAAI,WAAU;4DAAU,MAAK;4DAAO,QAAO;4DAAe,SAAQ;sEACjE,cAAA,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;wDACjE;;;;;;;8DAGR,6LAAC;oDACC,MAAK;oDACL,SAAS,IAAM,YAAY,CAAC;oDAC5B,WAAU;8DAET,yBACC,6LAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;kEACjE,cAAA,6LAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;6EAGvE,6LAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;kEACjE,cAAA,6LAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAO9E,0BACC,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;kDACZ,CAAC;4CACA,gCAAgC;4CAChC,MAAM,cAAwB,EAAE;4CAChC,MAAM,YAAsB,EAAE;4CAC9B,MAAM,YAAsB,EAAE;4CAC9B,IAAI,YAAY;4CAChB,IAAI,UAAU;4CAEd,kBAAkB,OAAO,CAAC,CAAC;gDACzB,IAAI,IAAI,QAAQ,CAAC,kCAAkC;oDACjD,YAAY;oDACZ,UAAU;oDACV,YAAY,IAAI,CAAC;gDACnB,OAAO,IAAI,IAAI,QAAQ,CAAC,4BAA4B;oDAClD,YAAY;oDACZ,UAAU;oDACV,UAAU,IAAI,CAAC;gDACjB,OAAO,IAAI,WAAW;oDACpB,YAAY,IAAI,CAAC;gDACnB,OAAO,IAAI,SAAS;oDAClB,UAAU,IAAI,CAAC;gDACjB,OAAO;oDACL,gCAAgC;oDAChC,MAAM,eAAe;wDACnB;wDACA;wDACA,kCAAmC,2CAA2C;qDAC/E;oDAED,MAAM,aAAa,aAAa,IAAI,CAAC,CAAA;wDACnC,IAAI,QAAQ,QAAQ,CAAC,OAAO;4DAC1B,OAAO,IAAI,OAAO,SAAS,IAAI,CAAC;wDAClC;wDACA,OAAO,QAAQ;oDACjB;oDAEA,IAAI,CAAC,YAAY;wDACf,UAAU,IAAI,CAAC;oDACjB;gDACF;4CACF;4CAEA,qDAAqD;4CACrD,MAAM,cAAc;mDAAI;mDAAgB;mDAAc;6CAAU;4CAEhE,yDAAyD;4CACzD,MAAM,gBAAgB;gDACpB;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;gDACA;6CACD;4CAED,MAAM,eAAe,YAAY,MAAM,CAAC,CAAA;gDACtC,yBAAyB;gDACzB,IAAI,YAAY,QAAQ,CAAC,QAAQ,UAAU,QAAQ,CAAC,MAAM;oDACxD,OAAO;gDACT;gDACA,yBAAyB;gDACzB,OAAO,CAAC,cAAc,IAAI,CAAC,CAAA,UAAW,IAAI,QAAQ,CAAC;4CACrD;4CAEA,OAAO,aAAa,GAAG,CAAC,CAAC,KAAK;gDAC5B,MAAM,kBAAkB,IAAI,QAAQ,CAAC,oCAAoC,IAAI,QAAQ,CAAC;gDACtF,MAAM,aAAa,IAAI,UAAU,CAAC;gDAClC,MAAM,gBAAgB,YAAY,QAAQ,CAAC,QAAQ,CAAC;gDAEpD,qBACE,6LAAC;oDAEC,WAAW,CAAC;;8BAEV,EAAE,kBAAkB,uCAAuC,GAAG;8BAC9D,EAAE,aAAa,wBAAwB,GAAG;8BAC1C,EAAE,gBAAgB,SAAS,GAAG;4BAChC,CAAC;8DAEA;mDARI;;;;;4CAWX;wCACF,CAAC;;;;;;;;;;;;;;;;;wBAQV,CAAC,gBAAgB,2BAA2B,kBAAkB,MAAM,GAAG,mBACtE,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAiC;;;;;;sDAC/C,6LAAC;4CACC,MAAK;4CACL,SAAS,IAAM,iBAAiB,CAAC;4CACjC,WAAU;;8DAEV,6LAAC;oDAAK,WAAU;8DAAU;;;;;;gDACzB,8BACC,6LAAC;oDAAI,WAAU;oDAAU,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DACjE,cAAA,6LAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;yEAGvE,6LAAC;oDAAI,WAAU;oDAAU,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DACjE,cAAA,6LAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;gCAM5E,+BACC,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;kDACZ,CAAC;4CACA,oDAAoD;4CACpD,MAAM,YAAY,kBAAkB,MAAM,CAAC,CAAA;gDACzC,2BAA2B;gDAC3B,IAAI,IAAI,QAAQ,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,OAAO;gDAEvD,kCAAkC;gDAClC,MAAM,kBAAkB;oDACtB;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;iDACD;gDAED,OAAO,gBAAgB,IAAI,CAAC,CAAA,UAAW,IAAI,QAAQ,CAAC;4CACtD;4CAEA,OAAO,UAAU,GAAG,CAAC,CAAC,KAAK;gDACzB,yCAAyC;gDACzC,IAAI,YAAY;gDAEhB,IAAI,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,WAAW;oDACnD,YAAY;gDACd,OAAO,IAAI,IAAI,QAAQ,CAAC,mBAAmB,IAAI,QAAQ,CAAC,MAAM;oDAC5D,YAAY;gDACd,OAAO,IAAI,IAAI,QAAQ,CAAC,cAAc,IAAI,QAAQ,CAAC,eAAe;oDAChE,YAAY;gDACd,OAAO,IAAI,IAAI,QAAQ,CAAC,iBAAiB,IAAI,QAAQ,CAAC,aAAa;oDACjE,YAAY;gDACd;gDAEA,qBACE,6LAAC;oDAAgB,WAAW;;sEAC1B,6LAAC;4DAAK,WAAU;sEAAgB;;;;;;wDAAQ;wDAAE;;mDADlC;;;;;4CAId;wCACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUrB;GAruBwB;MAAA","debugId":null}},
    {"offset": {"line": 3408, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/Chat/VGPUConfigDrawer.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport VGPUConfigCard from \"./VGPUConfigCard\";\nimport ApplyConfigurationForm from \"./ApplyConfigurationForm\";\n\ninterface VGPUConfigDrawerProps {\n  config: any;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function VGPUConfigDrawer({ config, isOpen, onClose }: VGPUConfigDrawerProps) {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [isApplyFormOpen, setIsApplyFormOpen] = useState(false);\n\n  // Close drawer on escape key\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\" && isOpen) {\n        onClose();\n      }\n    };\n    document.addEventListener(\"keydown\", handleEscape);\n    return () => document.removeEventListener(\"keydown\", handleEscape);\n  }, [isOpen, onClose]);\n\n  // Prevent body scroll when drawer is open\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen]);\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div\n        className={`fixed inset-0 bg-black/50 backdrop-blur-sm transition-opacity duration-300 z-40 ${\n          isOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n        }`}\n        onClick={onClose}\n      />\n\n      {/* Drawer */}\n      <div\n        className={`fixed inset-y-0 right-0 z-50 bg-neutral-950 shadow-2xl transition-all duration-300 ease-in-out ${\n          isOpen ? \"translate-x-0\" : \"translate-x-full\"\n        } ${\n          isFullScreen ? \"w-full\" : \"w-full md:w-[600px] lg:w-[700px] xl:w-[800px]\"\n        }`}\n      >\n        {/* Drawer Header */}\n        <div className=\"sticky top-0 z-10 bg-gradient-to-r from-[#76b900] to-[#5a8c00] px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <h2 className=\"text-lg font-semibold text-white\">vGPU Configuration Details</h2>\n              {isFullScreen && (\n                <span className=\"text-sm text-green-100 opacity-75\">Full Screen Mode</span>\n              )}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {/* Full Screen Toggle */}\n              <button\n                onClick={() => setIsFullScreen(!isFullScreen)}\n                className=\"p-2 hover:bg-white/10 rounded transition-colors group\"\n                title={isFullScreen ? \"Exit full screen\" : \"Enter full screen\"}\n              >\n                {isFullScreen ? (\n                  <svg className=\"w-5 h-5 text-white group-hover:text-green-100\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                ) : (\n                  <svg className=\"w-5 h-5 text-white group-hover:text-green-100\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\" />\n                  </svg>\n                )}\n              </button>\n              {/* Close Button */}\n              <button\n                onClick={onClose}\n                className=\"p-2 hover:bg-white/10 rounded transition-colors group\"\n                title=\"Close drawer\"\n              >\n                <svg className=\"w-5 h-5 text-white group-hover:text-green-100\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Drawer Content */}\n        <div className=\"h-full overflow-y-auto pb-20\">\n          <div className={`p-6 ${isFullScreen ? \"max-w-6xl mx-auto\" : \"\"}`}>\n            {config && <VGPUConfigCard config={config} />}\n            \n            {/* Additional Actions */}\n            <div className=\"mt-6 flex flex-wrap gap-3\">\n              <button \n                onClick={() => setIsApplyFormOpen(true)}\n                className=\"px-4 py-2 bg-[#76b900] hover:bg-[#5a8c00] text-white rounded-lg font-medium transition-colors\"\n              >\n                Verify Configuration\n              </button>\n\n            </div>\n\n            \n          </div>\n        </div>\n      </div>\n\n      {/* Apply Configuration Form Modal */}\n      <ApplyConfigurationForm \n        isOpen={isApplyFormOpen}\n        onClose={() => setIsApplyFormOpen(false)}\n        configuration={config}\n      />\n    </>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3685, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/Chat/WorkloadConfigWizard.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\n\ninterface AdvancedConfig {\n  modelMemoryOverhead: number;\n  hypervisorReserveGb: number;\n  cudaMemoryOverhead: number;\n  vcpuPerGpu: number;\n  ramGbPerVcpu: number;\n}\n\ninterface WorkloadConfig {\n  workloadType: string;\n  specificModel: string;\n  modelSize: string;\n  batchSize: string;\n  promptSize: string;\n  responseSize: string;\n  embeddingModel: string;\n  gpuInventory: { [key: string]: number };\n  precision: string;\n  vectorDimension?: string;\n  numberOfVectors?: string;\n  advancedConfig: AdvancedConfig;\n}\n\ninterface WorkloadConfigWizardProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (query: string) => void;\n}\n\nexport default function WorkloadConfigWizard({\n  isOpen,\n  onClose,\n  onSubmit,\n}: WorkloadConfigWizardProps) {\n  const [config, setConfig] = useState<WorkloadConfig>({\n    workloadType: \"\",\n    specificModel: \"\",\n    modelSize: \"\",\n    batchSize: \"\",\n    promptSize: \"1024\",\n    responseSize: \"256\",\n    embeddingModel: \"\",\n    gpuInventory: {},\n    precision: \"\",\n    vectorDimension: \"384\",  // Default to 384\n    numberOfVectors: \"10000\", // Default to 10,000\n    advancedConfig: {\n      modelMemoryOverhead: 1.3,\n      hypervisorReserveGb: 3.0,\n      cudaMemoryOverhead: 1.2,\n      vcpuPerGpu: 8,\n      ramGbPerVcpu: 8,\n    },\n  });\n\n  const [currentStep, setCurrentStep] = useState(1);\n  const totalSteps = 3;\n  const [dynamicModels, setDynamicModels] = useState<Array<{ value: string; label: string; modelTag: string }>>([]);\n  const [isLoadingModels, setIsLoadingModels] = useState(true);\n  const [showAdvancedConfig, setShowAdvancedConfig] = useState(false);\n\n  // Fetch dynamic models from backend on mount\n  useEffect(() => {\n    const fetchModels = async () => {\n      try {\n        // Use Next.js API route to avoid CORS issues\n        const response = await fetch('/api/available-models');\n        \n        if (response.ok) {\n          const data = await response.json();\n          if (data.models && data.models.length > 0) {\n            // Use modelTag as value to ensure uniqueness (full model ID like \"org/model-name\")\n            const formattedModels = data.models.map((model: any) => ({\n              value: model.modelTag.toLowerCase().replace(/\\//g, '-').replace(/\\./g, '-'),\n              label: model.label,\n              modelTag: model.modelTag\n            }));\n            setDynamicModels(formattedModels);\n            console.log(`✓ Successfully loaded ${formattedModels.length} models from HuggingFace`);\n          } else {\n            console.warn('No models returned from API');\n          }\n        } else {\n          console.warn('API returned non-OK status:', response.status);\n        }\n      } catch (error) {\n        console.error('Failed to fetch dynamic models:', error);\n        console.log('Using fallback model list');\n        // Fallback to hardcoded models will be used\n      } finally {\n        setIsLoadingModels(false);\n      }\n    };\n\n    if (isOpen) {\n      fetchModels();\n    }\n  }, [isOpen]);\n\n  const workloadTypes = [\n    { value: \"rag\", label: \"RAG (Retrieval-Augmented Generation)\", desc: \"Document search and generation workflows\" },\n    { value: \"inference\", label: \"LLM Inference\", desc: \"Running predictions and serving trained models\" },\n    // { value: \"fine-tuning\", label: \"Model Fine-Tuning\", desc: \"Adapting pre-trained models for specific tasks\" }\n  ];\n\n  const modelSizes = [\n    { value: \"small\", label: \"Small (< 7B parameters)\", desc: \"Lightweight models, fast inference\" },\n    { value: \"medium\", label: \"Medium (7B-30B parameters)\", desc: \"Balanced performance and speed\" },\n    { value: \"large\", label: \"Large (40B-70B parameters)\", desc: \"High-quality results, more compute\" },\n    { value: \"xlarge\", label: \"Extra Large (70B+ parameters)\", desc: \"Heavy compute, stronger reasoning models\" }\n  ];\n\n  const embeddingModels = [\n    { value: \"nvidia/nvolveqa-embed-large-1B\", label: \"nvidia/nvolveqa-embed-large-1B\", desc: \"1B parameter embedding model\" },\n    { value: \"text-embedding-ada-002-350M\", label: \"text-embedding-ada-002-350M\", desc: \"350M parameter OpenAI embedding model\" },\n    { value: \"nvidia/nvolveqa-embed-base-400M\", label: \"nvidia/nvolveqa-embed-base-400M\", desc: \"400M parameter embedding model\" },\n    { value: \"nvidia/nemo-embed-qa-200M\", label: \"nvidia/nemo-embed-qa-200M\", desc: \"200M parameter QA embedding model\" },\n    { value: \"all-MiniLM-L6-v2-80M\", label: \"all-MiniLM-L6-v2-80M\", desc: \"80M parameter compact embedding model\" },\n    { value: \"llama-3-2-nv-embedqa-1b-v2\", label: \"llama-3-2-nv-embedqa-1b-v2\", desc: \"Llama 3.2 based embedding model\" }\n  ];\n\n  const performanceLevels = [\n    { value: \"basic\", label: \"Basic\", desc: \"Cost-optimized, adequate performance\" },\n    { value: \"standard\", label: \"Standard\", desc: \"Good balance of cost and performance\" },\n    { value: \"high\", label: \"High Performance\", desc: \"Optimized for speed and throughput\" },\n    { value: \"maximum\", label: \"Maximum\", desc: \"Best possible performance, premium cost\" }\n  ];\n\n  const availableGPUInventory = [\n    { value: \"l40s\", label: \"NVIDIA L40S\", desc: \"48GB GDDR6 with ECC, Ada Lovelace, 350W - ML training & inference + virtual workstations\" },\n    { value: \"l40\", label: \"NVIDIA L40\", desc: \"48GB GDDR6 with ECC, Ada Lovelace - Virtual workstations & compute workloads\" },\n    { value: \"l4\", label: \"NVIDIA L4\", desc: \"24GB GDDR6 with ECC, Ada Lovelace, 72W - AI inference, small model training & 3D graphics\" },\n    { value: \"a40\", label: \"NVIDIA A40\", desc: \"48GB GDDR6 with ECC, Ampere, 300W - 3D design & mixed virtual workstation workloads\" },\n    { value: \"DC\", label: \"NVIDIA RTX PRO 6000 Blackwell Server Edition (Refer as DC)\", desc: \"96GB GDDR7 with ECC, Blackwell, passive‑cooled dual‑slot PCIe Gen5 – Enterprise AI/graphics, scientific computing & virtual workstations\" },\n  ];\n\n  // Fallback hardcoded models in case dynamic fetch fails\n  const fallbackModels = [\n    { value: \"llama-3-8b\", label: \"Llama-3-8B\", modelTag: \"meta-llama/Meta-Llama-3-8B-Instruct\" },\n    { value: \"llama-3-70b\", label: \"Llama-3-70B\", modelTag: \"meta-llama/Meta-Llama-3-70B-Instruct\" },\n    { value: \"llama-3.1-8b\", label: \"Llama-3.1-8B\", modelTag: \"meta-llama/Llama-3.1-8B-Instruct\" },\n    { value: \"llama-3.1-70b\", label: \"Llama-3.1-70B\", modelTag: \"meta-llama/Llama-3.3-70B-Instruct\" },\n    { value: \"mistral-7b\", label: \"Mistral-7B\", modelTag: \"mistralai/Mistral-7B-Instruct-v0.3\" },\n    { value: \"falcon-7b\", label: \"Falcon-7B\", modelTag: \"tiiuae/falcon-7b-instruct\" },\n    { value: \"falcon-40b\", label: \"Falcon-40B\", modelTag: \"tiiuae/falcon-40b-instruct\" },\n    { value: \"falcon-180b\", label: \"Falcon-180B\", modelTag: \"tiiuae/falcon-180B\" },\n    { value: \"qwen-14b\", label: \"Qwen-14B\", modelTag: \"Qwen/Qwen3-14B\" },\n  ];\n\n  // Use dynamic models if loaded, otherwise use fallback\n  const specificModels = dynamicModels.length > 0 ? dynamicModels : fallbackModels;\n\n  const precisionOptions = [\n    { value: \"fp16\", label: \"FP16\", desc: \"Half precision - Recommended balance of performance and accuracy\" },\n    { value: \"int8\", label: \"INT-8\", desc: \"8-bit integer - Highest performance, some accuracy trade-off\" },\n  ];\n\n  const handleInputChange = (field: keyof WorkloadConfig, value: string) => {\n    setConfig((prev: WorkloadConfig) => ({ ...prev, [field]: value }));\n  };\n\n  const handleAdvancedConfigChange = (field: keyof AdvancedConfig, value: number) => {\n    setConfig((prev: WorkloadConfig) => ({\n      ...prev,\n      advancedConfig: {\n        ...prev.advancedConfig,\n        [field]: value,\n      },\n    }));\n  };\n\n  const handleGPUInventoryChange = (gpuType: string, quantity: number) => {\n    setConfig((prev: WorkloadConfig) => {\n      const newInventory = { ...prev.gpuInventory };\n      if (quantity <= 0) {\n        delete newInventory[gpuType];\n      } else {\n        newInventory[gpuType] = quantity;\n      }\n      return { ...prev, gpuInventory: newInventory };\n    });\n  };\n\n  const getTotalGPUs = (): number => {\n    return Object.values(config.gpuInventory).reduce((sum, count) => {\n      return sum + (count as number);\n    }, 0);\n  };\n\n  const getRecommendedEmbeddingModel = (): string => {\n    // First check for specific model recommendations\n    if (config.specificModel && config.specificModel !== 'unknown') {\n      if (config.specificModel.includes('llama-3')) {\n        return 'llama-3-2-nv-embedqa-1b-v2';\n      }\n      if (config.specificModel.includes('mistral')) {\n        return 'nvidia/nemo-embed-qa-200M';\n      }\n      if (config.specificModel.includes('falcon-180b')) {\n        return 'nvidia/nvolveqa-embed-large-1B';\n      }\n      if (config.specificModel.includes('falcon-40b')) {\n        return 'nvidia/nvolveqa-embed-base-400M';\n      }\n      if (config.specificModel.includes('falcon-7b')) {\n        return 'all-MiniLM-L6-v2-80M';\n      }\n      if (config.specificModel.includes('qwen')) {\n        return 'text-embedding-ada-002-350M';\n      }\n    }\n    \n    // Fall back to model size category recommendations\n    if (config.modelSize) {\n      switch (config.modelSize) {\n        case 'small':\n          return 'all-MiniLM-L6-v2-80M';\n        case 'medium':\n          return 'nvidia/nvolveqa-embed-base-400M';\n        case 'large':\n          return 'nvidia/nvolveqa-embed-large-1B';\n        case 'xlarge':\n          return 'llama-3-2-nv-embedqa-1b-v2';\n        default:\n          return 'nvidia/nvolveqa-embed-large-1B';\n      }\n    }\n    \n    // Default recommendation\n    return 'nvidia/nvolveqa-embed-large-1B';\n  };\n\n  const generateQuery = (): string => {\n    const parts = [];\n    \n    // Base query structure\n    parts.push(`I need a vGPU configuration for`);\n    \n    // Workload type\n    if (config.workloadType) {\n      const workloadLabel = workloadTypes.find(w => w.value === config.workloadType)?.label || config.workloadType;\n      parts.push(`${workloadLabel.trim()}`);\n    }\n    \n    // Model size\n    if (config.modelSize) {\n      const sizeLabel = modelSizes.find(s => s.value === config.modelSize)?.label || config.modelSize;\n      parts.push(`with ${sizeLabel.toLowerCase()}`);\n    }\n    \n    // GPU Inventory - Enhanced with specific quantities\n    if (config.gpuInventory && Object.keys(config.gpuInventory).length > 0) {\n      const gpuLabels = Object.entries(config.gpuInventory)\n        .filter(([_, quantity]: [string, number]) => quantity > 0)\n        .map(([gpu, quantity]: [string, number]) => {\n          const gpuInfo = availableGPUInventory.find(g => g.value === gpu);\n          return `${quantity}x ${gpuInfo?.label || gpu}`;\n        });\n      parts.push(`using available GPU inventory: ${gpuLabels.join(', ')}`);\n    } else {\n      // Recommended GPU (L40S) if no GPU is selected\n      parts.push(`using available GPU inventory: 1x NVIDIA L40S`);\n    }\n    \n    // Specific Model\n    if (config.specificModel && config.specificModel !== 'unknown') {\n      const modelLabel = specificModels.find(m => m.value === config.specificModel)?.label || config.specificModel;\n      parts.push(`running ${modelLabel}`);\n    }\n    \n    // Performance requirements\n    if (config.workloadType === 'rag' && config.embeddingModel) {\n      const modelLabel = embeddingModels.find(m => m.value === config.embeddingModel)?.label || config.embeddingModel;\n      parts.push(`using embedding model ${modelLabel}`);\n    } else if (config.workloadType === 'rag') {\n      // Use recommended embedding model based on selection\n      const recommendedModel = getRecommendedEmbeddingModel();\n      const modelLabel = embeddingModels.find(m => m.value === recommendedModel)?.label || recommendedModel;\n      parts.push(`using embedding model ${modelLabel}`);\n    }\n    \n    // Performance requirements\n    const requirements = [];\n    if (config.promptSize) {\n      requirements.push(`prompt size of ${config.promptSize} tokens`);\n    }\n    if (config.responseSize) {\n      requirements.push(`response size of ${config.responseSize} tokens`);\n    }\n    if (config.batchSize) {\n      requirements.push(`batch size of ${config.batchSize}`);\n    }\n    \n    if (requirements.length > 0) {\n      parts.push(`with ${requirements.join(', ')}`);\n    }\n    \n    // Precision\n    if (config.precision) {\n      const precisionLabel = precisionOptions.find(p => p.value === config.precision)?.label || config.precision;\n      parts.push(`with ${precisionLabel} precision`);\n    } else {\n      // Recommended precision\n      parts.push(`with FP16 precision`);\n    }\n    \n    // Add retrieval configuration for RAG workloads\n    if (config.workloadType === 'rag' && (config.vectorDimension || config.numberOfVectors)) {\n      const retrievalParts = [];\n      if (config.vectorDimension) {\n        retrievalParts.push(`${config.vectorDimension}d vectors`);\n      }\n      if (config.numberOfVectors) {\n        retrievalParts.push(`${config.numberOfVectors} total vectors`);\n      }\n      if (retrievalParts.length > 0) {\n        parts.push(`with retrieval configuration: ${retrievalParts.join(', ')}`);\n      }\n    }\n    \n    const naturalLanguageQuery = parts.join(' ') + '.';\n    \n    // EMBED THE STRUCTURED CONFIG DATA AS JSON\n    // This preserves all the original user selections\n    const structuredConfig = {\n      workloadType: config.workloadType,\n      specificModel: config.specificModel,\n      modelTag: config.specificModel ? specificModels.find(m => m.value === config.specificModel)?.modelTag : null,\n      modelSize: config.modelSize,\n      batchSize: config.batchSize,\n      promptSize: config.promptSize ? parseInt(config.promptSize) : 1024,\n      responseSize: config.responseSize ? parseInt(config.responseSize) : 256,\n      embeddingModel: config.workloadType === 'rag' ? (config.embeddingModel || getRecommendedEmbeddingModel()) : null,\n      gpuInventory: config.gpuInventory,\n      precision: config.precision || 'fp16',\n      // Add retrieval config for RAG\n      ...(config.workloadType === 'rag' && {\n        vectorDimension: config.vectorDimension ? parseInt(config.vectorDimension) : null,\n        numberOfVectors: config.numberOfVectors ? parseInt(config.numberOfVectors) : null,\n      }),\n      // Add computed values for easier backend processing\n      selectedGPU: Object.keys(config.gpuInventory)[0] || 'l40s',\n      gpuCount: Object.values(config.gpuInventory)[0] as number || 1,\n      // Include advanced configuration\n      advancedConfig: config.advancedConfig,\n    };\n    \n    // Embed as HTML comment that won't be visible to user but can be parsed in backend\n    return naturalLanguageQuery + `\\n<!--VGPU_CONFIG:${JSON.stringify(structuredConfig)}-->`;\n  };\n\n  const handleSubmit = () => {\n    const query = generateQuery();\n    onSubmit(query);\n    onClose();\n    // Reset form\n    setConfig({\n      workloadType: \"\",\n      specificModel: \"\",\n      modelSize: \"\",\n      batchSize: \"\",\n      promptSize: \"1024\",\n      responseSize: \"256\",\n      embeddingModel: \"\",\n      gpuInventory: {},\n      precision: \"\",\n      vectorDimension: \"384\",  // Default to 384\n      numberOfVectors: \"10000\", // Default to 10,000\n      advancedConfig: {\n        modelMemoryOverhead: 1.3,\n        hypervisorReserveGb: 3.0,\n        cudaMemoryOverhead: 1.2,\n        vcpuPerGpu: 8,\n        ramGbPerVcpu: 8,\n      },\n    });\n    setCurrentStep(1);\n  };\n\n  const canProceed = () => {\n    switch (currentStep) {\n      case 1:\n        return config.workloadType !== \"\";\n      case 2:\n        // If \"unknown\" is selected, user must also select a model size\n        if (config.specificModel === 'unknown') {\n          return config.modelSize !== '';\n        }\n        // Otherwise, just need a specific model selected\n        return config.specificModel !== '';\n      case 3:\n        return true; // Additional requirements are optional\n      default:\n        return false;\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div className=\"bg-neutral-900 rounded-lg border border-neutral-700 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-green-600 to-green-700 text-white p-6 rounded-t-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-bold\">AI Workload Configuration Wizard</h2>\n              <p className=\"text-green-100 text-sm mt-1\">\n                Configure your AI workload to get personalized vGPU recommendations\n              </p>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-white hover:text-green-200 text-xl\"\n            >\n              ✕\n            </button>\n          </div>\n          \n          {/* Progress indicator */}\n          <div className=\"mt-4\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span>Step {currentStep} of {totalSteps}</span>\n              <span>{Math.round((currentStep / totalSteps) * 100)}% Complete</span>\n            </div>\n            <div className=\"w-full bg-green-800 rounded-full h-2 mt-2\">\n              <div \n                className=\"bg-white rounded-full h-2 transition-all duration-300\"\n                style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {/* Step 1: Workload Type & Use Case */}\n          {currentStep === 1 && (\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-white mb-4\">What type of AI workload do you need?</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                  {workloadTypes.map((type) => (\n                    <button\n                      key={type.value}\n                      onClick={() => handleInputChange(\"workloadType\", type.value)}\n                      className={`p-4 rounded-lg border text-left transition-all ${\n                        config.workloadType === type.value\n                          ? \"border-green-500 bg-green-900/20 text-white\"\n                          : \"border-neutral-600 bg-neutral-800 text-gray-300 hover:border-green-600\"\n                      }`}\n                    >\n                      <div className=\"font-medium\">{type.label}</div>\n                      <div className=\"text-sm text-gray-400 mt-1\">{type.desc}</div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Step 2: Performance Requirements */}\n          {currentStep === 2 && (\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-white mb-4\">Model Size & Performance</h3>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                      Specific Model (if known)\n                      {isLoadingModels && <span className=\"ml-2 text-sm text-green-500 animate-pulse\">Loading models...</span>}\n                    </label>\n                    <select\n                      value={config.specificModel}\n                      onChange={(e) => handleInputChange(\"specificModel\", e.target.value)}\n                      className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white mb-4\"\n                      disabled={isLoadingModels}\n                    >\n                      <option value=\"\" disabled>\n                        {isLoadingModels ? \"Loading models from HuggingFace...\" : \"Select a specific model\"}\n                      </option>\n                      <option value=\"unknown\">Unknown / Not Sure</option>\n                      {specificModels.map((model) => (\n                        <option key={model.value} value={model.value}>{model.label}</option>\n                      ))}\n                    </select>\n                    {!isLoadingModels && dynamicModels.length > 0 && (\n                      <p className=\"text-xs text-green-500 mb-2\">✓ {dynamicModels.length} models loaded from HuggingFace</p>\n                    )}\n                  </div>\n\n                  {/* Only show model size category when \"unknown\" is selected */}\n                  {config.specificModel === 'unknown' && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">Model Size Category</label>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                        {modelSizes.map((size) => (\n                          <button\n                            key={size.value}\n                            onClick={() => handleInputChange(\"modelSize\", size.value)}\n                            className={`p-3 rounded-lg border text-left transition-all ${\n                              config.modelSize === size.value\n                                ? \"border-green-500 bg-green-900/20 text-white\"\n                                : \"border-neutral-600 bg-neutral-800 text-gray-300 hover:border-green-600\"\n                            }`}\n                          >\n                            <div className=\"font-medium\">{size.label}</div>\n                            <div className=\"text-sm text-gray-400\">{size.desc}</div>\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Only show embedding model for RAG workloads */}\n                  {config.workloadType === 'rag' && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">Embedding Model</label>\n                      <select\n                        value={config.embeddingModel}\n                        onChange={(e) => handleInputChange(\"embeddingModel\", e.target.value)}\n                        className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white\"\n                      >\n                        <option value=\"\">Recommended ({getRecommendedEmbeddingModel()})</option>\n                        {embeddingModels.map((model) => (\n                          <option key={model.value} value={model.value}>{model.label}</option>\n                        ))}\n                      </select>\n                      {config.embeddingModel && (\n                        <p className=\"text-sm text-gray-400 mt-2\">\n                          {embeddingModels.find(m => m.value === config.embeddingModel)?.desc}\n                        </p>\n                      )}\n                      {!config.embeddingModel && (\n                        <p className=\"text-sm text-gray-400 mt-2\">\n                          {embeddingModels.find(m => m.value === getRecommendedEmbeddingModel())?.desc}\n                        </p>\n                      )}\n                    </div>\n                  )}\n\n                  <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">Precision</label>\n                      <select\n                        value={config.precision}\n                        onChange={(e) => handleInputChange(\"precision\", e.target.value)}\n                        className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white\"\n                      >\n                        <option value=\"\">Recommended (FP16)</option>\n                        {precisionOptions.map((option) => (\n                          <option key={option.value} value={option.value}>{option.label}</option>\n                        ))}\n                      </select>\n                      {config.precision && (\n                        <p className=\"text-sm text-gray-400 mt-2\">\n                          {precisionOptions.find(p => p.value === config.precision)?.desc}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Retrieval Section - Only for RAG workload */}\n                  {config.workloadType === 'rag' && (\n                    <div className=\"mt-6 pt-6 border-t border-neutral-700\">\n                      <h4 className=\"text-md font-semibold text-white mb-4\">Retrieval Configuration</h4>\n                      <p className=\"text-sm text-gray-400 mb-4\">\n                        Configure vector database settings for RAG retrieval\n                      </p>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-300 mb-2\">Vector Dimension</label>\n                          <select\n                            value={config.vectorDimension || \"\"}\n                            onChange={(e) => handleInputChange(\"vectorDimension\", e.target.value)}\n                            className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white\"\n                          >\n                            <option value=\"\">Select dimension</option>\n                            <option value=\"384\">384 (Compact)</option>\n                            <option value=\"768\">768 (Standard)</option>\n                            <option value=\"1024\">1024 (Large)</option>\n                          </select>\n                          <p className=\"text-sm text-gray-400 mt-1\">\n                            Must match your embedding model's output dimension\n                          </p>\n                        </div>\n\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-300 mb-2\">Number of Vectors</label>\n                          <input\n                            type=\"number\"\n                            value={config.numberOfVectors || \"\"}\n                            onChange={(e) => handleInputChange(\"numberOfVectors\", e.target.value)}\n                            placeholder=\"e.g., 1000000\"\n                            min=\"1000\"\n                            step=\"1000\"\n                            className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white placeholder-gray-500\"\n                          />\n                          <p className=\"text-sm text-gray-400 mt-1\">\n                            Total vectors in your knowledge base\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Step 3: Additional Requirements */}\n          {currentStep === 3 && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-white mb-4\">Additional Requirements (Optional)</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">Prompt Size (tokens)</label>\n                  <input\n                    type=\"number\"\n                    value={config.promptSize}\n                    onChange={(e) => handleInputChange(\"promptSize\", e.target.value)}\n                    placeholder=\"e.g., 1024\"\n                    min=\"256\"\n                    max=\"32768\"\n                    step=\"256\"\n                    className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white placeholder-gray-500\"\n                  />\n                  <p className=\"text-sm text-gray-400 mt-1\">\n                    Maximum input prompt length in tokens\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">Response Size (tokens)</label>\n                  <input\n                    type=\"number\"\n                    value={config.responseSize}\n                    onChange={(e) => handleInputChange(\"responseSize\", e.target.value)}\n                    placeholder=\"e.g., 256\"\n                    min=\"128\"\n                    max=\"8192\"\n                    step=\"128\"\n                    className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white placeholder-gray-500\"\n                  />\n                  <p className=\"text-sm text-gray-400 mt-1\">\n                    Maximum response length in tokens\n                  </p>\n                </div>\n              </div>\n\n              {/* GPU Selection Section */}\n              <div className=\"mt-6 pt-6 border-t border-neutral-700\">\n                <h4 className=\"text-md font-semibold text-white mb-4\">GPU Selection</h4>\n                <p className=\"text-sm text-gray-400 mb-4\">\n                  Select the GPU you want to use. If you don't select a GPU, the recommended NVIDIA L40S will be used.\n                </p>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">GPU Model</label>\n                    <select\n                      value={Object.keys(config.gpuInventory)[0] || \"\"}\n                      onChange={(e) => {\n                        // Clear existing inventory and set the new one\n                        setConfig(prev => ({\n                          ...prev,\n                          gpuInventory: e.target.value ? { [e.target.value]: 1 } : {}\n                        }));\n                      }}\n                      className=\"w-full p-3 rounded-lg bg-neutral-800 border border-neutral-600 text-white\"\n                    >\n                      <option value=\"\">Recommended (NVIDIA L40S)</option>\n                      {availableGPUInventory.map((gpu) => (\n                        <option key={gpu.value} value={gpu.value}>\n                          {gpu.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                \n                {/* Show selected GPU description */}\n                {Object.keys(config.gpuInventory)[0] && (\n                  <div className=\"mt-3 p-3 bg-neutral-800 border border-neutral-600 rounded-lg\">\n                    <p className=\"text-sm text-gray-400\">\n                      {availableGPUInventory.find(g => g.value === Object.keys(config.gpuInventory)[0])?.desc}\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              {/* Advanced Configuration Dropdown */}\n              <div className=\"mt-6 pt-6 border-t border-neutral-700\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAdvancedConfig(!showAdvancedConfig)}\n                  className=\"w-full flex items-center justify-between p-4 bg-neutral-800 hover:bg-neutral-750 rounded-lg transition-colors\"\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-md font-semibold text-white\">Advanced Configuration</span>\n                    <span className=\"text-xs text-gray-400 bg-neutral-700 px-2 py-1 rounded\">Optional</span>\n                  </div>\n                  <svg\n                    className={`w-5 h-5 text-gray-400 transition-transform ${showAdvancedConfig ? 'rotate-180' : ''}`}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n\n                {showAdvancedConfig && (\n                  <div className=\"mt-4 p-4 bg-neutral-800 rounded-lg border border-neutral-700\">\n                    <p className=\"text-sm text-gray-400 mb-6\">\n                      Fine-tune calculator accuracy with advanced parameters. The defaults are suitable for most use cases.\n                    </p>\n\n                    <div className=\"space-y-6\">\n                      {/* Model Memory Overhead */}\n                      <div>\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <label className=\"text-sm font-medium text-gray-300\">\n                            Model Memory Overhead\n                          </label>\n                          <span className=\"text-sm text-green-500 font-mono\">\n                            {config.advancedConfig.modelMemoryOverhead.toFixed(2)}x\n                          </span>\n                        </div>\n                        <input\n                          type=\"range\"\n                          min=\"1.0\"\n                          max=\"2.0\"\n                          step=\"0.1\"\n                          value={config.advancedConfig.modelMemoryOverhead}\n                          onChange={(e) =>\n                            handleAdvancedConfigChange(\"modelMemoryOverhead\", parseFloat(e.target.value))\n                          }\n                          className=\"w-full h-2 bg-neutral-700 rounded-lg appearance-none cursor-pointer\"\n                        />\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          Multiplier for model weight memory footprint (1.0-2.0)\n                        </p>\n                      </div>\n\n                      {/* Hypervisor Reserve GB */}\n                      <div>\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <label className=\"text-sm font-medium text-gray-300\">\n                            Hypervisor Reserve (GB)\n                          </label>\n                          <span className=\"text-sm text-green-500 font-mono\">\n                            {config.advancedConfig.hypervisorReserveGb.toFixed(1)} GB\n                          </span>\n                        </div>\n                        <input\n                          type=\"range\"\n                          min=\"0.0\"\n                          max=\"10.0\"\n                          step=\"0.5\"\n                          value={config.advancedConfig.hypervisorReserveGb}\n                          onChange={(e) =>\n                            handleAdvancedConfigChange(\"hypervisorReserveGb\", parseFloat(e.target.value))\n                          }\n                          className=\"w-full h-2 bg-neutral-700 rounded-lg appearance-none cursor-pointer\"\n                        />\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          GPU memory reserved for hypervisor layer (0.0-10.0 GB)\n                        </p>\n                      </div>\n\n                      {/* CUDA Memory Overhead */}\n                      <div>\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <label className=\"text-sm font-medium text-gray-300\">\n                            CUDA Memory Overhead\n                          </label>\n                          <span className=\"text-sm text-green-500 font-mono\">\n                            {config.advancedConfig.cudaMemoryOverhead.toFixed(2)}x\n                          </span>\n                        </div>\n                        <input\n                          type=\"range\"\n                          min=\"1.0\"\n                          max=\"1.5\"\n                          step=\"0.05\"\n                          value={config.advancedConfig.cudaMemoryOverhead}\n                          onChange={(e) =>\n                            handleAdvancedConfigChange(\"cudaMemoryOverhead\", parseFloat(e.target.value))\n                          }\n                          className=\"w-full h-2 bg-neutral-700 rounded-lg appearance-none cursor-pointer\"\n                        />\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          CUDA runtime memory overhead multiplier (1.0-1.5)\n                        </p>\n                      </div>\n\n                      {/* vCPU per GPU */}\n                      <div>\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <label className=\"text-sm font-medium text-gray-300\">\n                            vCPUs per GPU\n                          </label>\n                          <span className=\"text-sm text-green-500 font-mono\">\n                            {config.advancedConfig.vcpuPerGpu}\n                          </span>\n                        </div>\n                        <input\n                          type=\"range\"\n                          min=\"1\"\n                          max=\"32\"\n                          step=\"1\"\n                          value={config.advancedConfig.vcpuPerGpu}\n                          onChange={(e) =>\n                            handleAdvancedConfigChange(\"vcpuPerGpu\", parseInt(e.target.value))\n                          }\n                          className=\"w-full h-2 bg-neutral-700 rounded-lg appearance-none cursor-pointer\"\n                        />\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          Number of vCPUs to allocate per GPU (1-32)\n                        </p>\n                      </div>\n\n                      {/* RAM GB per vCPU */}\n                      <div>\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <label className=\"text-sm font-medium text-gray-300\">\n                            RAM per vCPU (GB)\n                          </label>\n                          <span className=\"text-sm text-green-500 font-mono\">\n                            {config.advancedConfig.ramGbPerVcpu} GB\n                          </span>\n                        </div>\n                        <input\n                          type=\"range\"\n                          min=\"2\"\n                          max=\"32\"\n                          step=\"1\"\n                          value={config.advancedConfig.ramGbPerVcpu}\n                          onChange={(e) =>\n                            handleAdvancedConfigChange(\"ramGbPerVcpu\", parseInt(e.target.value))\n                          }\n                          className=\"w-full h-2 bg-neutral-700 rounded-lg appearance-none cursor-pointer\"\n                        />\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          GB of system RAM to allocate per vCPU (2-32 GB)\n                        </p>\n                      </div>\n\n                      {/* Reset to Defaults Button */}\n                      <button\n                        type=\"button\"\n                        onClick={() =>\n                          setConfig((prev) => ({\n                            ...prev,\n                            advancedConfig: {\n                              modelMemoryOverhead: 1.3,\n                              hypervisorReserveGb: 3.0,\n                              cudaMemoryOverhead: 1.2,\n                              vcpuPerGpu: 8,\n                              ramGbPerVcpu: 8,\n                            },\n                          }))\n                        }\n                        className=\"w-full px-4 py-2 bg-neutral-700 text-white rounded-lg hover:bg-neutral-600 transition-colors\"\n                      >\n                        Reset to Defaults\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"p-6 border-t border-neutral-700 flex justify-between\">\n          <div className=\"flex space-x-3\">\n            {currentStep > 1 && (\n              <button\n                onClick={() => setCurrentStep(currentStep - 1)}\n                className=\"px-4 py-2 bg-neutral-700 text-white rounded-lg hover:bg-neutral-600 transition-colors\"\n              >\n                ← Previous\n              </button>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 bg-neutral-700 text-white rounded-lg hover:bg-neutral-600 transition-colors\"\n            >\n              Cancel\n            </button>\n            \n            {currentStep < totalSteps ? (\n              <button\n                onClick={() => setCurrentStep(currentStep + 1)}\n                disabled={!canProceed()}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  canProceed()\n                    ? \"bg-green-600 text-white hover:bg-green-700\"\n                    : \"bg-neutral-600 text-gray-400 cursor-not-allowed\"\n                }`}\n              >\n                Next →\n              </button>\n            ) : (\n              <button\n                onClick={handleSubmit}\n                className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium\"\n              >\nGet Recommendations\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5450, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/hooks/useChatStream.ts"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { useState, useCallback } from \"react\";\nimport { SourceResult } from \"@/types/api\";\nimport { ChatMessage, StreamState, Citation } from \"@/types/chat\";\n\nexport const useChatStream = () => {\n  const [streamState, setStreamState] = useState<StreamState>({\n    content: \"\",\n    citations: [],\n    error: null,\n    isTyping: false,\n  });\n\n  const [abortController, setAbortController] = useState<AbortController>(\n    new AbortController()\n  );\n\n  const resetAbortController = useCallback(() => {\n    const controller = new AbortController();\n    setAbortController(controller);\n    return controller;\n  }, []);\n\n  const stopStream = useCallback(() => {\n    abortController.abort();\n    setStreamState((prev) => ({ ...prev, isTyping: false }));\n  }, [abortController]);\n\n  const processStream = useCallback(\n    async (\n      response: Response,\n      assistantMessageId: string,\n      setMessages: (fn: (prev: ChatMessage[]) => ChatMessage[]) => void,\n      confidenceScoreThreshold?: number\n    ) => {\n      const reader = response.body?.getReader();\n      if (!reader) throw new Error(\"No response body\");\n\n      const decoder = new TextDecoder();\n      let buffer = \"\";\n      let content = \"\";\n      let latestCitations: Citation[] = [];\n\n      // Log the threshold we're using for debugging\n      console.log(`Starting stream with confidence threshold: ${confidenceScoreThreshold}, type: ${typeof confidenceScoreThreshold}`);\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) break;\n\n          const chunk = decoder.decode(value);\n          buffer += chunk;\n\n          const lines = buffer.split(\"\\n\");\n          buffer = lines.pop() || \"\";\n\n          for (const line of lines) {\n            if (line.trim() === \"\" || !line.startsWith(\"data: \")) continue;\n\n            try {\n              const data = JSON.parse(line.slice(5));\n              console.log(\"Stream data type:\", typeof data, \"structure:\", Object.keys(data).join(\", \"));\n\n              if (\n                data.choices?.[0]?.message?.content?.includes(\n                  \"Error from rag server\"\n                )\n              ) {\n                throw new Error(\"RAG server error\");\n              }\n\n              // Handle delta content\n              const deltaContent = data.choices?.[0]?.delta?.content;\n              if (deltaContent) {\n                content += deltaContent;\n              }\n\n              // Check for citations in different possible locations in the response\n              let citationsData = null;\n              // Try to find citations data in various possible locations\n              if (data.citations?.results) {\n                citationsData = data.citations.results;\n              } else if (data.sources?.results) {\n                citationsData = data.sources.results;\n              } else if (Array.isArray(data.citations)) {\n                citationsData = data.citations;\n              } else if (Array.isArray(data.sources)) {\n                citationsData = data.sources;\n              } else if (data.choices?.[0]?.message?.citations) {\n                citationsData = Array.isArray(data.choices[0].message.citations) \n                  ? data.choices[0].message.citations \n                  : data.choices[0].message.citations.results || [];\n              } else if (data.choices?.[0]?.message?.sources) {\n                citationsData = Array.isArray(data.choices[0].message.sources) \n                  ? data.choices[0].message.sources \n                  : data.choices[0].message.sources.results || [];\n              }\n\n              // Update citations with filtering based on confidence score\n              if (citationsData && citationsData.length > 0) {\n                // Map the sources to our Citation type, preserving the score\n                const sourcesWithScores: Citation[] = citationsData.map(\n                  (source: any) => {\n                    // Get score from different possible locations\n                    const score = \n                      source.score !== undefined ? source.score : \n                      source.confidence_score !== undefined ? source.confidence_score : \n                      source.similarity_score !== undefined ? source.similarity_score : \n                      source.relevance_score !== undefined ? source.relevance_score :\n                      undefined;\n                    \n                    const sourceTitle = source.document_name || source.source || source.title || source.filename || \"Unknown source\";\n                    console.log(`Source \"${sourceTitle}\" has score: ${score}`);\n                    \n                    return {\n                      text: source.content || source.text || source.snippet || \"\",\n                      source: sourceTitle,\n                      document_type: source.document_type || \"text\",\n                      score: score\n                    };\n                  }\n                );\n                \n                console.log(\"All citation scores:\", sourcesWithScores.map(c => `${c.source}: ${c.score !== undefined ? c.score : 'N/A'}`).join(', '));\n                \n                // Only apply filtering if threshold is provided and valid\n                const validThreshold = confidenceScoreThreshold !== undefined && \n                                      !isNaN(parseFloat(String(confidenceScoreThreshold)));\n                \n                if (validThreshold) {\n                  // Parse the threshold as a number\n                  let normalizedThreshold = parseFloat(String(confidenceScoreThreshold));\n                  \n                  // Ensure threshold is within 0-1 range (UI now uses the same 0-1 scale as the API)\n                  normalizedThreshold = Math.max(0, Math.min(1, normalizedThreshold));\n                  \n                  console.log(`Using threshold: ${normalizedThreshold} (original: ${confidenceScoreThreshold})`);\n                  \n                  latestCitations = sourcesWithScores.filter(citation => {\n                    // If score is undefined, include the citation (don't filter it out)\n                    if (citation.score === undefined) {\n                      console.log(`Citation \"${citation.source}\" has no score, including it anyway`);\n                      return true;\n                    }\n                    \n                    // Ensure score is a number\n                    const score = typeof citation.score === 'string' ? parseFloat(citation.score) : citation.score;\n                    \n                    // Both citation scores from API and UI threshold are on a 0-1 scale\n                    // so we can compare them directly\n                    \n                    const passesThreshold = score >= normalizedThreshold;\n                    console.log(`Citation \"${citation.source}\" with score ${score} passes threshold ${normalizedThreshold}? ${passesThreshold}`);\n                    return passesThreshold;\n                  });\n                } else {\n                  console.log(\"No valid confidence threshold set, including all citations\");\n                  latestCitations = sourcesWithScores;\n                }\n                \n                console.log(`Filtered citations: ${latestCitations.length} / ${sourcesWithScores.length} with threshold ${confidenceScoreThreshold}`);\n                console.log(\"Remaining citations:\", latestCitations.map(c => c.source).join(', '));\n              }\n\n              // Update message state\n              setMessages((prev) =>\n                prev.map((msg) =>\n                  msg.id === assistantMessageId\n                    ? {\n                        ...msg,\n                        content,\n                        citations:\n                          latestCitations.length > 0\n                            ? latestCitations\n                            : msg.citations,\n                      }\n                    : msg\n                )\n              );\n\n              // Handle stream completion\n              if (data.choices?.[0]?.finish_reason === \"stop\") {\n                setStreamState((prev) => ({\n                  ...prev,\n                  content,\n                  citations: latestCitations,\n                  isTyping: false,\n                }));\n                break;\n              }\n            } catch (parseError) {\n              console.error(\"Error parsing stream data:\", parseError);\n              if (!(parseError instanceof SyntaxError)) {\n                throw parseError;\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Stream processing error:\", error);\n        setStreamState((prev) => ({\n          ...prev,\n          error: \"Sorry, there was an error processing your request.\",\n          isTyping: false,\n        }));\n        throw error;\n      } finally {\n        reader.releaseLock();\n      }\n    },\n    []\n  );\n\n  const startStream = useCallback(() => {\n    const controller = resetAbortController();\n    setStreamState((prev) => ({ ...prev, isTyping: true, error: null }));\n    return controller;\n  }, [resetAbortController]);\n\n  const resetStream = useCallback(() => {\n    setStreamState({\n      content: \"\",\n      citations: [],\n      error: null,\n      isTyping: false,\n    });\n  }, []);\n\n  return {\n    streamState,\n    processStream,\n    startStream,\n    resetStream,\n    stopStream,\n    isStreaming: streamState.isTyping,\n  };\n};\n"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AAEjC;;;AAIO,MAAM,gBAAgB;;IAC3B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;QAC1D,SAAS;QACT,WAAW,EAAE;QACb,OAAO;QACP,UAAU;IACZ;IAEA,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACnD,IAAI;IAGN,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE;YACvC,MAAM,aAAa,IAAI;YACvB,mBAAmB;YACnB,OAAO;QACT;0DAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE;YAC7B,gBAAgB,KAAK;YACrB;yDAAe,CAAC,OAAS,CAAC;wBAAE,GAAG,IAAI;wBAAE,UAAU;oBAAM,CAAC;;QACxD;gDAAG;QAAC;KAAgB;IAEpB,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDAC9B,OACE,UACA,oBACA,aACA;YAEA,MAAM,SAAS,SAAS,IAAI,EAAE;YAC9B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;YAE7B,MAAM,UAAU,IAAI;YACpB,IAAI,SAAS;YACb,IAAI,UAAU;YACd,IAAI,kBAA8B,EAAE;YAEpC,8CAA8C;YAC9C,QAAQ,GAAG,CAAC,CAAC,2CAA2C,EAAE,yBAAyB,QAAQ,EAAE,OAAO,0BAA0B;YAE9H,IAAI;gBACF,MAAO,KAAM;oBACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,IAAI;oBACzC,IAAI,MAAM;oBAEV,MAAM,QAAQ,QAAQ,MAAM,CAAC;oBAC7B,UAAU;oBAEV,MAAM,QAAQ,OAAO,KAAK,CAAC;oBAC3B,SAAS,MAAM,GAAG,MAAM;oBAExB,KAAK,MAAM,QAAQ,MAAO;wBACxB,IAAI,KAAK,IAAI,OAAO,MAAM,CAAC,KAAK,UAAU,CAAC,WAAW;wBAEtD,IAAI;4BACF,MAAM,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC;4BACnC,QAAQ,GAAG,CAAC,qBAAqB,OAAO,MAAM,cAAc,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC;4BAEnF,IACE,KAAK,OAAO,EAAE,CAAC,EAAE,EAAE,SAAS,SAAS,SACnC,0BAEF;gCACA,MAAM,IAAI,MAAM;4BAClB;4BAEA,uBAAuB;4BACvB,MAAM,eAAe,KAAK,OAAO,EAAE,CAAC,EAAE,EAAE,OAAO;4BAC/C,IAAI,cAAc;gCAChB,WAAW;4BACb;4BAEA,sEAAsE;4BACtE,IAAI,gBAAgB;4BACpB,2DAA2D;4BAC3D,IAAI,KAAK,SAAS,EAAE,SAAS;gCAC3B,gBAAgB,KAAK,SAAS,CAAC,OAAO;4BACxC,OAAO,IAAI,KAAK,OAAO,EAAE,SAAS;gCAChC,gBAAgB,KAAK,OAAO,CAAC,OAAO;4BACtC,OAAO,IAAI,MAAM,OAAO,CAAC,KAAK,SAAS,GAAG;gCACxC,gBAAgB,KAAK,SAAS;4BAChC,OAAO,IAAI,MAAM,OAAO,CAAC,KAAK,OAAO,GAAG;gCACtC,gBAAgB,KAAK,OAAO;4BAC9B,OAAO,IAAI,KAAK,OAAO,EAAE,CAAC,EAAE,EAAE,SAAS,WAAW;gCAChD,gBAAgB,MAAM,OAAO,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,IAC3D,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,GACjC,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAI,EAAE;4BACrD,OAAO,IAAI,KAAK,OAAO,EAAE,CAAC,EAAE,EAAE,SAAS,SAAS;gCAC9C,gBAAgB,MAAM,OAAO,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,IACzD,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,GAC/B,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE;4BACnD;4BAEA,4DAA4D;4BAC5D,IAAI,iBAAiB,cAAc,MAAM,GAAG,GAAG;gCAC7C,6DAA6D;gCAC7D,MAAM,oBAAgC,cAAc,GAAG;kGACrD,CAAC;wCACC,8CAA8C;wCAC9C,MAAM,QACJ,OAAO,KAAK,KAAK,YAAY,OAAO,KAAK,GACzC,OAAO,gBAAgB,KAAK,YAAY,OAAO,gBAAgB,GAC/D,OAAO,gBAAgB,KAAK,YAAY,OAAO,gBAAgB,GAC/D,OAAO,eAAe,KAAK,YAAY,OAAO,eAAe,GAC7D;wCAEF,MAAM,cAAc,OAAO,aAAa,IAAI,OAAO,MAAM,IAAI,OAAO,KAAK,IAAI,OAAO,QAAQ,IAAI;wCAChG,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,YAAY,aAAa,EAAE,OAAO;wCAEzD,OAAO;4CACL,MAAM,OAAO,OAAO,IAAI,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI;4CACzD,QAAQ;4CACR,eAAe,OAAO,aAAa,IAAI;4CACvC,OAAO;wCACT;oCACF;;gCAGF,QAAQ,GAAG,CAAC,wBAAwB,kBAAkB,GAAG;gFAAC,CAAA,IAAK,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,KAAK,YAAY,EAAE,KAAK,GAAG,OAAO;+EAAE,IAAI,CAAC;gCAE/H,0DAA0D;gCAC1D,MAAM,iBAAiB,6BAA6B,aAC9B,CAAC,MAAM,WAAW,OAAO;gCAE/C,IAAI,gBAAgB;oCAClB,kCAAkC;oCAClC,IAAI,sBAAsB,WAAW,OAAO;oCAE5C,mFAAmF;oCACnF,sBAAsB,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG;oCAE9C,QAAQ,GAAG,CAAC,CAAC,iBAAiB,EAAE,oBAAoB,YAAY,EAAE,yBAAyB,CAAC,CAAC;oCAE7F,kBAAkB,kBAAkB,MAAM;oFAAC,CAAA;4CACzC,oEAAoE;4CACpE,IAAI,SAAS,KAAK,KAAK,WAAW;gDAChC,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,SAAS,MAAM,CAAC,mCAAmC,CAAC;gDAC7E,OAAO;4CACT;4CAEA,2BAA2B;4CAC3B,MAAM,QAAQ,OAAO,SAAS,KAAK,KAAK,WAAW,WAAW,SAAS,KAAK,IAAI,SAAS,KAAK;4CAE9F,oEAAoE;4CACpE,kCAAkC;4CAElC,MAAM,kBAAkB,SAAS;4CACjC,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,SAAS,MAAM,CAAC,aAAa,EAAE,MAAM,kBAAkB,EAAE,oBAAoB,EAAE,EAAE,iBAAiB;4CAC3H,OAAO;wCACT;;gCACF,OAAO;oCACL,QAAQ,GAAG,CAAC;oCACZ,kBAAkB;gCACpB;gCAEA,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,gBAAgB,MAAM,CAAC,GAAG,EAAE,kBAAkB,MAAM,CAAC,gBAAgB,EAAE,0BAA0B;gCACpI,QAAQ,GAAG,CAAC,wBAAwB,gBAAgB,GAAG;gFAAC,CAAA,IAAK,EAAE,MAAM;+EAAE,IAAI,CAAC;4BAC9E;4BAEA,uBAAuB;4BACvB;4EAAY,CAAC,OACX,KAAK,GAAG;oFAAC,CAAC,MACR,IAAI,EAAE,KAAK,qBACP;gDACE,GAAG,GAAG;gDACN;gDACA,WACE,gBAAgB,MAAM,GAAG,IACrB,kBACA,IAAI,SAAS;4CACrB,IACA;;;4BAIR,2BAA2B;4BAC3B,IAAI,KAAK,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAkB,QAAQ;gCAC/C;gFAAe,CAAC,OAAS,CAAC;4CACxB,GAAG,IAAI;4CACP;4CACA,WAAW;4CACX,UAAU;wCACZ,CAAC;;gCACD;4BACF;wBACF,EAAE,OAAO,YAAY;4BACnB,QAAQ,KAAK,CAAC,8BAA8B;4BAC5C,IAAI,CAAC,CAAC,sBAAsB,WAAW,GAAG;gCACxC,MAAM;4BACR;wBACF;oBACF;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C;gEAAe,CAAC,OAAS,CAAC;4BACxB,GAAG,IAAI;4BACP,OAAO;4BACP,UAAU;wBACZ,CAAC;;gBACD,MAAM;YACR,SAAU;gBACR,OAAO,WAAW;YACpB;QACF;mDACA,EAAE;IAGJ,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE;YAC9B,MAAM,aAAa;YACnB;0DAAe,CAAC,OAAS,CAAC;wBAAE,GAAG,IAAI;wBAAE,UAAU;wBAAM,OAAO;oBAAK,CAAC;;YAClE,OAAO;QACT;iDAAG;QAAC;KAAqB;IAEzB,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE;YAC9B,eAAe;gBACb,SAAS;gBACT,WAAW,EAAE;gBACb,OAAO;gBACP,UAAU;YACZ;QACF;iDAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA,aAAa,YAAY,QAAQ;IACnC;AACF;GAxOa","debugId":null}},
    {"offset": {"line": 5688, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/Chat/Chat.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport RightSidebar from \"../RightSidebar/RightSidebar\";\nimport VGPUConfigCard from \"./VGPUConfigCard\";\nimport VGPUConfigDrawer from \"./VGPUConfigDrawer\";\nimport WorkloadConfigWizard from \"./WorkloadConfigWizard\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { API_CONFIG } from \"@/app/config/api\";\nimport { marked } from \"marked\";\nimport { useChatStream } from \"../../hooks/useChatStream\";\nimport { ChatMessage, GenerateRequest } from \"@/types/chat\";\nimport { useSettings } from \"../../context/SettingsContext\";\nimport { useSidebar } from \"../../context/SidebarContext\";\n\nexport default function Chat() {\n  const { activePanel, toggleSidebar, setActiveCitations } = useSidebar();\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [isWizardOpen, setIsWizardOpen] = useState(false);\n  const [drawerConfig, setDrawerConfig] = useState<any>(null);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const { streamState, processStream, startStream, resetStream, stopStream } =\n    useChatStream();\n\n  const {\n    temperature,\n    topP,\n    vdbTopK,\n    rerankerTopK,\n    confidenceScoreThreshold,\n    useGuardrails,\n    includeCitations,\n  } = useSettings();\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const handleToggleSidebar = (\n    panel: \"citations\",\n    citations?: {\n      text: string;\n      source: string;\n      document_type: \"text\" | \"image\" | \"table\" | \"chart\";\n    }[]\n  ) => {\n    if (panel === \"citations\" && citations) {\n      setActiveCitations(citations);\n      if (!activePanel || activePanel !== \"citations\") {\n        toggleSidebar(panel);\n      }\n    } else {\n      toggleSidebar(panel);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSubmit = async (message: string) => {\n    if (!message.trim()) return;\n\n    resetStream();\n    const controller = startStream();\n\n    const userMessage = createUserMessage(message);\n    const assistantMessage = createAssistantMessage();\n\n    setMessages((prev) => [...prev, userMessage, assistantMessage]);\n\n    // Debug confidence score threshold being used\n    console.log(`Submitting with confidence threshold: ${confidenceScoreThreshold} (value type: ${typeof confidenceScoreThreshold})`);\n\n    try {\n      const response = await fetch(\"/api/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(createRequestBody(userMessage)),\n        signal: controller.signal,\n      });\n\n      if (!response.ok)\n        throw new Error(`HTTP error! status: ${response.status}`);\n\n      await processStream(response, assistantMessage.id, setMessages, confidenceScoreThreshold);\n    } catch (error: unknown) {\n      if (error instanceof Error && error.name === \"AbortError\") {\n        console.log(\"Stream aborted\");\n        return;\n      }\n      console.error(\"Error generating response:\", error);\n      handleError(assistantMessage.id);\n    }\n  };\n\n  const isVGPUConfig = (content: string): boolean => {\n    try {\n      const parsed = JSON.parse(content.trim());\n      return parsed.title === \"generate_vgpu_config\" && parsed.parameters;\n    } catch {\n      return false;\n    }\n  };\n\n  const renderMessageContent = (content: string, isTyping: boolean) => {\n    if (isTyping) {\n      return (\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-[#76b900]\"></div>\n          <span className=\"text-gray-400\">Generating configuration...</span>\n        </div>\n      );\n    }\n    \n    // Check if content is a vGPU configuration JSON\n    if (isVGPUConfig(content)) {\n      try {\n        const vgpuConfig = JSON.parse(content.trim());\n        // Return a preview card that opens the drawer\n        return (\n          <div \n            className=\"bg-neutral-800 border border-[#76b900]/30 rounded-lg p-4 cursor-pointer hover:bg-neutral-750 hover:border-[#76b900]/50 transition-all duration-200\"\n            onClick={() => {\n              setDrawerConfig(vgpuConfig);\n              setIsDrawerOpen(true);\n            }}\n          >\n            <div className=\"flex items-center justify-between mb-3\">\n              <div className=\"flex items-center gap-2\">\n                <svg className=\"w-5 h-5 text-[#76b900]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n                </svg>\n                <h3 className=\"text-white font-semibold\">vGPU Configuration Ready</h3>\n              </div>\n              <span className=\"text-xs text-gray-400\">Click to view details →</span>\n            </div>\n            <p className=\"text-sm text-gray-300 mb-3\">{vgpuConfig.description}</p>\n            {(vgpuConfig.parameters.vgpu_profile || vgpuConfig.parameters.vGPU_profile) && (\n              <div className=\"flex items-center gap-4 text-sm\">\n                <span className=\"text-gray-400\">Profile:</span>\n                <span className=\"text-[#76b900] font-medium\">{vgpuConfig.parameters.vgpu_profile || vgpuConfig.parameters.vGPU_profile}</span>\n                {vgpuConfig.parameters.gpu_memory_size && (\n                  <>\n                    <span className=\"text-gray-400\">•</span>\n                    <span className=\"text-gray-400\">Memory:</span>\n                    <span className=\"text-[#76b900] font-medium\">{vgpuConfig.parameters.gpu_memory_size} GB</span>\n                  </>\n                )}\n              </div>\n            )}\n          </div>\n        );\n      } catch (error) {\n        console.error(\"Error parsing vGPU config:\", error);\n        // Fall back to regular markdown rendering\n      }\n    }\n    \n    return (\n      <div\n        className=\"prose prose-invert max-w-none text-sm\"\n        dangerouslySetInnerHTML={{\n          __html: marked.parse(content, {\n            async: false,\n            breaks: true,\n            gfm: true,\n          }),\n        }}\n      />\n    );\n  };\n\n  const createUserMessage = (content: string): ChatMessage => ({\n    id: uuidv4(),\n    role: \"user\",\n    content,\n    timestamp: new Date().toISOString(),\n  });\n\n  const createAssistantMessage = (): ChatMessage => ({\n    id: uuidv4(),\n    role: \"assistant\",\n    content: \"\",\n    timestamp: new Date().toISOString(),\n  });\n\n  const createRequestBody = (userMessage: ChatMessage) => {\n    // Create base request body - always use the vGPU knowledge base\n    const requestBody: GenerateRequest = {\n      messages: messages.concat(userMessage).map((msg) => ({\n        role: msg.role,\n        content: msg.content,\n      })),\n      collection_name: \"vgpu_knowledge_base\",  // Always use the pre-loaded collection\n      temperature,\n      top_p: topP,\n      reranker_top_k: rerankerTopK,\n      vdb_top_k: vdbTopK,\n      confidence_threshold: confidenceScoreThreshold,\n      use_knowledge_base: true,  // Always use knowledge base\n      enable_citations: includeCitations,\n      enable_guardrails: useGuardrails,\n    };\n\n    // Only include model parameters if the environment variables are set\n    if (process.env.NEXT_PUBLIC_MODEL_NAME) {\n      requestBody.model = process.env.NEXT_PUBLIC_MODEL_NAME;\n    }\n\n    if (process.env.NEXT_PUBLIC_EMBEDDING_MODEL) {\n      requestBody.embedding_model = process.env.NEXT_PUBLIC_EMBEDDING_MODEL;\n    }\n\n    if (process.env.NEXT_PUBLIC_RERANKER_MODEL) {\n      requestBody.reranker_model = process.env.NEXT_PUBLIC_RERANKER_MODEL;\n    }\n\n    return requestBody;\n  };\n\n  const handleError = (messageId: string) => {\n    setMessages((prev) =>\n      prev.map((msg) =>\n        msg.id === messageId\n          ? {\n              ...msg,\n              content: \"Sorry, there was an error processing your request.\",\n            }\n          : msg\n      )\n    );\n  };\n\n  const handleWizardSubmit = async (generatedQuery: string) => {\n    // Process query silently without showing it as a user message\n    if (!generatedQuery.trim()) return;\n\n    resetStream();\n    const controller = startStream();\n\n    // Clear previous messages and only show the new configuration\n    setMessages([]);\n    \n    // Only create assistant message (no user message shown)\n    const assistantMessage = createAssistantMessage();\n    setMessages([assistantMessage]);\n\n    // Debug confidence score threshold being used\n    console.log(`Submitting wizard query with confidence threshold: ${confidenceScoreThreshold}`);\n\n    try {\n      // Create the request with the query but don't show it in chat\n      const silentUserMessage = createUserMessage(generatedQuery);\n      const requestBody: GenerateRequest = {\n        messages: [silentUserMessage].map((msg) => ({\n          role: msg.role,\n          content: msg.content,\n        })),\n        collection_name: \"vgpu_knowledge_base\",\n        temperature,\n        top_p: topP,\n        reranker_top_k: rerankerTopK,\n        vdb_top_k: vdbTopK,\n        confidence_threshold: confidenceScoreThreshold,\n        use_knowledge_base: true,\n        enable_citations: includeCitations,\n        enable_guardrails: useGuardrails,\n      };\n\n      // Include model parameters if set\n      if (process.env.NEXT_PUBLIC_MODEL_NAME) {\n        requestBody.model = process.env.NEXT_PUBLIC_MODEL_NAME;\n      }\n      if (process.env.NEXT_PUBLIC_EMBEDDING_MODEL) {\n        requestBody.embedding_model = process.env.NEXT_PUBLIC_EMBEDDING_MODEL;\n      }\n      if (process.env.NEXT_PUBLIC_RERANKER_MODEL) {\n        requestBody.reranker_model = process.env.NEXT_PUBLIC_RERANKER_MODEL;\n      }\n\n      const response = await fetch(\"/api/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestBody),\n        signal: controller.signal,\n      });\n\n      if (!response.ok)\n        throw new Error(`HTTP error! status: ${response.status}`);\n\n      await processStream(response, assistantMessage.id, setMessages, confidenceScoreThreshold);\n    } catch (error: unknown) {\n      if (error instanceof Error && error.name === \"AbortError\") {\n        console.log(\"Stream aborted\");\n        return;\n      }\n      console.error(\"Error generating response:\", error);\n      handleError(assistantMessage.id);\n    }\n  };\n\n  return (\n    <div className=\"flex h-[calc(100vh-56px)] bg-[#121212]\">\n      <div\n        className={`flex flex-1 transition-all duration-300 ${\n          !!activePanel ? \"mr-[400px]\" : \"\"\n        }`}\n      >\n        <div className=\"relative flex-1\">\n          <RightSidebar />\n          <div className=\"flex h-full flex-col\">\n            <div className=\"flex-1 overflow-y-auto p-4\">\n              <div className=\"mx-auto max-w-3xl space-y-6\">\n                {messages.map((msg) => (\n                  <div\n                    key={msg.id}\n                    className={`flex ${\n                      msg.role === \"user\" ? \"justify-end\" : \"justify-start\"\n                    }`}\n                  >\n                    <div\n                      className={`max-w-2xl rounded-lg p-4 ${\n                        msg.role === \"user\"\n                          ? \"bg-neutral-800 text-white\"\n                          : \"bg-neutral-800 text-white\"\n                      }`}\n                    >\n                      <div className=\"text-sm\">\n                        {msg.content\n                          ? renderMessageContent(msg.content, false)\n                          : msg.role === \"assistant\" && streamState.isTyping\n                            ? renderMessageContent(\"\", true)\n                            : \"\"}\n                      </div>\n                      {msg.citations && (\n                        <div className=\"mt-2 text-xs text-gray-400\">\n                          <button\n                            onClick={() =>\n                              handleToggleSidebar(\"citations\", msg.citations)\n                            }\n                            className=\"text-[var(--nv-green)] hover:underline\"\n                          >\n                            {msg.citations.length} Citations\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                <div ref={messagesEndRef} />\n              </div>\n            </div>\n\n            <div className=\"flex-shrink-0 border-t border-neutral-800\">\n              <div className=\"p-4\">\n                <button\n                  onClick={() => setIsWizardOpen(true)}\n                  className=\"w-full bg-gradient-to-r from-green-600 to-green-700 text-white p-4 rounded-lg shadow-lg hover:from-green-700 hover:to-green-800 transition-all duration-200 hover:scale-[1.02] flex items-center justify-center space-x-3\"\n                  title=\"Open Workload Configuration Wizard\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n                  </svg>\n                  <span className=\"text-lg font-bold\">vGPU</span>\n                  <span className=\"font-medium\">Initialize Sizing Job</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Workload Configuration Wizard */}\n      <WorkloadConfigWizard\n        isOpen={isWizardOpen}\n        onClose={() => setIsWizardOpen(false)}\n        onSubmit={handleWizardSubmit}\n      />\n\n      {/* vGPU Configuration Drawer */}\n      <VGPUConfigDrawer\n        config={drawerConfig}\n        isOpen={isDrawerOpen}\n        onClose={() => setIsDrawerOpen(false)}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6298, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/components/Header/Header.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport Image from \"next/image\";\n\ninterface HeaderProps {\n  onToggleSidebar: (panel: \"citations\") => void;\n  activePanel: \"citations\" | null;\n}\n\nexport default function Header({ onToggleSidebar, activePanel }: HeaderProps) {\n  return (\n    <div className=\"flex h-14 items-center justify-between border-b border-neutral-800 bg-black px-4\">\n      <div className=\"flex items-center gap-2\">\n        <Image\n          src=\"/nvidia-logo.svg\"\n          alt=\"NVIDIA Logo\"\n          width={128}\n          height={24}\n        />\n        <span className=\"text-lg font-semibold text-white\">AI vWS Sizing Advisor</span>\n      </div>\n\n      <div className=\"absolute left-1/2 -translate-x-1/2 transform\"></div>\n      <span className=\"rounded-lg border border-neutral-800 bg-neutral-900 px-8 py-1 text-sm text-neutral-100\">\n        {process.env.NEXT_PUBLIC_MODEL_NAME || \"Model not found\"}\n      </span>\n\n      <div className=\"flex items-center gap-4\">\n        <button\n          onClick={() => onToggleSidebar(\"citations\")}\n          className={`flex items-center gap-2 text-sm ${\n            activePanel === \"citations\" ? \"text-white\" : \"text-gray-400\"\n          } transition-colors hover:text-white`}\n        >\n          <Image\n            src=\"/citations.svg\"\n            alt=\"Citations Icon\"\n            width={16}\n            height={16}\n          />\n          Citations\n        </button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;AA0BxB;;AAtBT;AAFA;;;AASe,SAAS,OAAO,EAAE,eAAe,EAAE,WAAW,EAAe;IAC1E,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;;;;;;kCAEV,6LAAC;wBAAK,WAAU;kCAAmC;;;;;;;;;;;;0BAGrD,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAK,WAAU;0BACb,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI;;;;;;0BAGzC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,SAAS,IAAM,gBAAgB;oBAC/B,WAAW,CAAC,gCAAgC,EAC1C,gBAAgB,cAAc,eAAe,gBAC9C,mCAAmC,CAAC;;sCAErC,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;;;;;;wBACR;;;;;;;;;;;;;;;;;;AAMZ;KApCwB","debugId":null}},
    {"offset": {"line": 6414, "column": 0}, "map": {"version":3,"sources":["file:///home/nvadmin/Desktop/ai-vws-sizing-tool/frontend/src/app/page.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\"use client\";\n\nimport Chat from \"./components/Chat/Chat\";\nimport Header from \"./components/Header/Header\";\nimport { useSidebar } from \"./context/SidebarContext\";\n\nexport default function Home() {\n  const { activePanel, toggleSidebar } = useSidebar();\n\n  return (\n    <div className=\"flex h-screen flex-col\">\n      <Header onToggleSidebar={toggleSidebar} activePanel={activePanel === \"citations\" ? \"citations\" : null} />\n      <div className=\"flex-1\">\n        <Chat />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;AAIjC;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,aAAU,AAAD;IAEhD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,gJAAA,CAAA,UAAM;gBAAC,iBAAiB;gBAAe,aAAa,gBAAgB,cAAc,cAAc;;;;;;0BACjG,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,4IAAA,CAAA,UAAI;;;;;;;;;;;;;;;;AAIb;GAXwB;;QACiB,2IAAA,CAAA,aAAU;;;KAD3B","debugId":null}}]
}