events {
    worker_connections 1024;
}

http {
    proxy_ssl_server_name on;

    proxy_cache_path /server_cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=14d use_temp_path=off;

    error_log /dev/stdout info;

    log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent"'
                            'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format cache_log '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'Cache: $upstream_cache_status';

    log_format no_cache_log '[NOCACHE] $remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            'Cache: $upstream_cache_status';

    include /etc/nginx/conf.d/10-variables.conf;

    # upstream loadbalancer {

    #     # enable sticky session based on IP
    #     ip_hash;
    #     keepalive 1024;

    #     server cve-tool:26302;
    # }

    server {
        listen                  81;
        # listen                  443 ssl;
        # listen                  [::]:443 ssl;
        # server_name             localhost;
        # ssl_certificate         /etc/nginx/ssl/cert.pem;
        # ssl_certificate_key     /etc/nginx/ssl/key.pem;

        proxy_http_version 1.1;
        proxy_set_header Host $host;

        proxy_busy_buffers_size   512k;
        proxy_buffers   4 512k;
        proxy_buffer_size   256k;

        # rewrite_log on;

        # location / {
        #     proxy_pass "http://loadbalancer";
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host;
        # }

        location /openai {
            proxy_set_header Host api.openai.com;

            location ~* ^\/openai\/v1\/((engines\/.+\/)?(?:chat\/completions|completions|edits|moderations|answers|embeddings))$ {
                rewrite ^\/openai(\/.*)$ $1 break;
                proxy_pass https://api.openai.com;
                proxy_set_header Connection '';
                proxy_cache my_cache;
                proxy_cache_methods POST;
                proxy_cache_key "$request_method|$request_uri|$request_body";
                proxy_cache_valid 200 14d;
                proxy_cache_valid 404 1m;
                proxy_read_timeout 8m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_background_update on;
                proxy_cache_lock on;
                access_log /dev/stdout cache_log;
                proxy_ignore_headers Cache-Control;
                proxy_ignore_headers "Set-Cookie";
                proxy_hide_header "Set-Cookie";
                add_header X-Cache-Status $upstream_cache_status;
                client_body_buffer_size 4m;
            }

            location /openai/v1 {
                rewrite ^\/openai(\/.*)$ $1 break;
                proxy_pass https://api.openai.com;
                access_log /dev/stdout no_cache_log;
            }
        }

        location /nemo {
            proxy_set_header Host api.llm.ngc.nvidia.com;

            location ~* ^\/nemo\/v1\/models(\/.+\/completions)?$ {
                rewrite ^\/nemo(\/.*)$ $1 break;
                proxy_pass https://api.llm.ngc.nvidia.com;
                proxy_set_header Connection '';
                proxy_set_header Authorization $nemo_http_authorization;
                proxy_set_header Organization-ID $nemo_http_organization_id;
                proxy_cache my_cache;
                proxy_cache_methods GET POST;
                proxy_cache_key "$request_method|$request_uri|$request_body";
                proxy_cache_valid 200 14d;
                proxy_cache_valid 404 1m;
                proxy_read_timeout 8m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_background_update on;
                proxy_cache_lock on;
                access_log /dev/stdout cache_log;
                proxy_ignore_headers Cache-Control;
                proxy_ignore_headers "Set-Cookie";
                proxy_hide_header "Set-Cookie";
                add_header X-Cache-Status $upstream_cache_status;
                client_body_buffer_size 4m;
            }

            location /nemo/v1 {
                rewrite ^\/nemo(\/.*)$ $1 break;
                proxy_pass https://api.llm.ngc.nvidia.com;
                access_log /dev/stdout no_cache_log;
            }
        }

        location /nvcf {
            proxy_set_header Host api.nvcf.nvidia.com;

            location ~* ^\/nvcf\/v2\/nvcf\/(pexec\/functions\/.+)$ {
                rewrite ^\/nvcf(\/.*)$ $1 break;
                proxy_pass https://api.nvcf.nvidia.com;
                proxy_set_header Connection '';
                proxy_set_header Authorization $nvcf_http_authorization;
                proxy_cache my_cache;
                proxy_cache_methods POST;
                proxy_cache_key "$request_method|$request_uri|$request_body";
                proxy_cache_valid 200 14d;
                proxy_cache_valid 202 14d;
                proxy_cache_valid 404 1m;
                proxy_read_timeout 8m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_background_update on;
                proxy_cache_lock on;
                access_log /dev/stdout cache_log;
                proxy_ignore_headers Cache-Control;
                proxy_ignore_headers "Set-Cookie";
                proxy_hide_header "Set-Cookie";
                add_header X-Cache-Status $upstream_cache_status always;
                client_body_buffer_size 4m;
            }

            location ~* ^\/nvcf\/v2\/nvcf\/(pexec\/status\/.+)$ {
                rewrite ^\/nvcf(\/.*)$ $1 break;
                proxy_pass https://api.nvcf.nvidia.com;
                proxy_set_header Connection '';
                proxy_set_header Authorization $nvcf_http_authorization;
                proxy_cache my_cache;
                proxy_cache_methods GET;
                proxy_cache_key "$request_method|$request_uri";
                proxy_cache_valid 200 14d;
                proxy_cache_valid 404 1m;
                proxy_read_timeout 8m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_background_update on;
                proxy_cache_lock on;
                access_log /dev/stdout cache_log;
                proxy_ignore_headers Cache-Control;
                proxy_ignore_headers "Set-Cookie";
                proxy_hide_header "Set-Cookie";
                add_header X-Cache-Status $upstream_cache_status always;
                client_body_buffer_size 4m;
            }

            location /nvcf/v2 {
                rewrite ^\/nvcf(\/.*)$ $1 break;
                proxy_pass https://api.nvcf.nvidia.com;
                access_log /dev/stdout no_cache_log;
            }
        }

        location /serpapi/ {
            proxy_set_header Host serpapi.com;

            proxy_pass https://serpapi.com/;
            proxy_set_header Connection '';
            proxy_cache my_cache;
            proxy_cache_methods GET;
            proxy_cache_key "$request_method|$request_uri";
            proxy_cache_valid 200 14d;
            proxy_cache_valid 404 1m;
            proxy_read_timeout 8m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            access_log /dev/stdout cache_log;
            proxy_ignore_headers Cache-Control;
            proxy_ignore_headers "Set-Cookie";
            proxy_hide_header "Set-Cookie";
            add_header X-Cache-Status $upstream_cache_status;
            client_body_buffer_size 4m;
        }
    }
}
