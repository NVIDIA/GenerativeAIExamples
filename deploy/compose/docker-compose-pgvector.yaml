services:

  llm:
    container_name: llm-inference-server
    image: llm-inference-server:latest
    build:
      context: ../.././RetrievalAugmentedGeneration/llm-inference-server/
      dockerfile: Dockerfile
    volumes:
    - ${MODEL_DIRECTORY:?please update the env file and source it before running}:/model
    command: ${MODEL_ARCHITECTURE:?please update the env file and source it before running} --max-input-length ${MODEL_MAX_INPUT_LENGTH:-3000} --max-output-length ${MODEL_MAX_OUTPUT_LENGTH:-512} ${QUANTIZATION:+--quantization $QUANTIZATION}
    ports:
    - "8000:8000"
    - "8001:8001"
    - "8002:8002"
    expose:
      - "8000"
      - "8001"
      - "8002"
    shm_size: 20gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${INFERENCE_GPU_COUNT:-all}
              capabilities: [gpu]

  pgvector:
    container_name: pgvector
    image: ankane/pgvector:v0.5.1
    ports:
    - 5432:5432
    expose:
    - "5432"
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/data:/var/lib/postgresql/data
    environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    - POSTGRES_USER=${POSTGRES_USER:-postgres}
    - POSTGRES_DB=${POSTGRES_DB:-api}

  query:
    container_name: chain-server
    image: chain-server:latest
    build:
      context: ../../
      dockerfile: ./RetrievalAugmentedGeneration/Dockerfile
      args:
        EXAMPLE_NAME: ${RAG_EXAMPLE}
    command: --port 8081 --host 0.0.0.0
    environment:
      APP_VECTORSTORE_URL: "${POSTGRES_HOST_IP:-pgvector}:${POSTGRES_PORT_NUMBER:-5432}"
      APP_VECTORSTORE_NAME: "pgvector"
      APP_LLM_SERVERURL: "llm:8001"
      APP_LLM_MODELNAME: "ensemble"
      APP_LLM_MODELENGINE: "triton-trt-llm"
      APP_CONFIG_FILE: ${APP_CONFIG_FILE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-api}
      COLLECTION_NAME: ${RAG_EXAMPLE}
    volumes:
      - ${APP_CONFIG_FILE}:${APP_CONFIG_FILE}
    ports:
    - "8081:8081"
    expose:
    - "8081"
    shm_size: 5gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - "pgvector"
      - "llm"

  frontend:
    container_name: llm-playground
    image: llm-playground:latest
    build:
      context: ../.././RetrievalAugmentedGeneration/frontend/
      dockerfile: Dockerfile
    command: --port 8090
    environment:
      APP_SERVERURL: http://query
      APP_SERVERPORT: 8081
      APP_MODELNAME: ${MODEL_NAME:-${MODEL_ARCHITECTURE}}
      RIVA_API_URI: ${RIVA_API_URI}
      RIVA_API_KEY: ${RIVA_API_KEY}
      RIVA_FUNCTION_ID: ${RIVA_FUNCTION_ID}
      TTS_SAMPLE_RATE: ${TTS_SAMPLE_RATE}
    ports:
    - "8090:8090"
    expose:
    - "8090"
    depends_on:
    - query

networks:
  default:
    name: nvidia-llm
