apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.ragServer.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.ragServer.name }}
spec:
  replicas: {{ .Values.ragServer.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.ragServer.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.ragServer.name }}
    spec:
      {{- if .Values.imagePullSecret.name }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
      {{- end }}
      initContainers:
      - name: init-check-rag-server
        imagePullPolicy: Always
        image: nvcr.io/nvidia/base/ubuntu:22.04_20240212
        command:
        - /bin/bash
        - -c
        - |
          apt update && apt install curl -y &&
          until curl -sf http://nemo-ranking-ms:8000/v1/health/ready  && curl -sf http://nemo-embedding-ms:8000/v1/health/ready && curl -sf http://milvus:9091/healthz ; do
            echo "Waiting for all APIs to be healthy..."
            sleep 10
          done
          echo "Grace time for all services to be ready after health check passes.."
          sleep 30
      containers:
      - name: {{ .Values.ragServer.name }}
        imagePullPolicy: {{ .Values.ragServer.image.pullPolicy }}
        image: {{ .Values.ragServer.image.repository }}:{{- .Values.ragServer.image.tag | default .Chart.AppVersion }}
        command:
        - uvicorn
        - src.server:app
        - --port
        - {{ .Values.ragServer.service.targetPort | quote }}
        - --host
        - "0.0.0.0"
        - --workers
        - {{ .Values.ragServer.concurrentWorkers | quote }}
        env:
          - name: EXAMPLE_PATH
            value: {{ .Values.ragServer.env.EXAMPLE_PATH | quote }}
          - name: APP_VECTORSTORE_URL
            value: {{ .Values.ragServer.env.APP_VECTORSTORE_URL | quote }}
          - name: APP_VECTORSTORE_NAME
            value: {{ .Values.ragServer.env.APP_VECTORSTORE_NAME | quote }}
          - name: APP_VECTORSTORE_INDEXTYPE
            value: {{ .Values.ragServer.env.APP_VECTORSTORE_INDEXTYPE | quote }}
          - name: APP_LLM_MODELNAME
            value: {{ .Values.ragServer.env.APP_LLM_MODELNAME | quote }}
          - name: APP_LLM_SERVERURL
            value: {{ .Values.ragServer.env.APP_LLM_SERVERURL | quote }}
          - name: APP_LLM_MODELENGINE
            value: {{ .Values.ragServer.env.APP_LLM_MODELENGINE | quote }}
          - name: APP_EMBEDDINGS_SERVERURL
            value: {{ .Values.ragServer.env.APP_EMBEDDINGS_SERVERURL | quote }}
          - name: APP_EMBEDDINGS_MODELNAME
            value: {{ .Values.ragServer.env.APP_EMBEDDINGS_MODELNAME | quote }}
          - name: APP_EMBEDDINGS_MODELENGINE
            value: {{ .Values.ragServer.env.APP_EMBEDDINGS_MODELENGINE | quote }}
          - name: APP_RANKING_SERVERURL
            value: {{ .Values.ragServer.env.APP_RANKING_SERVERURL | quote }}
          - name: APP_RANKING_MODELNAME
            value: {{ .Values.ragServer.env.APP_RANKING_MODELNAME | quote }}
          - name: APP_RANKING_MODELENGINE
            value: {{ .Values.ragServer.env.APP_RANKING_MODELENGINE | quote }}
          - name: COLLECTION_NAME
            value: {{ .Values.ragServer.env.COLLECTION_NAME | quote }}
          - name: APP_RETRIEVER_TOPK
            value: {{ .Values.ragServer.env.APP_RETRIEVER_TOPK | quote }}
          - name: VECTOR_DB_TOPK
            value: {{ .Values.ragServer.env.VECTOR_DB_TOPK | quote }}
          - name: APP_RETRIEVER_SCORETHRESHOLD
            value: {{ .Values.ragServer.env.APP_RETRIEVER_SCORETHRESHOLD | quote }}
          - name: APP_TEXTSPLITTER_MODELNAME
            value: {{ .Values.ragServer.env.APP_TEXTSPLITTER_MODELNAME | quote }}
          - name: APP_TEXTSPLITTER_CHUNKSIZE
            value: {{ .Values.ragServer.env.APP_TEXTSPLITTER_CHUNKSIZE | quote }}
          - name: APP_TEXTSPLITTER_CHUNKOVERLAP
            value: {{ .Values.ragServer.env.APP_TEXTSPLITTER_CHUNKOVERLAP | quote }}
          - name: ENABLE_MULTITURN
            value: {{ .Values.ragServer.env.ENABLE_MULTITURN | quote }}
          - name: ENABLE_QUERYREWRITER
            value: {{ .Values.ragServer.env.ENABLE_QUERYREWRITER | quote }}
          - name: CONVERSATION_HISTORY
            value: {{ .Values.ragServer.env.CONVERSATION_HISTORY | quote }}
          - name: LOGLEVEL
            value: {{ .Values.ragServer.env.LOGLEVEL | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.ragServer.service.targetPort }}
          protocol: TCP
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - name: prompt-volume
            mountPath: /prompt.yaml
            subPath: prompt.yaml
        resources:
          {{- toYaml .Values.ragServer.resources | nindent 10 }}
      {{- with .Values.ragServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ragServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ragServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      - name: prompt-volume
        configMap:
          name: prompt-config
          defaultMode: 0555

---
apiVersion: v1
kind: Service
metadata:
  name:  {{ .Values.ragServer.name }}
spec:
  type: {{ .Values.ragServer.service.type }}
  selector:
    app.kubernetes.io/name: {{ .Values.ragServer.name }}
{{- with .Values.ragServer.service.ports }}
  ports:
  {{- toYaml . | nindent 4 }}
{{- end }}
