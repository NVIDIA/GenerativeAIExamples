{{- $pvcUsingTemplate := and .Values.persistence.enabled .Values.statefulSet.enabled (not .Values.persistence.existingClaim) (ne .Values.persistence.accessMode "ReadWriteMany")| ternary true false }}
---
{{- if not .Values.multiNode.enabled }}
apiVersion: apps/v1
{{- if .Values.statefulSet.enabled }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "nim-llm.fullname" . }}
  labels:
    {{- include "nim-llm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nim-llm.selectorLabels" . | nindent 6 }}
      {{- if .Values.model.labels }}
      {{- toYaml .Values.model.labels | nindent 6 }}
      {{- end }}
  {{- if .Values.statefulSet.enabled }}
  serviceName: {{ .Values.service.name | default (include "nim-llm.fullname" .) }}-sts
  podManagementPolicy: "Parallel"
  {{ else }}
  progressDeadlineSeconds: 3600
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nim-llm.selectorLabels" . | nindent 8 }}
        {{- if .Values.model.labels }}
        {{- toYaml .Values.model.labels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nim-llm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- with .Values.initContainers.ngcInit }}
        - name: ngc-model-puller
          image: "{{ .imageName  | default "eclipse/debian_jre" }}:{{ .imageTag | default "latest" }}"
          command: ["/bin/bash", "-c"]
          args: ["/scripts/ngc_pull.sh"]
          env:
            - name: NGC_CLI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .secretName }}"
                  key: NGC_CLI_API_KEY
            - name: NGC_DECRYPT_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .secretName }}"
                  key: NGC_DECRYPT_KEY
                  optional: true
            - name: STORE_MOUNT_PATH
              value: {{ .env.STORE_MOUNT_PATH | quote }}
            - name: NGC_CLI_ORG
              value: {{ .env.NGC_CLI_ORG | quote }}
            - name: NGC_CLI_TEAM
              value: {{ .env.NGC_CLI_TEAM | quote }}
            - name: NGC_CLI_VERSION
              value: {{ .env.NGC_CLI_VERSION | quote }}
            - name: NGC_MODEL_NAME
              value: {{ .env.NGC_MODEL_NAME | quote }}
            - name: NGC_MODEL_VERSION
              value: {{ .env.NGC_MODEL_VERSION | quote }}
            - name: MODEL_NAME
              value: {{ .env.MODEL_NAME | quote }}
            - name: TARFILE
              value: {{ .env.TARFILE | quote }}
            - name: NGC_EXE
              value: {{ .env.NGC_EXE | default "ngc" | quote }}
            - name: DOWNLOAD_NGC_CLI
              value: {{ .env.DOWNLOAD_NGC_CLI | default "false" | quote }}
          volumeMounts:
            - mountPath: /scripts
              name: scripts-volume
            - mountPath: /model-store
              name: model-store
      {{- end }}
      {{- range .Values.initContainers.extraInit }}
        - {{ . | toYaml | nindent 10 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.customCommand .Values.model.legacyCompat }}
          command:
            {{- if .Values.customCommand }}
            {{- range .Values.customCommand }}
             - {{ . | quote }}
            {{- end }}
            {{- else }}
            - nemollm_inference_ms
            - --model_name
            - {{ .Values.model.name | quote }}
            - --num_gpus
            - {{ .Values.model.numGpus | quote }}
            {{- if .Values.model.nemo_port }}
            - --nemo_port
            - {{ .Values.model.nemo_port | quote }}
            {{- end }}
            - --openai_port
            - {{ .Values.model.openai_port | default .Values.model.openaiPort | quote }}
            {{- if .Values.model.openai_host }}
            - --host
            - {{ .Values.model.openai_host | quote }}
            {{- end }}
            {{- if .Values.healthPort }}
            - --health_port
            - {{ .Values.healthPort | quote }}
            {{- end }}
            {{- if .Values.model.numWorkers }}
            - --num_workers
            - {{ .Values.model.numWorkers | quote }}
            {{- end }}
            {{- if .Values.model.logLevel }}
            - --log_level
            - {{ .Values.model.logLevel | quote }}
            {{- end }}
            {{- if .Values.model.tritonURL }}
            - --triton_url
            - {{ .Values.model.tritonURL | quote }}
            {{- end }}
            {{- if .Values.model.tritonModelName }}
            - --triton_model_name
            - {{ .Values.model.tritonModelName | quote }}
            {{- end }}
            {{- if .Values.model.trtModelName }}
            - --trt_model_name
            - {{ .Values.model.trtModelName | quote }}
            {{- end }}
            {{- if .Values.model.customizationSource }}
            - --customization_source
            - {{ .Values.model.customizationSource | quote }}
            {{- end }}
            {{- if .Values.model.dataStoreURL }}
            - --data_store_url
            - {{ .Values.model.dataStoreURL | quote }}
            {{- end }}
            {{- if .Values.model.modelStorePath }}
            - --model_store_path
            - {{ .Values.model.modelStorePath | quote }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.customArgs }}
          args:
            {{- if .Values.customArgs }}
            {{- range .Values.customArgs }}
             - {{ . | quote }}
            {{- end }}
            {{- end }}
          {{- end }}
          env:
            - name: NIM_CACHE_PATH
              value: {{ .Values.model.nimCache | quote }}
            - name: NGC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.model.ngcAPISecret }}
                  key: NGC_API_KEY
            - name: OUTLINES_CACHE_DIR
              value: /tmp/outlines
            - name: NIM_SERVER_PORT
              value: {{ .Values.model.openaiPort | quote }}
            - name: NIM_JSONL_LOGGING
              value: {{ ternary "1" "0" .Values.model.jsonLogging | quote }}
            - name: NIM_LOG_LEVEL
              value: {{ .Values.model.logLevel | quote }}
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
          ports:
            {{- include "nim-llm.ports" . | nindent 12 }}
          {{- include "nim-llm.probes" . | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- include "nim-llm.volumeMounts" . | nindent 12 }}
      terminationGracePeriodSeconds: 60
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: scripts-volume
          configMap:
            name: {{ include "nim-llm.fullname" . }}-scripts-configmap
            defaultMode: 0555
        {{- if not $pvcUsingTemplate }}
        - name: model-store
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName:  {{ .Values.persistence.existingClaim | default (include "nim-llm.fullname" .) }}
          {{- else if .Values.hostPath.enabled }}
          hostPath:
            path: {{ .Values.hostPath.path }}
            type: DirectoryOrCreate
          {{- else if .Values.nfs.enabled }}
          nfs:
            server: {{ .Values.nfs.server | quote }}
            path: {{ .Values.nfs.path }}
            readOnly: {{ .Values.nfs.readOnly }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
      {{- if .Values.extraVolumes }}
      {{- range $k, $v := .Values.extraVolumes }}
        - name: {{ $k }}
          {{- toYaml $v | nindent 10 }}
      {{- end }}
      {{- end }}
  {{- if $pvcUsingTemplate }}
  {{- with .Values.persistence.stsPersistentVolumeClaimRetentionPolicy }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .whenDeleted }}
    whenScaled: {{ .whenScaled }}
  {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: model-store
      labels:
        {{- include "nim-llm.labels" . | nindent 8 }}
      {{- with .Values.persistence.annotations  }}
      annotations:
        {{ toYaml . | indent 4 }}
      {{- end }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
    {{- end }}
  {{- end }}
{{- end }}
