{
  "openapi": "3.1.0",
  "info": {
    "title": "APIs for NVIDIA RAG Ingestion Server",
    "description": "This API schema describes all the Ingestion endpoints exposed for NVIDIA RAG server Blueprint",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/v1"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health APIs"
        ],
        "summary": "Health Check",
        "description": "Perform a Health Check\n\nReturns 200 when service is up. This does not check the health of downstream services.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "post": {
        "tags": [
          "Ingestion APIs"
        ],
        "summary": "Upload Document",
        "description": "Upload a document to the vector store.",
        "operationId": "upload_document_documents_post",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_documents_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListResponse"
                }
              }
            }
          },
          "499": {
            "description": "Client Closed Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "The client cancelled the request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Ingestion APIs"
        ],
        "summary": "Delete And Upload Document",
        "description": "Upload a document to the vector store. If the document already exists, it will be replaced.",
        "operationId": "delete_and_upload_document_documents_patch",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_and_upload_document_documents_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListResponse"
                }
              }
            }
          },
          "499": {
            "description": "Client Closed Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "The client cancelled the request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Ingestion APIs"
        ],
        "summary": "Get Documents",
        "description": "Get list of document ingested in vectorstore.",
        "operationId": "get_documents_documents_get",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "multimodal_data",
              "title": "Collection Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListResponse"
                }
              }
            }
          },
          "499": {
            "description": "Client Closed Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "The client cancelled the request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ingestion APIs"
        ],
        "summary": "Delete Documents",
        "description": "Delete a document from vectorstore.",
        "operationId": "delete_documents_documents_delete",
        "parameters": [
          {
            "name": "collection_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "multimodal_data",
              "title": "Collection Name"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": [],
                "title": "Document Names"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListResponse"
                }
              }
            }
          },
          "499": {
            "description": "Client Closed Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "The client cancelled the request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "Vector DB APIs"
        ],
        "summary": "Get Collections",
        "description": "Endpoint to get a list of collection names from the Milvus server.\nReturns a list of collection names.",
        "operationId": "get_collections_collections_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionListResponse"
                }
              }
            }
          },
          "499": {
            "description": "Client Closed Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "The client cancelled the request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vector DB APIs"
        ],
        "summary": "Create Collections",
        "description": "Endpoint to create a collection from the Milvus server.\nReturns status message.",
        "operationId": "create_collections_collections_post",
        "parameters": [
          {
            "name": "collection_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "text",
              "title": "Collection Type"
            }
          },
          {
            "name": "embedding_dimension",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 2048,
              "title": "Embedding Dimension"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": [
                  "multimodal_data"
                ],
                "title": "Collection Names"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          },
          "499": {
            "description": "Client Closed Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "The client cancelled the request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vector DB APIs"
        ],
        "summary": "Delete Collections",
        "description": "Endpoint to delete a collection from the Milvus server.\nReturns status message.",
        "operationId": "delete_collections_collections_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": [
                  "multimodal_data"
                ],
                "title": "Collection Names"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          },
          "499": {
            "description": "Client Closed Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "The client cancelled the request"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Internal server error occurred"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_delete_and_upload_document_documents_patch": {
        "properties": {
          "documents": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Documents"
          },
          "data": {
            "type": "string",
            "title": "Data",
            "description": "JSON data in string format containing metadata about the documents which needs to be uploaded.",
            "examples": [
              "{\"collection_name\": \"multimodal_data\", \"extraction_options\": {\"extract_text\": true, \"extract_tables\": true, \"extract_charts\": true, \"extract_images\": false, \"extract_method\": \"pdfium\", \"text_depth\": \"page\"}, \"split_options\": {\"chunk_size\": 1024, \"chunk_overlap\": 150}}"
            ]
          }
        },
        "type": "object",
        "required": [
          "documents",
          "data"
        ],
        "title": "Body_delete_and_upload_document_documents_patch"
      },
      "Body_upload_document_documents_post": {
        "properties": {
          "documents": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Documents"
          },
          "data": {
            "type": "string",
            "title": "Data",
            "description": "JSON data in string format containing metadata about the documents which needs to be uploaded.",
            "examples": [
              "{\"collection_name\": \"multimodal_data\", \"extraction_options\": {\"extract_text\": true, \"extract_tables\": true, \"extract_charts\": true, \"extract_images\": false, \"extract_method\": \"pdfium\", \"text_depth\": \"page\"}, \"split_options\": {\"chunk_size\": 1024, \"chunk_overlap\": 150}}"
            ]
          }
        },
        "type": "object",
        "required": [
          "documents",
          "data"
        ],
        "title": "Body_upload_document_documents_post"
      },
      "CollectionListResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Message indicating the status of the request.",
            "default": ""
          },
          "total_collections": {
            "type": "integer",
            "title": "Total Collections",
            "description": "Total number of collections uploaded.",
            "default": 0
          },
          "collections": {
            "items": {
              "$ref": "#/components/schemas/UploadedCollection"
            },
            "type": "array",
            "title": "Collections",
            "description": "List of uploaded collections.",
            "default": []
          }
        },
        "type": "object",
        "title": "CollectionListResponse",
        "description": "Response model for uploading a document."
      },
      "CollectionResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Status message of the process."
          },
          "successful": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Successful",
            "description": "List of successfully created or deleted collections."
          },
          "failed": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Failed",
            "description": "List of collections that failed to be created or deleted."
          },
          "total_success": {
            "type": "integer",
            "title": "Total Success",
            "description": "Total number of collections successfully created or deleted.",
            "default": 0
          },
          "total_failed": {
            "type": "integer",
            "title": "Total Failed",
            "description": "Total number of collections that failed to be created or deleted.",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "CollectionResponse",
        "description": "Response model for creation or deletion of collections in Milvus."
      },
      "DocumentListResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Message indicating the status of the request.",
            "default": ""
          },
          "total_documents": {
            "type": "integer",
            "title": "Total Documents",
            "description": "Total number of documents uploaded.",
            "default": 0
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/UploadedDocument"
            },
            "type": "array",
            "title": "Documents",
            "description": "List of uploaded documents.",
            "default": []
          }
        },
        "type": "object",
        "title": "DocumentListResponse",
        "description": "Response model for uploading a document."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "message": {
            "type": "string",
            "maxLength": 4096,
            "pattern": "[\\s\\S]*",
            "title": "Message",
            "default": ""
          }
        },
        "type": "object",
        "title": "HealthResponse"
      },
      "UploadedCollection": {
        "properties": {
          "collection_name": {
            "type": "string",
            "title": "Collection Name",
            "description": "Name of the collection.",
            "default": ""
          },
          "num_entities": {
            "type": "integer",
            "title": "Num Entities",
            "description": "Number of rows or entities in the collection.",
            "default": 0
          }
        },
        "type": "object",
        "title": "UploadedCollection",
        "description": "Model representing an individual uploaded document."
      },
      "UploadedDocument": {
        "properties": {
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Name of the document.",
            "default": ""
          }
        },
        "type": "object",
        "title": "UploadedDocument",
        "description": "Model representing an individual uploaded document."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "tags": [
    {
      "name": "Health APIs",
      "description": "APIs for checking and monitoring server liveliness and readiness."
    },
    {
      "name": "Ingestion APIs",
      "description": "APIs for uploading, deletion and listing documents."
    },
    {
      "name": "Vector DB APIs",
      "description": "APIs for managing collections in vector database."
    }
  ]
}