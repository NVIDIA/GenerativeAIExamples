[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 64"]

[project]
name = "asset_lifecycle_management_agent"
dynamic = ["version"]
dependencies = [
  "nvidia-nat[profiling, langchain, telemetry]==1.2.1",
  "momentfm",
  "pydantic ~= 2.10.0, <2.11.0",
  "vanna==0.7.9",
  "chromadb",
  "sqlalchemy>=2.0.0",
  "xgboost",
  "matplotlib",
  "torch",
  "pytest",
  "pytest-asyncio"
]
requires-python = ">=3.11,<3.13"
description = "Asset Lifecycle Management workflow using NeMo Agent Toolkit for comprehensive industrial asset management from acquisition through retirement"
classifiers = ["Programming Language :: Python"]
authors = [{ name = "Vineeth Kalluru" }]
maintainers = [{ name = "NVIDIA Corporation" }]

[project.optional-dependencies]
elasticsearch = [
  "elasticsearch>=8.0.0"
]
postgres = [
  "psycopg2-binary>=2.9.0"
]
mysql = [
  "pymysql>=1.0.0"
]
sqlserver = [
  "pyodbc>=4.0.0"
]
oracle = [
  "cx_Oracle>=8.0.0"
]
all-databases = [
  "psycopg2-binary>=2.9.0",
  "pymysql>=1.0.0",
  "pyodbc>=4.0.0",
  "cx_Oracle>=8.0.0"
]
all = [
  "elasticsearch>=8.0.0",
  "psycopg2-binary>=2.9.0",
  "pymysql>=1.0.0",
  "pyodbc>=4.0.0",
  "cx_Oracle>=8.0.0"
]

[project.entry-points.'nat.components']
asset_lifecycle_management_agent = "asset_lifecycle_management_agent.register"

[tool.uv.sources]
momentfm = { path = "./moment", editable = true }

[tool.setuptools]
packages = ["asset_lifecycle_management_agent"]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "asset_lifecycle_management_agent.__version__"}

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "e2e: end-to-end tests that run full workflows",
]
testpaths = [
    ".",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
